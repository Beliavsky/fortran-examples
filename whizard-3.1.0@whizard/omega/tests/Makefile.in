# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Makefile.am -- Makefile for O'Mega within and without WHIZARD
########################################################################
#
# Copyright (C) 1999-2022 by
#     Wolfgang Kilian <kilian@physik.uni-siegen.de>
#     Thorsten Ohl <ohl@physik.uni-wuerzburg.de>
#     Juergen Reuter <juergen.reuter@desy.de>
#     with contributions from
#     cf. main AUTHORS file
#
# WHIZARD is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# WHIZARD is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
########################################################################

# Makefile.ocaml -- O'Caml rules for O'Mega Makefiles
########################################################################
#
# Copyright (C) 1999-2022 by 
#     Wolfgang Kilian <kilian@physik.uni-siegen.de>
#     Thorsten Ohl <ohl@physik.uni-wuerzburg.de>
#     Juergen Reuter <juergen.reuter@desy.de>
#     with contributions from
#     cf. main AUTHORS file
#
# WHIZARD is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by 
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# WHIZARD is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
########################################################################
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

########################################################################
@FC_USE_OPENMP_TRUE@am__append_1 = $(FCFLAGS_OPENMP)
TESTS = $(am__EXEEXT_1) test_omega95$(EXEEXT) \
	test_omega95_bispinors$(EXEEXT) $(am__EXEEXT_2) ects$(EXEEXT) \
	cascade phase_space fermi$(EXEEXT) ward$(EXEEXT) \
	compare_split_function$(EXEEXT) compare_split_module$(EXEEXT) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) compare_amplitude_VM$(EXEEXT) \
	$(am__EXEEXT_5) $(am__EXEEXT_9) $(am__EXEEXT_8)
XFAIL_TESTS = $(am__EXEEXT_10)
EXTRA_PROGRAMS = $(am__EXEEXT_1) test_omega95$(EXEEXT) \
	test_omega95_bispinors$(EXEEXT) $(am__EXEEXT_2) ects$(EXEEXT) \
	fermi$(EXEEXT) ward$(EXEEXT) ward_long$(EXEEXT) \
	ward_fail$(EXEEXT) compare_split_function$(EXEEXT) \
	compare_split_module$(EXEEXT) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	compare_amplitude_VM$(EXEEXT) $(am__EXEEXT_5) \
	benchmark_VM_vs_Fortran$(EXEEXT) $(am__EXEEXT_6) \
	benchmark$(EXEEXT) benchmark_UFO_SM$(EXEEXT) \
	benchmark_UFO_SMEFT$(EXEEXT) $(am__EXEEXT_7) $(am__EXEEXT_8)

########################################################################
@OCAML_AVAILABLE_TRUE@am__append_2 = -I $(top_builddir)/omega/src
@OCAML_AVAILABLE_TRUE@am__append_3 = omega_unit
@OCAML_AVAILABLE_TRUE@am__append_4 = omega_unit

########################################################################
@OCAML_AVAILABLE_TRUE@am__append_5 = test_qed_eemm
@OCAML_AVAILABLE_TRUE@am__append_6 = test_qed_eemm

########################################################################
@OCAML_AVAILABLE_TRUE@am__append_7 = compare_majorana compare_majorana_legacy compare_majorana_UFO
# XFAIL_TESTS += compare_majorana_UFO
@OCAML_AVAILABLE_TRUE@am__append_8 = compare_majorana compare_majorana_legacy compare_majorana_UFO
@OCAML_AVAILABLE_TRUE@am__append_9 = compare_driver_majorana.sh \
@OCAML_AVAILABLE_TRUE@	compare_driver_majorana_UFO.sh \
@OCAML_AVAILABLE_TRUE@	comparisons_majorana.list \
@OCAML_AVAILABLE_TRUE@	comparisons_majorana_legacy.list \
@OCAML_AVAILABLE_TRUE@	comparisons_majorana_UFO.list

########################################################################

# At quadruple or extended precision, these tests take waaaaaayyyy too long!

########################################################################

# At quadruple or extended precision, these tests take waaaaaayyyy too long!

########################################################################

# At quadruple or extended precision, these tests take waaaaaayyyy too long!
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am__append_10 =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	compare_amplitude_UFO \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	fermi_UFO ward_UFO
# XFAIL_TESTS += compare_amplitude_UFO
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am__append_11 =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	compare_amplitude_UFO \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	fermi_UFO ward_UFO
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am__append_12 =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	compare_driver_UFO.sh \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	comparisons_UFO.list \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	fermi_driver_UFO.sh \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	fermi_UFO.list \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	ward_driver_UFO.sh \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	ward_identities_UFO.list

########################################################################
@FC_USE_OPENMP_TRUE@am__append_13 = test_openmp
@FC_USE_OPENMP_TRUE@am__append_14 = test_openmp

########################################################################
@FC_USE_OPENMP_TRUE@am__append_15 = benchmark_amp_parallel

########################################################################

########################################################################

########################################################################
@OCAML_AVAILABLE_TRUE@am__append_16 = vertex_unit ufo_unit \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib keystones_UFO \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_bispinors \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_bispinors
# XFAIL_TESTS += keystones_UFO
# XFAIL_TESTS += keystones_UFO_bispinors
@OCAML_AVAILABLE_TRUE@am__append_17 = vertex_unit ufo_unit \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib keystones_UFO \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_bispinors \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_bispinors \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_generate \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_generate \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_bispinors_generate \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_bispinors_generate

########################################################################
@RECOLA_AVAILABLE_TRUE@am__append_18 = compare_amplitude_recola

# We need more work on the parameters to pass the tests
# at quadruple or extended precision
@FC_PREC_TRUE@@RECOLA_AVAILABLE_TRUE@am__append_19 = compare_amplitude_recola
@RECOLA_AVAILABLE_TRUE@am__append_20 = compare_amplitude_recola
@RECOLA_AVAILABLE_TRUE@am__append_21 = $(RECOLA_INCLUDES)
subdir = omega/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/api_python.m4 \
	$(top_srcdir)/m4/aux.m4 $(top_srcdir)/m4/ax_check_gnu_make.m4 \
	$(top_srcdir)/m4/ax_python_devel.m4 $(top_srcdir)/m4/dl.m4 \
	$(top_srcdir)/m4/dot.m4 $(top_srcdir)/m4/fastjet.m4 \
	$(top_srcdir)/m4/fortran.m4 $(top_srcdir)/m4/gosam.m4 \
	$(top_srcdir)/m4/hdf5.m4 $(top_srcdir)/m4/hepmc.m4 \
	$(top_srcdir)/m4/hevea.m4 $(top_srcdir)/m4/hoppet.m4 \
	$(top_srcdir)/m4/latex.m4 $(top_srcdir)/m4/lcio.m4 \
	$(top_srcdir)/m4/lhapdf.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/looptools.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/noweb.m4 \
	$(top_srcdir)/m4/ocaml.m4 $(top_srcdir)/m4/openloops.m4 \
	$(top_srcdir)/m4/pythia8.m4 $(top_srcdir)/m4/qcd.m4 \
	$(top_srcdir)/m4/recola.m4 $(top_srcdir)/m4/root.m4 \
	$(top_srcdir)/m4/stdcpp.m4 $(top_srcdir)/m4/tirpc.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@OCAML_AVAILABLE_TRUE@am__EXEEXT_1 = omega_unit$(EXEEXT)
@OCAML_AVAILABLE_TRUE@am__EXEEXT_2 = test_qed_eemm$(EXEEXT)
@OCAML_AVAILABLE_TRUE@am__EXEEXT_3 = compare_majorana$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	compare_majorana_legacy$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	compare_majorana_UFO$(EXEEXT)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am__EXEEXT_4 = compare_amplitude_UFO$(EXEEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	fermi_UFO$(EXEEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	ward_UFO$(EXEEXT)
@FC_USE_OPENMP_TRUE@am__EXEEXT_5 = test_openmp$(EXEEXT)
@FC_USE_OPENMP_TRUE@am__EXEEXT_6 = benchmark_amp_parallel$(EXEEXT)
@OCAML_AVAILABLE_TRUE@am__EXEEXT_7 = vertex_unit$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	ufo_unit$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_UFO$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_bispinors$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_bispinors$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_generate$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_generate$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_bispinors_generate$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_bispinors_generate$(EXEEXT)
@RECOLA_AVAILABLE_TRUE@am__EXEEXT_8 =  \
@RECOLA_AVAILABLE_TRUE@	compare_amplitude_recola$(EXEEXT)
am_benchmark_OBJECTS = benchmark.$(OBJEXT) parameters_QCD.$(OBJEXT)
nodist_benchmark_OBJECTS = amplitude_benchmark_v1.$(OBJEXT) \
	amplitude_benchmark_v2.$(OBJEXT) \
	amplitude_benchmark_v3.$(OBJEXT)
benchmark_OBJECTS = $(am_benchmark_OBJECTS) \
	$(nodist_benchmark_OBJECTS)
benchmark_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_benchmark_UFO_SM_OBJECTS = benchmark_UFO_SM.$(OBJEXT) \
	parameters_SM_from_UFO.$(OBJEXT)
nodist_benchmark_UFO_SM_OBJECTS =  \
	amplitude_benchmark_UFO_SM.$(OBJEXT) \
	amplitude_benchmark_UFO_SM_classic.$(OBJEXT) \
	parameters_SM_UFO.$(OBJEXT)
benchmark_UFO_SM_OBJECTS = $(am_benchmark_UFO_SM_OBJECTS) \
	$(nodist_benchmark_UFO_SM_OBJECTS)
benchmark_UFO_SM_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am_benchmark_UFO_SMEFT_OBJECTS = benchmark_UFO_SMEFT.$(OBJEXT)
nodist_benchmark_UFO_SMEFT_OBJECTS =  \
	amplitude_benchmark_UFO_SMEFT.$(OBJEXT) \
	amplitude_benchmark_UFO_SMEFT_opt.$(OBJEXT) \
	parameters_UFO_SMEFT.$(OBJEXT)
benchmark_UFO_SMEFT_OBJECTS = $(am_benchmark_UFO_SMEFT_OBJECTS) \
	$(nodist_benchmark_UFO_SMEFT_OBJECTS)
benchmark_UFO_SMEFT_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am__objects_1 = omega_interface.$(OBJEXT) omega_testtools.$(OBJEXT) \
	tao_random_numbers.$(OBJEXT) parameters_QED.$(OBJEXT) \
	parameters_QCD.$(OBJEXT) parameters_SYM.$(OBJEXT) \
	parameters_SM.$(OBJEXT) parameters_SM_top_anom.$(OBJEXT)
am__objects_2 = benchmark_lib.$(OBJEXT) $(am__objects_1)
am_benchmark_VM_vs_Fortran_OBJECTS = $(am__objects_2)
nodist_benchmark_VM_vs_Fortran_OBJECTS =  \
	benchmark_VM_vs_Fortran.$(OBJEXT) \
	benchmark_processes.wrappers.$(OBJEXT)
benchmark_VM_vs_Fortran_OBJECTS =  \
	$(am_benchmark_VM_vs_Fortran_OBJECTS) \
	$(nodist_benchmark_VM_vs_Fortran_OBJECTS)
benchmark_VM_vs_Fortran_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am__benchmark_amp_parallel_SOURCES_DIST = benchmark_lib.f90 \
	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90 \
	parameters_QED.f90 parameters_QCD.f90 parameters_SYM.f90 \
	parameters_SM.f90 parameters_SM_top_anom.f90
@FC_USE_OPENMP_TRUE@am_benchmark_amp_parallel_OBJECTS =  \
@FC_USE_OPENMP_TRUE@	$(am__objects_2)
@FC_USE_OPENMP_TRUE@nodist_benchmark_amp_parallel_OBJECTS =  \
@FC_USE_OPENMP_TRUE@	benchmark_amp_parallel.$(OBJEXT) \
@FC_USE_OPENMP_TRUE@	benchmark_processes.wrappers.$(OBJEXT)
benchmark_amp_parallel_OBJECTS = $(am_benchmark_amp_parallel_OBJECTS) \
	$(nodist_benchmark_amp_parallel_OBJECTS)
@FC_USE_OPENMP_TRUE@benchmark_amp_parallel_DEPENDENCIES = $(KINDS) \
@FC_USE_OPENMP_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__compare_amplitude_UFO_SOURCES_DIST = parameters_SM_from_UFO.f90 \
	compare_lib.f90 omega_interface.f90 omega_testtools.f90 \
	tao_random_numbers.f90
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am_compare_amplitude_UFO_OBJECTS = parameters_SM_from_UFO.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	compare_lib.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	omega_interface.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	omega_testtools.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	tao_random_numbers.$(OBJEXT)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@nodist_compare_amplitude_UFO_OBJECTS = compare_amplitude_UFO.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	parameters_SM_UFO.$(OBJEXT)
compare_amplitude_UFO_OBJECTS = $(am_compare_amplitude_UFO_OBJECTS) \
	$(nodist_compare_amplitude_UFO_OBJECTS)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@compare_amplitude_UFO_DEPENDENCIES =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(KINDS) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__objects_3 = $(am__objects_1)
am__objects_4 = compare_lib.$(OBJEXT) $(am__objects_3)
am__objects_5 = parameters_SM_CKM.$(OBJEXT) \
	parameters_SM_Higgs.$(OBJEXT) parameters_THDM.$(OBJEXT) \
	parameters_THDM_CKM.$(OBJEXT) parameters_HSExt.$(OBJEXT) \
	parameters_Zprime.$(OBJEXT)
am_compare_amplitude_VM_OBJECTS = $(am__objects_4) $(am__objects_5)
nodist_compare_amplitude_VM_OBJECTS = compare_amplitude_VM.$(OBJEXT) \
	comparisons_VM.wrappers.$(OBJEXT)
compare_amplitude_VM_OBJECTS = $(am_compare_amplitude_VM_OBJECTS) \
	$(nodist_compare_amplitude_VM_OBJECTS)
compare_amplitude_VM_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am__compare_amplitude_recola_SOURCES_DIST =  \
	parameters_SM_Higgs_recola.f90 omega_interface.f90 \
	compare_lib.f90 compare_lib_recola.f90 omega_testtools.f90 \
	tao_random_numbers.f90
@RECOLA_AVAILABLE_TRUE@am_compare_amplitude_recola_OBJECTS =  \
@RECOLA_AVAILABLE_TRUE@	parameters_SM_Higgs_recola.$(OBJEXT) \
@RECOLA_AVAILABLE_TRUE@	omega_interface.$(OBJEXT) \
@RECOLA_AVAILABLE_TRUE@	compare_lib.$(OBJEXT) \
@RECOLA_AVAILABLE_TRUE@	compare_lib_recola.$(OBJEXT) \
@RECOLA_AVAILABLE_TRUE@	omega_testtools.$(OBJEXT) \
@RECOLA_AVAILABLE_TRUE@	tao_random_numbers.$(OBJEXT)
@RECOLA_AVAILABLE_TRUE@nodist_compare_amplitude_recola_OBJECTS =  \
@RECOLA_AVAILABLE_TRUE@	compare_amplitude_recola.$(OBJEXT)
compare_amplitude_recola_OBJECTS =  \
	$(am_compare_amplitude_recola_OBJECTS) \
	$(nodist_compare_amplitude_recola_OBJECTS)
am__DEPENDENCIES_1 =
@RECOLA_AVAILABLE_TRUE@compare_amplitude_recola_DEPENDENCIES =  \
@RECOLA_AVAILABLE_TRUE@	$(am__DEPENDENCIES_1) $(KINDS) \
@RECOLA_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__compare_majorana_SOURCES_DIST = compare_lib.f90 \
	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90 \
	parameters_QED.f90 parameters_QCD.f90 parameters_SYM.f90 \
	parameters_SM.f90 parameters_SM_top_anom.f90
@OCAML_AVAILABLE_TRUE@am_compare_majorana_OBJECTS = $(am__objects_4)
@OCAML_AVAILABLE_TRUE@nodist_compare_majorana_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	compare_majorana.$(OBJEXT)
compare_majorana_OBJECTS = $(am_compare_majorana_OBJECTS) \
	$(nodist_compare_majorana_OBJECTS)
@OCAML_AVAILABLE_TRUE@compare_majorana_DEPENDENCIES = $(KINDS) \
@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__compare_majorana_UFO_SOURCES_DIST = compare_lib.f90 \
	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90 \
	parameters_QED.f90 parameters_QCD.f90 parameters_SYM.f90 \
	parameters_SM.f90 parameters_SM_top_anom.f90 \
	parameters_SM_UFO.f90
@OCAML_AVAILABLE_TRUE@am_compare_majorana_UFO_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	$(am__objects_4) \
@OCAML_AVAILABLE_TRUE@	parameters_SM_UFO.$(OBJEXT)
@OCAML_AVAILABLE_TRUE@nodist_compare_majorana_UFO_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	compare_majorana_UFO.$(OBJEXT)
compare_majorana_UFO_OBJECTS = $(am_compare_majorana_UFO_OBJECTS) \
	$(nodist_compare_majorana_UFO_OBJECTS)
@OCAML_AVAILABLE_TRUE@compare_majorana_UFO_DEPENDENCIES = $(KINDS) \
@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__compare_majorana_legacy_SOURCES_DIST = compare_lib.f90 \
	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90 \
	parameters_QED.f90 parameters_QCD.f90 parameters_SYM.f90 \
	parameters_SM.f90 parameters_SM_top_anom.f90
@OCAML_AVAILABLE_TRUE@am_compare_majorana_legacy_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	$(am__objects_4)
@OCAML_AVAILABLE_TRUE@nodist_compare_majorana_legacy_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	compare_majorana_legacy.$(OBJEXT)
compare_majorana_legacy_OBJECTS =  \
	$(am_compare_majorana_legacy_OBJECTS) \
	$(nodist_compare_majorana_legacy_OBJECTS)
@OCAML_AVAILABLE_TRUE@compare_majorana_legacy_DEPENDENCIES = $(KINDS) \
@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am_compare_split_function_OBJECTS = $(am__objects_4)
nodist_compare_split_function_OBJECTS =  \
	compare_split_function.$(OBJEXT)
compare_split_function_OBJECTS = $(am_compare_split_function_OBJECTS) \
	$(nodist_compare_split_function_OBJECTS)
compare_split_function_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am_compare_split_module_OBJECTS = $(am__objects_4)
nodist_compare_split_module_OBJECTS = compare_split_module.$(OBJEXT)
compare_split_module_OBJECTS = $(am_compare_split_module_OBJECTS) \
	$(nodist_compare_split_module_OBJECTS)
compare_split_module_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am_ects_OBJECTS = color_test_lib.$(OBJEXT) parameters_SM.$(OBJEXT) \
	parameters_QED.$(OBJEXT) parameters_QCD.$(OBJEXT) \
	parameters_SYM.$(OBJEXT)
nodist_ects_OBJECTS = ects.$(OBJEXT)
ects_OBJECTS = $(am_ects_OBJECTS) $(nodist_ects_OBJECTS)
ects_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am__objects_6 = omega_interface.$(OBJEXT) omega_testtools.$(OBJEXT) \
	tao_random_numbers.$(OBJEXT) parameters_QED.$(OBJEXT) \
	parameters_QCD.$(OBJEXT) parameters_SYM.$(OBJEXT) \
	parameters_SM.$(OBJEXT) parameters_MSSM.$(OBJEXT) \
	parameters_SM_top_anom.$(OBJEXT)
am__objects_7 = fermi_lib.$(OBJEXT) $(am__objects_6)
am_fermi_OBJECTS = $(am__objects_7)
nodist_fermi_OBJECTS = fermi.$(OBJEXT)
fermi_OBJECTS = $(am_fermi_OBJECTS) $(nodist_fermi_OBJECTS)
fermi_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am__fermi_UFO_SOURCES_DIST = fermi_lib.f90 omega_interface.f90 \
	omega_testtools.f90 tao_random_numbers.f90
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am__objects_8 = omega_interface.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	omega_testtools.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	tao_random_numbers.$(OBJEXT)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am__objects_9 =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	fermi_lib.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(am__objects_8)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am_fermi_UFO_OBJECTS =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(am__objects_9)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@nodist_fermi_UFO_OBJECTS =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	fermi_UFO.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	parameters_SM_UFO.$(OBJEXT)
fermi_UFO_OBJECTS = $(am_fermi_UFO_OBJECTS) \
	$(nodist_fermi_UFO_OBJECTS)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@fermi_UFO_DEPENDENCIES =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(KINDS) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__keystones_UFO_SOURCES_DIST = omega_testtools.f90 \
	keystones_tools.f90
@OCAML_AVAILABLE_TRUE@am_keystones_UFO_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	omega_testtools.$(OBJEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_tools.$(OBJEXT)
@OCAML_AVAILABLE_TRUE@nodist_keystones_UFO_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	keystones_UFO.$(OBJEXT)
keystones_UFO_OBJECTS = $(am_keystones_UFO_OBJECTS) \
	$(nodist_keystones_UFO_OBJECTS)
@OCAML_AVAILABLE_TRUE@keystones_UFO_DEPENDENCIES = $(KINDS) \
@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__keystones_UFO_bispinors_SOURCES_DIST = omega_testtools.f90 \
	keystones_tools.f90
@OCAML_AVAILABLE_TRUE@am_keystones_UFO_bispinors_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	omega_testtools.$(OBJEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_tools.$(OBJEXT)
@OCAML_AVAILABLE_TRUE@nodist_keystones_UFO_bispinors_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_bispinors.$(OBJEXT)
keystones_UFO_bispinors_OBJECTS =  \
	$(am_keystones_UFO_bispinors_OBJECTS) \
	$(nodist_keystones_UFO_bispinors_OBJECTS)
@OCAML_AVAILABLE_TRUE@keystones_UFO_bispinors_DEPENDENCIES = $(KINDS) \
@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__keystones_UFO_bispinors_generate_SOURCES_DIST = keystones.ml \
	keystones.mli keystones_UFO_bispinors_generate.ml
am_keystones_UFO_bispinors_generate_OBJECTS =
keystones_UFO_bispinors_generate_OBJECTS =  \
	$(am_keystones_UFO_bispinors_generate_OBJECTS)
keystones_UFO_bispinors_generate_LDADD = $(LDADD)
am__keystones_UFO_generate_SOURCES_DIST = keystones.ml keystones.mli \
	keystones_UFO_generate.ml
am_keystones_UFO_generate_OBJECTS =
keystones_UFO_generate_OBJECTS = $(am_keystones_UFO_generate_OBJECTS)
keystones_UFO_generate_LDADD = $(LDADD)
am__keystones_omegalib_SOURCES_DIST = omega_testtools.f90 \
	keystones_tools.f90
@OCAML_AVAILABLE_TRUE@am_keystones_omegalib_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	omega_testtools.$(OBJEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_tools.$(OBJEXT)
@OCAML_AVAILABLE_TRUE@nodist_keystones_omegalib_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib.$(OBJEXT)
keystones_omegalib_OBJECTS = $(am_keystones_omegalib_OBJECTS) \
	$(nodist_keystones_omegalib_OBJECTS)
@OCAML_AVAILABLE_TRUE@keystones_omegalib_DEPENDENCIES = $(KINDS) \
@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__keystones_omegalib_bispinors_SOURCES_DIST = omega_testtools.f90 \
	keystones_tools.f90
@OCAML_AVAILABLE_TRUE@am_keystones_omegalib_bispinors_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	omega_testtools.$(OBJEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_tools.$(OBJEXT)
@OCAML_AVAILABLE_TRUE@nodist_keystones_omegalib_bispinors_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_bispinors.$(OBJEXT)
keystones_omegalib_bispinors_OBJECTS =  \
	$(am_keystones_omegalib_bispinors_OBJECTS) \
	$(nodist_keystones_omegalib_bispinors_OBJECTS)
@OCAML_AVAILABLE_TRUE@keystones_omegalib_bispinors_DEPENDENCIES =  \
@OCAML_AVAILABLE_TRUE@	$(KINDS) \
@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__keystones_omegalib_bispinors_generate_SOURCES_DIST = keystones.ml \
	keystones.mli keystones_omegalib_bispinors_generate.ml
am_keystones_omegalib_bispinors_generate_OBJECTS =
keystones_omegalib_bispinors_generate_OBJECTS =  \
	$(am_keystones_omegalib_bispinors_generate_OBJECTS)
keystones_omegalib_bispinors_generate_LDADD = $(LDADD)
am__keystones_omegalib_generate_SOURCES_DIST = keystones.ml \
	keystones.mli keystones_omegalib_generate.ml
am_keystones_omegalib_generate_OBJECTS =
keystones_omegalib_generate_OBJECTS =  \
	$(am_keystones_omegalib_generate_OBJECTS)
keystones_omegalib_generate_LDADD = $(LDADD)
am__omega_unit_SOURCES_DIST = omega_unit.ml
am_omega_unit_OBJECTS =
omega_unit_OBJECTS = $(am_omega_unit_OBJECTS)
omega_unit_LDADD = $(LDADD)
am_test_omega95_OBJECTS = test_omega95.$(OBJEXT) \
	omega_testtools.$(OBJEXT)
test_omega95_OBJECTS = $(am_test_omega95_OBJECTS)
test_omega95_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am_test_omega95_bispinors_OBJECTS = test_omega95_bispinors.$(OBJEXT) \
	omega_testtools.$(OBJEXT)
test_omega95_bispinors_OBJECTS = $(am_test_omega95_bispinors_OBJECTS)
test_omega95_bispinors_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am__test_openmp_SOURCES_DIST = test_openmp.f90 omega_interface.f90 \
	omega_testtools.f90 tao_random_numbers.f90 parameters_QED.f90 \
	parameters_QCD.f90 parameters_SYM.f90 parameters_SM.f90 \
	parameters_SM_top_anom.f90
@FC_USE_OPENMP_TRUE@am__objects_10 = $(am__objects_1)
@FC_USE_OPENMP_TRUE@am_test_openmp_OBJECTS = test_openmp.$(OBJEXT) \
@FC_USE_OPENMP_TRUE@	$(am__objects_10)
@FC_USE_OPENMP_TRUE@nodist_test_openmp_OBJECTS =  \
@FC_USE_OPENMP_TRUE@	amplitude_openmp.$(OBJEXT)
test_openmp_OBJECTS = $(am_test_openmp_OBJECTS) \
	$(nodist_test_openmp_OBJECTS)
@FC_USE_OPENMP_TRUE@test_openmp_DEPENDENCIES = $(KINDS) \
@FC_USE_OPENMP_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__test_qed_eemm_SOURCES_DIST = test_qed_eemm.f90 parameters_QED.f90
@OCAML_AVAILABLE_TRUE@am_test_qed_eemm_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	test_qed_eemm.$(OBJEXT) \
@OCAML_AVAILABLE_TRUE@	parameters_QED.$(OBJEXT)
@OCAML_AVAILABLE_TRUE@nodist_test_qed_eemm_OBJECTS =  \
@OCAML_AVAILABLE_TRUE@	amplitude_qed_eemm.$(OBJEXT)
test_qed_eemm_OBJECTS = $(am_test_qed_eemm_OBJECTS) \
	$(nodist_test_qed_eemm_OBJECTS)
@OCAML_AVAILABLE_TRUE@test_qed_eemm_DEPENDENCIES = $(KINDS) \
@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am__ufo_unit_SOURCES_DIST = ufo_unit.ml
am_ufo_unit_OBJECTS =
ufo_unit_OBJECTS = $(am_ufo_unit_OBJECTS)
ufo_unit_LDADD = $(LDADD)
am__vertex_unit_SOURCES_DIST = vertex_unit.ml
am_vertex_unit_OBJECTS =
vertex_unit_OBJECTS = $(am_vertex_unit_OBJECTS)
vertex_unit_LDADD = $(LDADD)
am__objects_11 = ward_lib.$(OBJEXT) $(am__objects_1)
am_ward_OBJECTS = $(am__objects_11)
nodist_ward_OBJECTS = ward.$(OBJEXT)
ward_OBJECTS = $(am_ward_OBJECTS) $(nodist_ward_OBJECTS)
ward_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am__ward_UFO_SOURCES_DIST = ward_lib.f90 omega_interface.f90 \
	omega_testtools.f90 tao_random_numbers.f90
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am__objects_12 =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	ward_lib.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(am__objects_8)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@am_ward_UFO_OBJECTS =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(am__objects_12)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@nodist_ward_UFO_OBJECTS =  \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	ward_UFO.$(OBJEXT) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	parameters_SM_UFO.$(OBJEXT)
ward_UFO_OBJECTS = $(am_ward_UFO_OBJECTS) $(nodist_ward_UFO_OBJECTS)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@ward_UFO_DEPENDENCIES = $(KINDS) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(top_builddir)/omega/src/libomega_core.la
am_ward_fail_OBJECTS = $(am__objects_11)
nodist_ward_fail_OBJECTS = ward_fail.$(OBJEXT)
ward_fail_OBJECTS = $(am_ward_fail_OBJECTS) \
	$(nodist_ward_fail_OBJECTS)
ward_fail_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
am_ward_long_OBJECTS = $(am__objects_11)
nodist_ward_long_OBJECTS = ward_long.$(OBJEXT)
ward_long_OBJECTS = $(am_ward_long_OBJECTS) \
	$(nodist_ward_long_OBJECTS)
ward_long_DEPENDENCIES = $(KINDS) \
	$(top_builddir)/omega/src/libomega_core.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_@AM_V@)
am__v_FC_ = $(am__v_FC_@AM_DEFAULT_V@)
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_@AM_V@)
am__v_FCLD_ = $(am__v_FCLD_@AM_DEFAULT_V@)
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(benchmark_SOURCES) $(nodist_benchmark_SOURCES) \
	$(benchmark_UFO_SM_SOURCES) $(nodist_benchmark_UFO_SM_SOURCES) \
	$(benchmark_UFO_SMEFT_SOURCES) \
	$(nodist_benchmark_UFO_SMEFT_SOURCES) \
	$(benchmark_VM_vs_Fortran_SOURCES) \
	$(nodist_benchmark_VM_vs_Fortran_SOURCES) \
	$(benchmark_amp_parallel_SOURCES) \
	$(nodist_benchmark_amp_parallel_SOURCES) \
	$(compare_amplitude_UFO_SOURCES) \
	$(nodist_compare_amplitude_UFO_SOURCES) \
	$(compare_amplitude_VM_SOURCES) \
	$(nodist_compare_amplitude_VM_SOURCES) \
	$(compare_amplitude_recola_SOURCES) \
	$(nodist_compare_amplitude_recola_SOURCES) \
	$(compare_majorana_SOURCES) $(nodist_compare_majorana_SOURCES) \
	$(compare_majorana_UFO_SOURCES) \
	$(nodist_compare_majorana_UFO_SOURCES) \
	$(compare_majorana_legacy_SOURCES) \
	$(nodist_compare_majorana_legacy_SOURCES) \
	$(compare_split_function_SOURCES) \
	$(nodist_compare_split_function_SOURCES) \
	$(compare_split_module_SOURCES) \
	$(nodist_compare_split_module_SOURCES) $(ects_SOURCES) \
	$(nodist_ects_SOURCES) $(fermi_SOURCES) \
	$(nodist_fermi_SOURCES) $(fermi_UFO_SOURCES) \
	$(nodist_fermi_UFO_SOURCES) $(keystones_UFO_SOURCES) \
	$(nodist_keystones_UFO_SOURCES) \
	$(keystones_UFO_bispinors_SOURCES) \
	$(nodist_keystones_UFO_bispinors_SOURCES) \
	$(keystones_UFO_bispinors_generate_SOURCES) \
	$(keystones_UFO_generate_SOURCES) \
	$(keystones_omegalib_SOURCES) \
	$(nodist_keystones_omegalib_SOURCES) \
	$(keystones_omegalib_bispinors_SOURCES) \
	$(nodist_keystones_omegalib_bispinors_SOURCES) \
	$(keystones_omegalib_bispinors_generate_SOURCES) \
	$(keystones_omegalib_generate_SOURCES) $(omega_unit_SOURCES) \
	$(test_omega95_SOURCES) $(test_omega95_bispinors_SOURCES) \
	$(test_openmp_SOURCES) $(nodist_test_openmp_SOURCES) \
	$(test_qed_eemm_SOURCES) $(nodist_test_qed_eemm_SOURCES) \
	$(ufo_unit_SOURCES) $(vertex_unit_SOURCES) $(ward_SOURCES) \
	$(nodist_ward_SOURCES) $(ward_UFO_SOURCES) \
	$(nodist_ward_UFO_SOURCES) $(ward_fail_SOURCES) \
	$(nodist_ward_fail_SOURCES) $(ward_long_SOURCES) \
	$(nodist_ward_long_SOURCES)
DIST_SOURCES = $(benchmark_SOURCES) $(benchmark_UFO_SM_SOURCES) \
	$(benchmark_UFO_SMEFT_SOURCES) \
	$(benchmark_VM_vs_Fortran_SOURCES) \
	$(am__benchmark_amp_parallel_SOURCES_DIST) \
	$(am__compare_amplitude_UFO_SOURCES_DIST) \
	$(compare_amplitude_VM_SOURCES) \
	$(am__compare_amplitude_recola_SOURCES_DIST) \
	$(am__compare_majorana_SOURCES_DIST) \
	$(am__compare_majorana_UFO_SOURCES_DIST) \
	$(am__compare_majorana_legacy_SOURCES_DIST) \
	$(compare_split_function_SOURCES) \
	$(compare_split_module_SOURCES) $(ects_SOURCES) \
	$(fermi_SOURCES) $(am__fermi_UFO_SOURCES_DIST) \
	$(am__keystones_UFO_SOURCES_DIST) \
	$(am__keystones_UFO_bispinors_SOURCES_DIST) \
	$(am__keystones_UFO_bispinors_generate_SOURCES_DIST) \
	$(am__keystones_UFO_generate_SOURCES_DIST) \
	$(am__keystones_omegalib_SOURCES_DIST) \
	$(am__keystones_omegalib_bispinors_SOURCES_DIST) \
	$(am__keystones_omegalib_bispinors_generate_SOURCES_DIST) \
	$(am__keystones_omegalib_generate_SOURCES_DIST) \
	$(am__omega_unit_SOURCES_DIST) $(test_omega95_SOURCES) \
	$(test_omega95_bispinors_SOURCES) \
	$(am__test_openmp_SOURCES_DIST) \
	$(am__test_qed_eemm_SOURCES_DIST) $(am__ufo_unit_SOURCES_DIST) \
	$(am__vertex_unit_SOURCES_DIST) $(ward_SOURCES) \
	$(am__ward_UFO_SOURCES_DIST) $(ward_fail_SOURCES) \
	$(ward_long_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
@OCAML_AVAILABLE_TRUE@am__EXEEXT_9 = vertex_unit$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	ufo_unit$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_UFO$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_omegalib_bispinors$(EXEEXT) \
@OCAML_AVAILABLE_TRUE@	keystones_UFO_bispinors$(EXEEXT)
@FC_PREC_TRUE@@RECOLA_AVAILABLE_TRUE@am__EXEEXT_10 = compare_amplitude_recola$(EXEEXT)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/omega/src/Makefile.ocaml \
	$(top_srcdir)/test-driver README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
ACROREAD = @ACROREAD@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BINDIR = @BINDIR@
BUILDDIR = @BUILDDIR@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CC_HAS_QUADMATH = @CC_HAS_QUADMATH@
CC_IS_GNU = @CC_IS_GNU@
CFLAGS = @CFLAGS@
CFLAGS_PIC = @CFLAGS_PIC@
CPIF = @CPIF@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CSRUTIL = @CSRUTIL@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLIBS = @CXXLIBS@
CYGPATH_W = @CYGPATH_W@
DEFAULT_MAKEFLAGS = @DEFAULT_MAKEFLAGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DEVELOPER_DIR = @DEVELOPER_DIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DOTINTEGERVERSION = @DOTINTEGERVERSION@
DOTVERSION = @DOTVERSION@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DVIPS = @DVIPS@
DYLD_FLAGS = @DYLD_FLAGS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EPSPDF = @EPSPDF@
EPSPDFINTEGERVERSION = @EPSPDFINTEGERVERSION@
EPSPDFVERSION = @EPSPDFVERSION@
EPSTOPDF = @EPSTOPDF@
EPSTOPDFVERSION = @EPSTOPDFVERSION@
EPSTOPDF_BUGGY = @EPSTOPDF_BUGGY@
ETAGS = @ETAGS@
EVENT_ANALYSIS = @EVENT_ANALYSIS@
EVENT_ANALYSIS_PDF = @EVENT_ANALYSIS_PDF@
EVENT_ANALYSIS_PS = @EVENT_ANALYSIS_PS@
EXEEXT = @EXEEXT@
F77 = @F77@
FASTJET_AVAILABLE_FLAG = @FASTJET_AVAILABLE_FLAG@
FASTJET_CXXFLAGS = @FASTJET_CXXFLAGS@
FASTJET_LIBS = @FASTJET_LIBS@
FASTJET_VERSION = @FASTJET_VERSION@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_MPI = @FCFLAGS_MPI@
FCFLAGS_OPENMP = @FCFLAGS_OPENMP@
FCFLAGS_PIC = @FCFLAGS_PIC@
FCFLAGS_PROFILING = @FCFLAGS_PROFILING@
FCFLAGS_f90 = @FCFLAGS_f90@
FCLIBS = @FCLIBS@
FCMOD = @FCMOD@
FC_DEBUG_ON = @FC_DEBUG_ON@
FC_ID_STRING = @FC_ID_STRING@
FC_IS_GFORTRAN_4 = @FC_IS_GFORTRAN_4@
FC_IS_GFORTRAN_65 = @FC_IS_GFORTRAN_65@
FC_IS_IFORT15161718 = @FC_IS_IFORT15161718@
FC_IS_IFORT190012 = @FC_IS_IFORT190012@
FC_IS_IFORT21012 = @FC_IS_IFORT21012@
FC_IS_NAG = @FC_IS_NAG@
FC_MAJOR_VERSION = @FC_MAJOR_VERSION@
FC_MODULE_NAME = @FC_MODULE_NAME@
FC_OPENMP_DEFAULT_MAX_THREADS = @FC_OPENMP_DEFAULT_MAX_THREADS@
FC_OPENMP_HEADER = @FC_OPENMP_HEADER@
FC_OPENMP_OFF = @FC_OPENMP_OFF@
FC_OPENMP_ON = @FC_OPENMP_ON@
FC_PRECISION = @FC_PRECISION@
FC_SRC_EXT = @FC_SRC_EXT@
FC_SUPPORTS_ALLOCATABLE = @FC_SUPPORTS_ALLOCATABLE@
FC_SUPPORTS_ALLOCATABLE_SCALARS = @FC_SUPPORTS_ALLOCATABLE_SCALARS@
FC_SUPPORTS_CMDLINE = @FC_SUPPORTS_CMDLINE@
FC_SUPPORTS_C_BINDING = @FC_SUPPORTS_C_BINDING@
FC_SUPPORTS_ENVVAR = @FC_SUPPORTS_ENVVAR@
FC_SUPPORTS_F95 = @FC_SUPPORTS_F95@
FC_SUPPORTS_FLUSH = @FC_SUPPORTS_FLUSH@
FC_SUPPORTS_OO_FEATURES = @FC_SUPPORTS_OO_FEATURES@
FC_SUPPORTS_OPENMP = @FC_SUPPORTS_OPENMP@
FC_SUPPORTS_PROCEDURE_POINTERS = @FC_SUPPORTS_PROCEDURE_POINTERS@
FC_SUPPORTS_PROFILING = @FC_SUPPORTS_PROFILING@
FC_SUPPORTS_SUBMODULES = @FC_SUPPORTS_SUBMODULES@
FC_VENDOR = @FC_VENDOR@
FC_VERSION = @FC_VERSION@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FMODDIR = @FMODDIR@
FORM_DIR = @FORM_DIR@
GHOSTVIEW = @GHOSTVIEW@
GOLEM_DIR = @GOLEM_DIR@
GOSAM_AVAILABLE_FLAG = @GOSAM_AVAILABLE_FLAG@
GOSAM_DIR = @GOSAM_DIR@
GOSAM_VERSION = @GOSAM_VERSION@
GREP = @GREP@
GZIP = @GZIP@
HACHA = @HACHA@
HDF5_AVAILABLE_FLAG = @HDF5_AVAILABLE_FLAG@
HDF5_CFLAGS = @HDF5_CFLAGS@
HDF5_CPPFLAGS = @HDF5_CPPFLAGS@
HDF5_CXXLIBS = @HDF5_CXXLIBS@
HDF5_DIR = @HDF5_DIR@
HDF5_FLIBS = @HDF5_FLIBS@
HDF5_LIBS = @HDF5_LIBS@
HDF5_PREFIX = @HDF5_PREFIX@
HDF5_VERSION = @HDF5_VERSION@
HEPMC2_AVAILABLE_FLAG = @HEPMC2_AVAILABLE_FLAG@
HEPMC3_AVAILABLE_FLAG = @HEPMC3_AVAILABLE_FLAG@
HEPMC_AVAILABLE_FLAG = @HEPMC_AVAILABLE_FLAG@
HEPMC_INCLUDES = @HEPMC_INCLUDES@
HEPMC_VERSION = @HEPMC_VERSION@
HEVEA = @HEVEA@
HOPPET_AVAILABLE_FLAG = @HOPPET_AVAILABLE_FLAG@
HOPPET_CONFIG = @HOPPET_CONFIG@
HOPPET_INCLUDES = @HOPPET_INCLUDES@
HOPPET_VERSION = @HOPPET_VERSION@
IMAGEN = @IMAGEN@
INCLUDEDIR = @INCLUDEDIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LABLGTKDIR = @LABLGTKDIR@
LATEX = @LATEX@
LCIO_AVAILABLE_FLAG = @LCIO_AVAILABLE_FLAG@
LCIO_INCLUDES = @LCIO_INCLUDES@
LCIO_VERSION = @LCIO_VERSION@
LD = @LD@
LDFLAGS = @LDFLAGS@
LDFLAGS_HEPMC = @LDFLAGS_HEPMC@
LDFLAGS_HOPPET = @LDFLAGS_HOPPET@
LDFLAGS_LCIO = @LDFLAGS_LCIO@
LDFLAGS_LHAPDF = @LDFLAGS_LHAPDF@
LDFLAGS_LOOPTOOLS = @LDFLAGS_LOOPTOOLS@
LDFLAGS_OPENLOOPS = @LDFLAGS_OPENLOOPS@
LDFLAGS_RECOLA = @LDFLAGS_RECOLA@
LDFLAGS_STATIC = @LDFLAGS_STATIC@
LHAPDF = @LHAPDF@
LHAPDF5_AVAILABLE_FLAG = @LHAPDF5_AVAILABLE_FLAG@
LHAPDF6_AVAILABLE_FLAG = @LHAPDF6_AVAILABLE_FLAG@
LHAPDF_CONFIG = @LHAPDF_CONFIG@
LHAPDF_CXXFLAGS = @LHAPDF_CXXFLAGS@
LHAPDF_FULL_VERSION = @LHAPDF_FULL_VERSION@
LHAPDF_LIBS = @LHAPDF_LIBS@
LHAPDF_MAJOR_VERSION = @LHAPDF_MAJOR_VERSION@
LHAPDF_PDFSETS_PATH = @LHAPDF_PDFSETS_PATH@
LHAPDF_ROOT = @LHAPDF_ROOT@
LIBDIR = @LIBDIR@
LIBOBJS = @LIBOBJS@
LIBRARY_VERSION = @LIBRARY_VERSION@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOOPTOOLS = @LOOPTOOLS@
LOOPTOOLS_AVAILABLE_FLAG = @LOOPTOOLS_AVAILABLE_FLAG@
LOOPTOOLS_DIR = @LOOPTOOLS_DIR@
LOOPTOOLS_INCLUDES = @LOOPTOOLS_INCLUDES@
LOOPTOOLS_LIB = @LOOPTOOLS_LIB@
LOWERCASE = @LOWERCASE@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
M4 = @M4@
MAKEINDEX = @MAKEINDEX@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPICHVERSION = @MPICHVERSION@
MPIIFORT = @MPIIFORT@
MPI_AVAILABLE = @MPI_AVAILABLE@
MPI_LIBRARY = @MPI_LIBRARY@
MPI_VERSION = @MPI_VERSION@
MPOST = @MPOST@
MPOSTFLAG = @MPOSTFLAG@
MPOSTINTEGERVERSION = @MPOSTINTEGERVERSION@
MPOSTVERSION = @MPOSTVERSION@
MPOST_AVAILABLE_FLAG = @MPOST_AVAILABLE_FLAG@
NINJA_DIR = @NINJA_DIR@
NM = @NM@
NMEDIT = @NMEDIT@
NOTANGLE = @NOTANGLE@
NOWEAVE = @NOWEAVE@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OBJ_EXT = @OBJ_EXT@
OCAML = @OCAML@
OCAMLBEST = @OCAMLBEST@
OCAMLBUILD = @OCAMLBUILD@
OCAMLC = @OCAMLC@ $(DBG) -safe-string
OCAMLCDOTOPT = @OCAMLCDOTOPT@
OCAMLCP = @OCAMLCP@
OCAMLDEFUN = @OCAMLDEFUN@
OCAMLDEP = @OCAMLDEP@
OCAMLDOC = @OCAMLDOC@
OCAMLDOT = @OCAMLDOT@
OCAMLFLAGS = @OCAMLFLAGS@ $(am__append_2)
OCAMLINTEGERVERSION = @OCAMLINTEGERVERSION@
OCAMLLEX = @OCAMLLEX@
OCAMLLEXDOTOPT = @OCAMLLEXDOTOPT@
OCAMLLIB = @OCAMLLIB@
OCAMLMKLIB = @OCAMLMKLIB@
OCAMLMKTOP = @OCAMLMKTOP@
OCAMLOPT = @OCAMLOPT@
OCAMLOPTDOTOPT = @OCAMLOPTDOTOPT@
OCAMLVERSION = @OCAMLVERSION@
OCAMLWEB = @OCAMLWEB@
OCAMLWEBVERSION = @OCAMLWEBVERSION@
OCAMLYACC = @OCAMLYACC@
OCAML_BIGARRAY_CMA = @OCAML_BIGARRAY_CMA@
OCAML_BIGARRAY_CMXA = @OCAML_BIGARRAY_CMXA@
OCAML_BIGARRAY_COMPAT = @OCAML_BIGARRAY_COMPAT@
OMEGA_DEFAULT_UFO_DIR = @OMEGA_DEFAULT_UFO_DIR@
OMPI_INFO = @OMPI_INFO@
OPENLOOPS_AVAILABLE_FLAG = @OPENLOOPS_AVAILABLE_FLAG@
OPENLOOPS_DIR = @OPENLOOPS_DIR@
OPENLOOPS_INCLUDES = @OPENLOOPS_INCLUDES@
OPENLOOPS_VERSION = @OPENLOOPS_VERSION@
OPENMP_FCFLAGS = @OPENMP_FCFLAGS@
OS_IS_DARWIN = @OS_IS_DARWIN@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_DATE = @PACKAGE_DATE@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STATUS = @PACKAGE_STATUS@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFLATEX = @PDFLATEX@
PKGDATADIR = @PKGDATADIR@
PKGLIBDIR = @PKGLIBDIR@
PKGTEXDIR = @PKGTEXDIR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PLAINTEX = @PLAINTEX@
PS2PDF = @PS2PDF@
PYTHIA6_AVAILABLE_FLAG = @PYTHIA6_AVAILABLE_FLAG@
PYTHIA6_EH_AVAILABLE_FLAG = @PYTHIA6_EH_AVAILABLE_FLAG@
PYTHIA8_AVAILABLE_FLAG = @PYTHIA8_AVAILABLE_FLAG@
PYTHIA8_CXXFLAGS = @PYTHIA8_CXXFLAGS@
PYTHIA8_LIBS = @PYTHIA8_LIBS@
PYTHIA8_VERSION = @PYTHIA8_VERSION@
PYTHON = @PYTHON@
PYTHON_API = @PYTHON_API@
PYTHON_API_AVAILABLE_FLAG = @PYTHON_API_AVAILABLE_FLAG@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_FULL_VERSION = @PYTHON_FULL_VERSION@
PYTHON_LIBS = @PYTHON_LIBS@
PYTHON_LINKABLE = @PYTHON_LINKABLE@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
PYTHON_VERSION = @PYTHON_VERSION@
QGRAF_DIR = @QGRAF_DIR@
RANLIB = @RANLIB@
RECOLA = @RECOLA@
RECOLA_AVAILABLE_FLAG = @RECOLA_AVAILABLE_FLAG@
RECOLA_DIR = @RECOLA_DIR@
RECOLA_INCLUDES = @RECOLA_INCLUDES@
RECOLA_LIB = @RECOLA_LIB@
RECOLA_VERSION = @RECOLA_VERSION@
ROOTAUXCFLAGS = @ROOTAUXCFLAGS@
ROOTAUXLIBS = @ROOTAUXLIBS@
ROOTCFLAGS = @ROOTCFLAGS@
ROOTCINT = @ROOTCINT@
ROOTCONF = @ROOTCONF@
ROOTEXEC = @ROOTEXEC@
ROOTGLIBS = @ROOTGLIBS@
ROOTINCDIR = @ROOTINCDIR@
ROOTLIBDIR = @ROOTLIBDIR@
ROOTLIBS = @ROOTLIBS@
ROOTRPATH = @ROOTRPATH@
RPC_CFLAGS = @RPC_CFLAGS@
RTLD_GLOBAL_VALUE = @RTLD_GLOBAL_VALUE@
RTLD_LAZY_VALUE = @RTLD_LAZY_VALUE@
RTLD_LOCAL_VALUE = @RTLD_LOCAL_VALUE@
RTLD_NOW_VALUE = @RTLD_NOW_VALUE@
SAMURAI_DIR = @SAMURAI_DIR@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHRLIB_EXT = @SHRLIB_EXT@
SIP_ACTIVE = @SIP_ACTIVE@
SRCDIR = @SRCDIR@
STRIP = @STRIP@
TIRPC_CFLAGS = @TIRPC_CFLAGS@
TIRPC_LIBS = @TIRPC_LIBS@
TR = @TR@
UPPERCASE = @UPPERCASE@
VERSION = @VERSION@
XCODE_SELECT = @XCODE_SELECT@
XCODE_VERSION = @XCODE_VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cython3_exe = @cython3_exe@
cython_exe = @cython_exe@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
fjconfig = @fjconfig@
fmoddir = @fmoddir@
form_exe = @form_exe@
golem_lib = @golem_lib@
golem_lib_DIR = @golem_lib_DIR@
golem_lib_LIB = @golem_lib_LIB@
gosam_exe = @gosam_exe@
hepmcconfig = @hepmcconfig@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ifGNUmake = @ifGNUmake@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
ninja_lib = @ninja_lib@
ninja_lib_DIR = @ninja_lib_DIR@
ninja_lib_LIB = @ninja_lib_LIB@
oldincludedir = @oldincludedir@
openloops_lib = @openloops_lib@
openloops_lib_DIR = @openloops_lib_DIR@
openloops_lib_LIB = @openloops_lib_LIB@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyconfig = @pyconfig@
qgraf_exe = @qgraf_exe@
runstatedir = @runstatedir@
samurai_lib = @samurai_lib@
samurai_lib_DIR = @samurai_lib_DIR@
samurai_lib_LIB = @samurai_lib_LIB@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = UFO
DIST_SUBDIRS = UFO

# OMEGA_SPLIT = -target:single_function
OMEGA_SPLIT = -target:split_function 10
# OMEGA_SPLIT = -target:split_module 10
# OMEGA_SPLIT = -target:split_file 10
OMEGA_QED = $(top_builddir)/omega/bin/omega_QED$(OCAML_NATIVE_EXT)
OMEGA_QED_OPTS = $(OMEGA_SPLIT) -target:parameter_module parameters_QED
OMEGA_QCD = $(top_builddir)/omega/bin/omega_QCD$(OCAML_NATIVE_EXT)
OMEGA_QCD_OPTS = $(OMEGA_SPLIT) -target:parameter_module parameters_QCD
OMEGA_SYM = $(top_builddir)/omega/bin/omega_SYM$(OCAML_NATIVE_EXT)
OMEGA_SYM_OPTS = $(OMEGA_SPLIT) -target:parameter_module parameters_SYM
OMEGA_SM = $(top_builddir)/omega/bin/omega_SM$(OCAML_NATIVE_EXT)
OMEGA_SM_OPTS = $(OMEGA_SPLIT) -target:parameter_module parameters_SM
OMEGA_SM_CKM = $(top_builddir)/omega/bin/omega_SM_CKM$(OCAML_NATIVE_EXT)
OMEGA_SM_Higgs = $(top_builddir)/omega/bin/omega_SM_Higgs$(OCAML_NATIVE_EXT)
OMEGA_THDM = $(top_builddir)/omega/bin/omega_THDM$(OCAML_NATIVE_EXT)
OMEGA_THDM_CKM = $(top_builddir)/omega/bin/omega_THDM_CKM$(OCAML_NATIVE_EXT)
OMEGA_HSExt = $(top_builddir)/omega/bin/omega_HSExt$(OCAML_NATIVE_EXT)
OMEGA_Zprime = $(top_builddir)/omega/bin/omega_Zprime$(OCAML_NATIVE_EXT)
OMEGA_SM_top_anom = $(top_builddir)/omega/bin/omega_SM_top_anom$(OCAML_NATIVE_EXT)
OMEGA_SM_top_anom_OPTS = $(OMEGA_SPLIT) -target:parameter_module parameters_SM_top_anom
OMEGA_UFO = $(top_builddir)/omega/bin/omega_UFO$(OCAML_NATIVE_EXT)
OMEGA_UFO_MAJORANA = \
	$(top_builddir)/omega/bin/omega_UFO_Majorana$(OCAML_NATIVE_EXT)

OMEGA_UFO_OPTS = -target:parameter_module parameters_UFO
OMEGA_UFO_PATH = $(top_srcdir)/omega/tests/UFO
OMEGA_XXX = $(top_builddir)/omega/bin/omega_%%%$(OCAML_NATIVE_EXT)
OMEGA_XXX_OPTS = -target:parameter_module parameters_%%%
OMEGA_UFO_XXX_OPTS = \
	"-model:UFO_dir $(top_srcdir)/omega/tests/UFO/%%%/ -model:exec"

OMEGA_XXX_MAJORANA = \
	$(top_builddir)/omega/bin/omega_%%%_Majorana$(OCAML_NATIVE_EXT)

OMEGA_XXX_MAJORANA_LEGACY = \
	$(top_builddir)/omega/bin/omega_%%%_Majorana_legacy$(OCAML_NATIVE_EXT)

OMEGA_QED_VM = $(top_builddir)/omega/bin/omega_QED_VM$(OCAML_NATIVE_EXT)
OMEGA_QCD_VM = $(top_builddir)/omega/bin/omega_QCD_VM$(OCAML_NATIVE_EXT)
OMEGA_SM_VM = $(top_builddir)/omega/bin/omega_SM_VM$(OCAML_NATIVE_EXT)
OMEGA_SM_CKM_VM = $(top_builddir)/omega/bin/omega_SM_CKM_VM$(OCAML_NATIVE_EXT)
OMEGA_THDM_VM = $(top_builddir)/omega/bin/omega_THDM_VM$(OCAML_NATIVE_EXT)
OMEGA_THDM_CKM_VM = $(top_builddir)/omega/bin/omega_THDM_CKM_VM$(OCAML_NATIVE_EXT)
OMEGA_HSExt_VM = $(top_builddir)/omega/bin/omega_HSExt_VM$(OCAML_NATIVE_EXT)
OMEGA_Zprime_VM = $(top_builddir)/omega/bin/omega_Zprime_VM$(OCAML_NATIVE_EXT)
OMEGA_SM_Higgs_VM = $(top_builddir)/omega/bin/omega_SM_Higgs_VM$(OCAML_NATIVE_EXT)
OMEGA_XXX_VM = $(top_builddir)/omega/bin/omega_%%%_VM$(OCAML_NATIVE_EXT)
OMEGA_XXX_VM_PARAMS_OPTS = -params -target:parameter_module_external \
	parameters_%%% -target:wrapper_module %% -target:bytecode_file %

AM_FCFLAGS = -I$(top_builddir)/omega/src $(am__append_1) \
	$(am__append_21)
AM_LDFLAGS = 
@FC_USE_OPENMP_TRUE@AM_TESTS_ENVIRONMENT = \
@FC_USE_OPENMP_TRUE@	export OMP_NUM_THREADS=1;

EXTRA_DIST = ects_driver.sh $(EXTENDED_COLOR_TESTS) cascade_driver.sh \
	$(CASCADE_TESTS) phase_space_driver.sh $(PHASE_SPACE_TESTS) \
	fermi_driver.sh fermi.list ward_driver.sh ward_identities.list \
	ward_identities_long.list ward_identities_fail.list \
	compare_driver.sh comparisons.list $(am__append_9) \
	$(am__append_12) compare_driver_VM.sh \
	compare_driver_VM_wrappers.sh comparisons_VM.list \
	benchmark_VM_vs_Fortran_driver.sh
OCAMLCI = $(OCAMLC)
OCAMLDEBUGFLAGS = -g
OCAMLOPTFLAGS = -inline 64 $(GPROF) -safe-string
OCAML_NATIVE_EXT = .opt
OCAML_BYTECODE_EXT = .bin

########################################################################
SUFFIXES = .mll .mly .ml .mli .cmi .cmo .cmx .bin .opt
@OCAML_AVAILABLE_TRUE@OMEGA_CORE = $(top_builddir)/omega/src/omega_core.cmxa
@OCAML_AVAILABLE_TRUE@OMEGA_MODELS = $(top_builddir)/omega/src/omega_models.cmxa
@OCAML_AVAILABLE_TRUE@omega_unit_SOURCES = omega_unit.ml

########################################################################
KINDS = $(top_builddir)/omega/src/kinds.lo
test_omega95_SOURCES = test_omega95.f90 omega_testtools.f90
test_omega95_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
test_omega95_bispinors_SOURCES = test_omega95_bispinors.f90 omega_testtools.f90
test_omega95_bispinors_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@test_qed_eemm_SOURCES = test_qed_eemm.f90 parameters_QED.f90
@OCAML_AVAILABLE_TRUE@nodist_test_qed_eemm_SOURCES = amplitude_qed_eemm.f90
@OCAML_AVAILABLE_TRUE@test_qed_eemm_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la

########################################################################
EXTENDED_COLOR_TESTS = \
	$(srcdir)/fc_s.ects \
	$(srcdir)/fc_a.ects $(srcdir)/cf_a.ects $(srcdir)/fa_f.ects \
	$(srcdir)/ca_c.ects $(srcdir)/af_f.ects $(srcdir)/ac_c.ects \
	$(srcdir)/aa_a.ects \
	$(srcdir)/fc_fc.ects \
	$(srcdir)/aa_s.ects $(srcdir)/as_a.ects $(srcdir)/sa_a.ects

ects_SOURCES = color_test_lib.f90 \
	parameters_SM.f90 parameters_QED.f90 parameters_QCD.f90 parameters_SYM.f90

nodist_ects_SOURCES = ects.f90
ects_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
# if there is some debugging output ...
# XFAIL_TESTS += cascade
CASCADE_TESTS = \
	bhabha-s-channel.cascade bhabha-t-channel.cascade bhabha-full.cascade \
	ww-onlycc.cascade ww-notgc.cascade \
	jjj-notgc.cascade \
	vbf-noh.cascade

PHASE_SPACE_TESTS = eeee.phs qqggg.phs
FERMI_SUPPORT_F90 = \
	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90 \
	parameters_QED.f90 parameters_QCD.f90 parameters_SYM.f90 \
	parameters_SM.f90 parameters_MSSM.f90 parameters_SM_top_anom.f90

FERMI_SUPPORT_O = $(FERMI_SUPPORT_F90:.f90=.o)
FERMI_LIB_F90 = fermi_lib.f90 $(FERMI_SUPPORT_F90)
FERMI_LIB_O = $(FERMI_LIB_F90:.f90=.o)
fermi_SOURCES = $(FERMI_LIB_F90)
nodist_fermi_SOURCES = fermi.f90
fermi_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
WARD_SUPPORT_F90 = \
	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90 \
	parameters_QED.f90 parameters_QCD.f90 parameters_SYM.f90 \
	parameters_SM.f90 parameters_SM_top_anom.f90

WARD_SUPPORT_O = $(WARD_SUPPORT_F90:.f90=.o)
WARD_LIB_F90 = ward_lib.f90 $(WARD_SUPPORT_F90)
WARD_LIB_O = $(WARD_LIB_F90:.f90=.o)
ward_SOURCES = $(WARD_LIB_F90)
nodist_ward_SOURCES = ward.f90
ward_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
ward_long_SOURCES = $(WARD_LIB_F90)
nodist_ward_long_SOURCES = ward_long.f90
ward_long_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
ward_fail_SOURCES = $(WARD_LIB_F90)
nodist_ward_fail_SOURCES = ward_fail.f90
ward_fail_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
COMPARE_SUPPORT_F90 = $(WARD_SUPPORT_F90)
COMPARE_SUPPORT_O = $(WARD_SUPPORT_O)
COMPARE_LIB_F90 = compare_lib.f90 $(COMPARE_SUPPORT_F90)
COMPARE_LIB_O = $(COMPARE_LIB_F90:.f90=.o)
compare_split_function_SOURCES = $(COMPARE_LIB_F90)
nodist_compare_split_function_SOURCES = compare_split_function.f90
compare_split_function_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
compare_split_module_SOURCES = $(COMPARE_LIB_F90)
nodist_compare_split_module_SOURCES = compare_split_module.f90
compare_split_module_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@compare_majorana_SOURCES = $(COMPARE_LIB_F90)
@OCAML_AVAILABLE_TRUE@nodist_compare_majorana_SOURCES = compare_majorana.f90
@OCAML_AVAILABLE_TRUE@compare_majorana_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@compare_majorana_legacy_SOURCES = $(COMPARE_LIB_F90)
@OCAML_AVAILABLE_TRUE@nodist_compare_majorana_legacy_SOURCES = compare_majorana_legacy.f90
@OCAML_AVAILABLE_TRUE@compare_majorana_legacy_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@compare_majorana_UFO_SOURCES = $(COMPARE_LIB_F90) parameters_SM_UFO.f90
@OCAML_AVAILABLE_TRUE@nodist_compare_majorana_UFO_SOURCES = compare_majorana_UFO.f90
@OCAML_AVAILABLE_TRUE@compare_majorana_UFO_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@compare_amplitude_UFO_SOURCES = \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	parameters_SM_from_UFO.f90 compare_lib.f90 \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90

# -model:long_flavors
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@nodist_compare_amplitude_UFO_SOURCES = \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	compare_amplitude_UFO.f90 parameters_SM_UFO.f90

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@compare_amplitude_UFO_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@FERMI_UFO_SUPPORT_F90 = \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@FERMI_UFO_SUPPORT_O = $(FERMI_UFO_SUPPORT_F90:.f90=.o)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@FERMI_UFO_LIB_F90 = fermi_lib.f90 $(FERMI_UFO_SUPPORT_F90)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@FERMI_UFO_LIB_O = $(FERMI_UFO_LIB_F90:.f90=.o)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@fermi_UFO_SOURCES = $(FERMI_UFO_LIB_F90)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@nodist_fermi_UFO_SOURCES = fermi_UFO.f90 parameters_SM_UFO.f90
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@fermi_UFO_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@WARD_UFO_SUPPORT_F90 = \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	omega_interface.f90 omega_testtools.f90 tao_random_numbers.f90

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@WARD_UFO_SUPPORT_O = $(WARD_UFO_SUPPORT_F90:.f90=.o)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@WARD_UFO_LIB_F90 = ward_lib.f90 $(WARD_UFO_SUPPORT_F90)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@WARD_UFO_LIB_O = $(WARD_UFO_LIB_F90:.f90=.o)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@ward_UFO_SOURCES = $(WARD_UFO_LIB_F90)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@nodist_ward_UFO_SOURCES = ward_UFO.f90 parameters_SM_UFO.f90
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@ward_UFO_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
COMPARE_EXTRA_MODELS = parameters_SM_CKM.f90 parameters_SM_Higgs.f90 \
	parameters_THDM.f90 parameters_THDM_CKM.f90 parameters_HSExt.f90 \
	parameters_Zprime.f90

compare_amplitude_VM_SOURCES = $(COMPARE_LIB_F90) $(COMPARE_EXTRA_MODELS)
nodist_compare_amplitude_VM_SOURCES = compare_amplitude_VM.f90 comparisons_VM.wrappers.f90
compare_amplitude_VM_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@FC_USE_OPENMP_TRUE@TESTOPENMP_SUPPORT_F90 = $(WARD_SUPPORT_F90)
@FC_USE_OPENMP_TRUE@TESTOPENMP_SUPPORT_O = $(WARD_SUPPORT_O)
@FC_USE_OPENMP_TRUE@test_openmp_SOURCES = test_openmp.f90 $(TESTOPENMP_SUPPORT_F90)
@FC_USE_OPENMP_TRUE@nodist_test_openmp_SOURCES = amplitude_openmp.f90
@FC_USE_OPENMP_TRUE@test_openmp_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
BENCHMARK_LIB_F90 = benchmark_lib.f90 $(WARD_SUPPORT_F90)
BENCHMARK_LIB_O = $(BENCHMARK_LIB_F90:.f90=.o)
benchmark_VM_vs_Fortran_SOURCES = $(BENCHMARK_LIB_F90)
nodist_benchmark_VM_vs_Fortran_SOURCES = benchmark_VM_vs_Fortran.f90 benchmark_processes.wrappers.f90
benchmark_VM_vs_Fortran_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@FC_USE_OPENMP_TRUE@benchmark_amp_parallel_SOURCES = $(BENCHMARK_LIB_F90)
@FC_USE_OPENMP_TRUE@nodist_benchmark_amp_parallel_SOURCES = benchmark_amp_parallel.f90 benchmark_processes.wrappers.f90
@FC_USE_OPENMP_TRUE@benchmark_amp_parallel_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
BENCHMARK_PROCESS = -scatter "gl gl -> gl gl gl"
BENCHMARK_SPLIT_SIZE = 10
benchmark_SOURCES = benchmark.f90 parameters_QCD.f90
nodist_benchmark_SOURCES = \
	amplitude_benchmark_v1.f90 amplitude_benchmark_v2.f90 \
	amplitude_benchmark_v3.f90 # amplitude_benchmark_v4.f90

benchmark_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la

# NB: This IS portable ...
UFO_SM = $(OMEGA_UFO_PATH)/SM/
BENCHMARK_UFO_SM_PROCESS = -scatter "e+ e- -> W+ W- Z Z"
benchmark_UFO_SM_SOURCES = \
	benchmark_UFO_SM.f90 parameters_SM_from_UFO.f90

nodist_benchmark_UFO_SM_SOURCES = \
	amplitude_benchmark_UFO_SM.f90 \
	amplitude_benchmark_UFO_SM_classic.f90 \
	parameters_SM_UFO.f90

benchmark_UFO_SM_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la

# NB: This is NOT portable ...
UFO_SMEFT = /home/ohl/physics/SMEFT_mW_UFO/
BENCHMARK_UFO_SMEFT_PROCESS = -scatter "e+ e- -> W+ W- Z"
benchmark_UFO_SMEFT_SOURCES = benchmark_UFO_SMEFT.f90
nodist_benchmark_UFO_SMEFT_SOURCES = \
	amplitude_benchmark_UFO_SMEFT.f90 \
	amplitude_benchmark_UFO_SMEFT_opt.f90 \
	parameters_UFO_SMEFT.f90

benchmark_UFO_SMEFT_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@vertex_unit_SOURCES = vertex_unit.ml
@OCAML_AVAILABLE_TRUE@ufo_unit_SOURCES = ufo_unit.ml
@OCAML_AVAILABLE_TRUE@keystones_omegalib_SOURCES = omega_testtools.f90 keystones_tools.f90
@OCAML_AVAILABLE_TRUE@nodist_keystones_omegalib_SOURCES = keystones_omegalib.f90
@OCAML_AVAILABLE_TRUE@keystones_omegalib_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@keystones_UFO_SOURCES = omega_testtools.f90 keystones_tools.f90
@OCAML_AVAILABLE_TRUE@nodist_keystones_UFO_SOURCES = keystones_UFO.f90
@OCAML_AVAILABLE_TRUE@keystones_UFO_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@keystones_omegalib_bispinors_SOURCES = omega_testtools.f90 keystones_tools.f90
@OCAML_AVAILABLE_TRUE@nodist_keystones_omegalib_bispinors_SOURCES = keystones_omegalib_bispinors.f90
@OCAML_AVAILABLE_TRUE@keystones_omegalib_bispinors_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@keystones_UFO_bispinors_SOURCES = omega_testtools.f90 keystones_tools.f90
@OCAML_AVAILABLE_TRUE@nodist_keystones_UFO_bispinors_SOURCES = keystones_UFO_bispinors.f90
@OCAML_AVAILABLE_TRUE@keystones_UFO_bispinors_LDADD = $(KINDS) $(top_builddir)/omega/src/libomega_core.la
@OCAML_AVAILABLE_TRUE@keystones_omegalib_generate_SOURCES = \
@OCAML_AVAILABLE_TRUE@	keystones.ml keystones.mli keystones_omegalib_generate.ml

@OCAML_AVAILABLE_TRUE@keystones_UFO_generate_SOURCES = \
@OCAML_AVAILABLE_TRUE@	keystones.ml keystones.mli keystones_UFO_generate.ml

@OCAML_AVAILABLE_TRUE@keystones_omegalib_bispinors_generate_SOURCES = \
@OCAML_AVAILABLE_TRUE@	keystones.ml keystones.mli keystones_omegalib_bispinors_generate.ml

@OCAML_AVAILABLE_TRUE@keystones_UFO_bispinors_generate_SOURCES = \
@OCAML_AVAILABLE_TRUE@	keystones.ml keystones.mli keystones_UFO_bispinors_generate.ml

@RECOLA_AVAILABLE_TRUE@compare_amplitude_recola_SOURCES = \
@RECOLA_AVAILABLE_TRUE@	parameters_SM_Higgs_recola.f90 \
@RECOLA_AVAILABLE_TRUE@	omega_interface.f90 compare_lib.f90 compare_lib_recola.f90 \
@RECOLA_AVAILABLE_TRUE@	omega_testtools.f90 tao_random_numbers.f90

@RECOLA_AVAILABLE_TRUE@nodist_compare_amplitude_recola_SOURCES = compare_amplitude_recola.f90
@RECOLA_AVAILABLE_TRUE@compare_amplitude_recola_LDADD = \
@RECOLA_AVAILABLE_TRUE@	$(LDFLAGS_RECOLA) \
@RECOLA_AVAILABLE_TRUE@	$(KINDS) $(top_builddir)/omega/src/libomega_core.la

all: all-recursive

.SUFFIXES:
.SUFFIXES: .mll .mly .ml .mli .cmi .cmo .cmx .bin .opt $(OCAML_NATIVE_EXT) .f90 .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/omega/src/Makefile.ocaml $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu omega/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu omega/tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/omega/src/Makefile.ocaml $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

benchmark$(EXEEXT): $(benchmark_OBJECTS) $(benchmark_DEPENDENCIES) $(EXTRA_benchmark_DEPENDENCIES) 
	@rm -f benchmark$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(benchmark_OBJECTS) $(benchmark_LDADD) $(LIBS)

benchmark_UFO_SM$(EXEEXT): $(benchmark_UFO_SM_OBJECTS) $(benchmark_UFO_SM_DEPENDENCIES) $(EXTRA_benchmark_UFO_SM_DEPENDENCIES) 
	@rm -f benchmark_UFO_SM$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(benchmark_UFO_SM_OBJECTS) $(benchmark_UFO_SM_LDADD) $(LIBS)

benchmark_UFO_SMEFT$(EXEEXT): $(benchmark_UFO_SMEFT_OBJECTS) $(benchmark_UFO_SMEFT_DEPENDENCIES) $(EXTRA_benchmark_UFO_SMEFT_DEPENDENCIES) 
	@rm -f benchmark_UFO_SMEFT$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(benchmark_UFO_SMEFT_OBJECTS) $(benchmark_UFO_SMEFT_LDADD) $(LIBS)

benchmark_VM_vs_Fortran$(EXEEXT): $(benchmark_VM_vs_Fortran_OBJECTS) $(benchmark_VM_vs_Fortran_DEPENDENCIES) $(EXTRA_benchmark_VM_vs_Fortran_DEPENDENCIES) 
	@rm -f benchmark_VM_vs_Fortran$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(benchmark_VM_vs_Fortran_OBJECTS) $(benchmark_VM_vs_Fortran_LDADD) $(LIBS)

benchmark_amp_parallel$(EXEEXT): $(benchmark_amp_parallel_OBJECTS) $(benchmark_amp_parallel_DEPENDENCIES) $(EXTRA_benchmark_amp_parallel_DEPENDENCIES) 
	@rm -f benchmark_amp_parallel$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(benchmark_amp_parallel_OBJECTS) $(benchmark_amp_parallel_LDADD) $(LIBS)

compare_amplitude_UFO$(EXEEXT): $(compare_amplitude_UFO_OBJECTS) $(compare_amplitude_UFO_DEPENDENCIES) $(EXTRA_compare_amplitude_UFO_DEPENDENCIES) 
	@rm -f compare_amplitude_UFO$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(compare_amplitude_UFO_OBJECTS) $(compare_amplitude_UFO_LDADD) $(LIBS)

compare_amplitude_VM$(EXEEXT): $(compare_amplitude_VM_OBJECTS) $(compare_amplitude_VM_DEPENDENCIES) $(EXTRA_compare_amplitude_VM_DEPENDENCIES) 
	@rm -f compare_amplitude_VM$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(compare_amplitude_VM_OBJECTS) $(compare_amplitude_VM_LDADD) $(LIBS)

compare_amplitude_recola$(EXEEXT): $(compare_amplitude_recola_OBJECTS) $(compare_amplitude_recola_DEPENDENCIES) $(EXTRA_compare_amplitude_recola_DEPENDENCIES) 
	@rm -f compare_amplitude_recola$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(compare_amplitude_recola_OBJECTS) $(compare_amplitude_recola_LDADD) $(LIBS)

compare_majorana$(EXEEXT): $(compare_majorana_OBJECTS) $(compare_majorana_DEPENDENCIES) $(EXTRA_compare_majorana_DEPENDENCIES) 
	@rm -f compare_majorana$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(compare_majorana_OBJECTS) $(compare_majorana_LDADD) $(LIBS)

compare_majorana_UFO$(EXEEXT): $(compare_majorana_UFO_OBJECTS) $(compare_majorana_UFO_DEPENDENCIES) $(EXTRA_compare_majorana_UFO_DEPENDENCIES) 
	@rm -f compare_majorana_UFO$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(compare_majorana_UFO_OBJECTS) $(compare_majorana_UFO_LDADD) $(LIBS)

compare_majorana_legacy$(EXEEXT): $(compare_majorana_legacy_OBJECTS) $(compare_majorana_legacy_DEPENDENCIES) $(EXTRA_compare_majorana_legacy_DEPENDENCIES) 
	@rm -f compare_majorana_legacy$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(compare_majorana_legacy_OBJECTS) $(compare_majorana_legacy_LDADD) $(LIBS)

compare_split_function$(EXEEXT): $(compare_split_function_OBJECTS) $(compare_split_function_DEPENDENCIES) $(EXTRA_compare_split_function_DEPENDENCIES) 
	@rm -f compare_split_function$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(compare_split_function_OBJECTS) $(compare_split_function_LDADD) $(LIBS)

compare_split_module$(EXEEXT): $(compare_split_module_OBJECTS) $(compare_split_module_DEPENDENCIES) $(EXTRA_compare_split_module_DEPENDENCIES) 
	@rm -f compare_split_module$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(compare_split_module_OBJECTS) $(compare_split_module_LDADD) $(LIBS)

ects$(EXEEXT): $(ects_OBJECTS) $(ects_DEPENDENCIES) $(EXTRA_ects_DEPENDENCIES) 
	@rm -f ects$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ects_OBJECTS) $(ects_LDADD) $(LIBS)

fermi$(EXEEXT): $(fermi_OBJECTS) $(fermi_DEPENDENCIES) $(EXTRA_fermi_DEPENDENCIES) 
	@rm -f fermi$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fermi_OBJECTS) $(fermi_LDADD) $(LIBS)

fermi_UFO$(EXEEXT): $(fermi_UFO_OBJECTS) $(fermi_UFO_DEPENDENCIES) $(EXTRA_fermi_UFO_DEPENDENCIES) 
	@rm -f fermi_UFO$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(fermi_UFO_OBJECTS) $(fermi_UFO_LDADD) $(LIBS)

keystones_UFO$(EXEEXT): $(keystones_UFO_OBJECTS) $(keystones_UFO_DEPENDENCIES) $(EXTRA_keystones_UFO_DEPENDENCIES) 
	@rm -f keystones_UFO$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(keystones_UFO_OBJECTS) $(keystones_UFO_LDADD) $(LIBS)

keystones_UFO_bispinors$(EXEEXT): $(keystones_UFO_bispinors_OBJECTS) $(keystones_UFO_bispinors_DEPENDENCIES) $(EXTRA_keystones_UFO_bispinors_DEPENDENCIES) 
	@rm -f keystones_UFO_bispinors$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(keystones_UFO_bispinors_OBJECTS) $(keystones_UFO_bispinors_LDADD) $(LIBS)

@OCAML_AVAILABLE_FALSE@keystones_UFO_bispinors_generate$(EXEEXT): $(keystones_UFO_bispinors_generate_OBJECTS) $(keystones_UFO_bispinors_generate_DEPENDENCIES) $(EXTRA_keystones_UFO_bispinors_generate_DEPENDENCIES) 
@OCAML_AVAILABLE_FALSE@	@rm -f keystones_UFO_bispinors_generate$(EXEEXT)
@OCAML_AVAILABLE_FALSE@	$(AM_V_CCLD)$(LINK) $(keystones_UFO_bispinors_generate_OBJECTS) $(keystones_UFO_bispinors_generate_LDADD) $(LIBS)

@OCAML_AVAILABLE_FALSE@keystones_UFO_generate$(EXEEXT): $(keystones_UFO_generate_OBJECTS) $(keystones_UFO_generate_DEPENDENCIES) $(EXTRA_keystones_UFO_generate_DEPENDENCIES) 
@OCAML_AVAILABLE_FALSE@	@rm -f keystones_UFO_generate$(EXEEXT)
@OCAML_AVAILABLE_FALSE@	$(AM_V_CCLD)$(LINK) $(keystones_UFO_generate_OBJECTS) $(keystones_UFO_generate_LDADD) $(LIBS)

keystones_omegalib$(EXEEXT): $(keystones_omegalib_OBJECTS) $(keystones_omegalib_DEPENDENCIES) $(EXTRA_keystones_omegalib_DEPENDENCIES) 
	@rm -f keystones_omegalib$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(keystones_omegalib_OBJECTS) $(keystones_omegalib_LDADD) $(LIBS)

keystones_omegalib_bispinors$(EXEEXT): $(keystones_omegalib_bispinors_OBJECTS) $(keystones_omegalib_bispinors_DEPENDENCIES) $(EXTRA_keystones_omegalib_bispinors_DEPENDENCIES) 
	@rm -f keystones_omegalib_bispinors$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(keystones_omegalib_bispinors_OBJECTS) $(keystones_omegalib_bispinors_LDADD) $(LIBS)

@OCAML_AVAILABLE_FALSE@keystones_omegalib_bispinors_generate$(EXEEXT): $(keystones_omegalib_bispinors_generate_OBJECTS) $(keystones_omegalib_bispinors_generate_DEPENDENCIES) $(EXTRA_keystones_omegalib_bispinors_generate_DEPENDENCIES) 
@OCAML_AVAILABLE_FALSE@	@rm -f keystones_omegalib_bispinors_generate$(EXEEXT)
@OCAML_AVAILABLE_FALSE@	$(AM_V_CCLD)$(LINK) $(keystones_omegalib_bispinors_generate_OBJECTS) $(keystones_omegalib_bispinors_generate_LDADD) $(LIBS)

@OCAML_AVAILABLE_FALSE@keystones_omegalib_generate$(EXEEXT): $(keystones_omegalib_generate_OBJECTS) $(keystones_omegalib_generate_DEPENDENCIES) $(EXTRA_keystones_omegalib_generate_DEPENDENCIES) 
@OCAML_AVAILABLE_FALSE@	@rm -f keystones_omegalib_generate$(EXEEXT)
@OCAML_AVAILABLE_FALSE@	$(AM_V_CCLD)$(LINK) $(keystones_omegalib_generate_OBJECTS) $(keystones_omegalib_generate_LDADD) $(LIBS)

@OCAML_AVAILABLE_FALSE@omega_unit$(EXEEXT): $(omega_unit_OBJECTS) $(omega_unit_DEPENDENCIES) $(EXTRA_omega_unit_DEPENDENCIES) 
@OCAML_AVAILABLE_FALSE@	@rm -f omega_unit$(EXEEXT)
@OCAML_AVAILABLE_FALSE@	$(AM_V_CCLD)$(LINK) $(omega_unit_OBJECTS) $(omega_unit_LDADD) $(LIBS)

test_omega95$(EXEEXT): $(test_omega95_OBJECTS) $(test_omega95_DEPENDENCIES) $(EXTRA_test_omega95_DEPENDENCIES) 
	@rm -f test_omega95$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_omega95_OBJECTS) $(test_omega95_LDADD) $(LIBS)

test_omega95_bispinors$(EXEEXT): $(test_omega95_bispinors_OBJECTS) $(test_omega95_bispinors_DEPENDENCIES) $(EXTRA_test_omega95_bispinors_DEPENDENCIES) 
	@rm -f test_omega95_bispinors$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_omega95_bispinors_OBJECTS) $(test_omega95_bispinors_LDADD) $(LIBS)

test_openmp$(EXEEXT): $(test_openmp_OBJECTS) $(test_openmp_DEPENDENCIES) $(EXTRA_test_openmp_DEPENDENCIES) 
	@rm -f test_openmp$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_openmp_OBJECTS) $(test_openmp_LDADD) $(LIBS)

test_qed_eemm$(EXEEXT): $(test_qed_eemm_OBJECTS) $(test_qed_eemm_DEPENDENCIES) $(EXTRA_test_qed_eemm_DEPENDENCIES) 
	@rm -f test_qed_eemm$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_qed_eemm_OBJECTS) $(test_qed_eemm_LDADD) $(LIBS)

@OCAML_AVAILABLE_FALSE@ufo_unit$(EXEEXT): $(ufo_unit_OBJECTS) $(ufo_unit_DEPENDENCIES) $(EXTRA_ufo_unit_DEPENDENCIES) 
@OCAML_AVAILABLE_FALSE@	@rm -f ufo_unit$(EXEEXT)
@OCAML_AVAILABLE_FALSE@	$(AM_V_CCLD)$(LINK) $(ufo_unit_OBJECTS) $(ufo_unit_LDADD) $(LIBS)

@OCAML_AVAILABLE_FALSE@vertex_unit$(EXEEXT): $(vertex_unit_OBJECTS) $(vertex_unit_DEPENDENCIES) $(EXTRA_vertex_unit_DEPENDENCIES) 
@OCAML_AVAILABLE_FALSE@	@rm -f vertex_unit$(EXEEXT)
@OCAML_AVAILABLE_FALSE@	$(AM_V_CCLD)$(LINK) $(vertex_unit_OBJECTS) $(vertex_unit_LDADD) $(LIBS)

ward$(EXEEXT): $(ward_OBJECTS) $(ward_DEPENDENCIES) $(EXTRA_ward_DEPENDENCIES) 
	@rm -f ward$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ward_OBJECTS) $(ward_LDADD) $(LIBS)

ward_UFO$(EXEEXT): $(ward_UFO_OBJECTS) $(ward_UFO_DEPENDENCIES) $(EXTRA_ward_UFO_DEPENDENCIES) 
	@rm -f ward_UFO$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ward_UFO_OBJECTS) $(ward_UFO_LDADD) $(LIBS)

ward_fail$(EXEEXT): $(ward_fail_OBJECTS) $(ward_fail_DEPENDENCIES) $(EXTRA_ward_fail_DEPENDENCIES) 
	@rm -f ward_fail$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ward_fail_OBJECTS) $(ward_fail_LDADD) $(LIBS)

ward_long$(EXEEXT): $(ward_long_OBJECTS) $(ward_long_DEPENDENCIES) $(EXTRA_ward_long_DEPENDENCIES) 
	@rm -f ward_long$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(ward_long_OBJECTS) $(ward_long_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) `$(CYGPATH_W) '$<'`

.f90.lo:
	$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
omega_unit.log: omega_unit$(EXEEXT)
	@p='omega_unit$(EXEEXT)'; \
	b='omega_unit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_omega95.log: test_omega95$(EXEEXT)
	@p='test_omega95$(EXEEXT)'; \
	b='test_omega95'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_omega95_bispinors.log: test_omega95_bispinors$(EXEEXT)
	@p='test_omega95_bispinors$(EXEEXT)'; \
	b='test_omega95_bispinors'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_qed_eemm.log: test_qed_eemm$(EXEEXT)
	@p='test_qed_eemm$(EXEEXT)'; \
	b='test_qed_eemm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ects.log: ects$(EXEEXT)
	@p='ects$(EXEEXT)'; \
	b='ects'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cascade.log: cascade
	@p='cascade'; \
	b='cascade'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
phase_space.log: phase_space
	@p='phase_space'; \
	b='phase_space'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fermi.log: fermi$(EXEEXT)
	@p='fermi$(EXEEXT)'; \
	b='fermi'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ward.log: ward$(EXEEXT)
	@p='ward$(EXEEXT)'; \
	b='ward'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compare_split_function.log: compare_split_function$(EXEEXT)
	@p='compare_split_function$(EXEEXT)'; \
	b='compare_split_function'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compare_split_module.log: compare_split_module$(EXEEXT)
	@p='compare_split_module$(EXEEXT)'; \
	b='compare_split_module'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compare_majorana.log: compare_majorana$(EXEEXT)
	@p='compare_majorana$(EXEEXT)'; \
	b='compare_majorana'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compare_majorana_legacy.log: compare_majorana_legacy$(EXEEXT)
	@p='compare_majorana_legacy$(EXEEXT)'; \
	b='compare_majorana_legacy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compare_majorana_UFO.log: compare_majorana_UFO$(EXEEXT)
	@p='compare_majorana_UFO$(EXEEXT)'; \
	b='compare_majorana_UFO'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compare_amplitude_UFO.log: compare_amplitude_UFO$(EXEEXT)
	@p='compare_amplitude_UFO$(EXEEXT)'; \
	b='compare_amplitude_UFO'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
fermi_UFO.log: fermi_UFO$(EXEEXT)
	@p='fermi_UFO$(EXEEXT)'; \
	b='fermi_UFO'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ward_UFO.log: ward_UFO$(EXEEXT)
	@p='ward_UFO$(EXEEXT)'; \
	b='ward_UFO'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compare_amplitude_VM.log: compare_amplitude_VM$(EXEEXT)
	@p='compare_amplitude_VM$(EXEEXT)'; \
	b='compare_amplitude_VM'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_openmp.log: test_openmp$(EXEEXT)
	@p='test_openmp$(EXEEXT)'; \
	b='test_openmp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
vertex_unit.log: vertex_unit$(EXEEXT)
	@p='vertex_unit$(EXEEXT)'; \
	b='vertex_unit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ufo_unit.log: ufo_unit$(EXEEXT)
	@p='ufo_unit$(EXEEXT)'; \
	b='ufo_unit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
keystones_omegalib.log: keystones_omegalib$(EXEEXT)
	@p='keystones_omegalib$(EXEEXT)'; \
	b='keystones_omegalib'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
keystones_UFO.log: keystones_UFO$(EXEEXT)
	@p='keystones_UFO$(EXEEXT)'; \
	b='keystones_UFO'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
keystones_omegalib_bispinors.log: keystones_omegalib_bispinors$(EXEEXT)
	@p='keystones_omegalib_bispinors$(EXEEXT)'; \
	b='keystones_omegalib_bispinors'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
keystones_UFO_bispinors.log: keystones_UFO_bispinors$(EXEEXT)
	@p='keystones_UFO_bispinors$(EXEEXT)'; \
	b='keystones_UFO_bispinors'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
compare_amplitude_recola.log: compare_amplitude_recola$(EXEEXT)
	@p='compare_amplitude_recola$(EXEEXT)'; \
	b='compare_amplitude_recola'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am: installcheck-local

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-generic clean-libtool \
	clean-local cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installcheck-local \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


.cmx$(OCAML_NATIVE_EXT):
	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) -o $@ \
	  unix.cmxa $(OMEGA_CMXA) $<

.cmo$(OCAML_BYTECODE_EXT):
	@if $(AM_V_P); then :; else echo "  OCAMLC   " $@; fi
	$(AM_V_at)$(OCAMLC) $(OCAMLDEBUGFLAGS) $(OCAMLFLAGS) -o $@ \
	  unix.cma $(OMEGA_CMA) $<

.ml.cmx:
	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) -o $@ -c $<

.mli.cmi:
	@if $(AM_V_P); then :; else echo "  OCAMLC   " $@; fi
	$(AM_V_at)$(OCAMLCI) $(OCAMLFLAGS) -o $@ -c $<

.ml.cmo:
	@if $(AM_V_P); then :; else echo "  OCAMLC   " $@; fi
	$(AM_V_at)$(OCAMLC) $(OCAMLDEBUGFLAGS) $(OCAMLFLAGS) -o $@ -c $<

.mll.ml:
	@if $(AM_V_P); then :; else echo "  OCAMLLEX " $@; fi
	$(AM_V_at)$(OCAMLLEX) -o $@ $<

.mly.mli:
	@if $(AM_V_P); then :; else echo "  OCAMLYACC" $@; fi
	$(AM_V_at)$(OCAMLYACC) -b$* $<

.mly.ml:
	@if $(AM_V_P); then :; else echo "  OCAMLYACC" $@; fi
	$(AM_V_at)$(OCAMLYACC) -b$* $<

########################################################################
########################################################################

@OCAML_AVAILABLE_TRUE@omega_unit: $(OMEGA_CORE) omega_unit.cmx
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) -o omega_unit \
@OCAML_AVAILABLE_TRUE@		unix.cmxa $(OMEGA_CORE) omega_unit.cmx

@OCAML_AVAILABLE_TRUE@omega_unit.cmx: omega_unit.ml

@OCAML_AVAILABLE_TRUE@omega_unit.cmx: $(OMEGA_CORE)

test_omega95.o test_omega95_bispinors.o: omega_testtools.o

@NOWEB_AVAILABLE_TRUE@test_omega95.f90: $(top_srcdir)/omega/src/omegalib.nw
@NOWEB_AVAILABLE_TRUE@	$(NOTANGLE) -R[[$@]] $< | $(CPIF) $@
@NOWEB_AVAILABLE_TRUE@test_omega95_bispinors.f90: $(top_srcdir)/omega/src/omegalib.nw
@NOWEB_AVAILABLE_TRUE@	$(NOTANGLE) -R[[$@]] $< | $(CPIF) $@
@NOWEB_AVAILABLE_TRUE@omega_testtools.f90: $(top_srcdir)/omega/src/omegalib.nw
@NOWEB_AVAILABLE_TRUE@	$(NOTANGLE) -R[[$@]] $< | $(CPIF) $@

@OCAML_AVAILABLE_TRUE@amplitude_qed_eemm.f90: $(OMEGA_QED) Makefile
@OCAML_AVAILABLE_TRUE@	$(OMEGA_QED) $(OMEGA_QED_OPTS) -target:module amplitude_qed_eemm \
@OCAML_AVAILABLE_TRUE@	-scatter "e+ e- -> m+ m-" > $@

@OCAML_AVAILABLE_TRUE@test_qed_eemm.o: amplitude_qed_eemm.o
@OCAML_AVAILABLE_TRUE@test_qed_eemm.o: parameters_QED.o
@OCAML_AVAILABLE_TRUE@amplitude_qed_eemm.o: parameters_QED.o

# Explicitly state dependence on model files

ects.f90: $(OMEGA_QCD) $(OMEGA_SYM) $(OMEGA_SM)
ects.f90: ects_driver.sh $(EXTENDED_COLOR_TESTS)
	@if $(AM_V_P); then :; else echo "  ECTS_DRIVER"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/ects_driver.sh \
		$(OMEGA_XXX) $(EXTENDED_COLOR_TESTS) > $@

cascade: cascade_driver.sh Makefile
	$(SED) -e 's|%%cascade_tests%%|$(CASCADE_TESTS)|' \
	  -e 's|%%srcdir%%|$(srcdir)|' \
	  -e 's|%%SED%%|$(SED)|' \
	  -e 's|%%top_builddir%%|$(top_builddir)|' \
	  -e 's|%%OCAML_NATIVE_EXT%%|$(OCAML_NATIVE_EXT)|' $< >$@
	chmod +x $@

phase_space: phase_space_driver.sh Makefile
	$(SED) -e 's|%%phase_space_tests%%|$(PHASE_SPACE_TESTS)|' \
	  -e 's|%%srcdir%%|$(srcdir)|' \
	  -e 's|%%SED%%|$(SED)|' \
	  -e 's|%%top_builddir%%|$(top_builddir)|' \
	  -e 's|%%OCAML_NATIVE_EXT%%|$(OCAML_NATIVE_EXT)|' $< >$@
	chmod +x $@
fermi_lib.o: $(FERMI_SUPPORT_O)

run_fermi: fermi
	./fermi

fermi.f90: fermi_driver.sh $(OMEGA_QED) $(OMEGA_QCD) $(OMEGA_SYM)
fermi.f90: $(OMEGA_SM) $(OMEGA_SM_top_anom)
fermi.f90: fermi.list
	@if $(AM_V_P); then :; else echo "  FERMI_DRIVER"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/fermi_driver.sh \
		$(OMEGA_XXX) $(OMEGA_SPLIT) < $< > $@

fermi.o: $(FERMI_LIB_O)
ward_lib.o: $(WARD_SUPPORT_O)

run_ward: ward
	./ward

ward.f90: ward_driver.sh $(OMEGA_QED) $(OMEGA_QCD) $(OMEGA_SYM)
ward.f90: $(OMEGA_SM) $(OMEGA_SM_top_anom)
ward.f90: ward_identities.list
	@if $(AM_V_P); then :; else echo "  WARD_DRIVER"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/ward_driver.sh \
		$(OMEGA_XXX) $(OMEGA_SPLIT) < $< > $@

ward.o: $(WARD_LIB_O)

run_ward_long: ward_long
	./ward_long

ward_long.f90: ward_driver.sh
ward_long.f90: ward_identities_long.list
	@if $(AM_V_P); then :; else echo "  WARD_DRIVER"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/ward_driver.sh \
		$(OMEGA_XXX) $(OMEGA_SPLIT) < $< > $@

# ward_long.o: ward_long.f90
# 	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) -O0 $<

ward_long.o: $(WARD_LIB_O)

run_ward_fail: ward_fail
	./ward_fail

ward_fail.f90: ward_driver.sh
ward_fail.f90: ward_identities_fail.list
	@if $(AM_V_P); then :; else echo "  WARD_DRIVER"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/ward_driver.sh \
		$(OMEGA_XXX) $(OMEGA_SPLIT) < $< > $@

ward_fail.o: ward_fail.f90
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) -O0 $<

ward_fail.o: $(WARD_LIB_O)
compare_lib.o: $(COMPARE_SUPPORT_O)

run_compare: compare_split_function compare_split_module
	./compare_split_function
	./compare_split_module

compare_split_function.f90: comparisons.list
	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver.sh SF \
	"$(OMEGA_XXX) -target:single_function" \
	"$(OMEGA_XXX) -target:split_function 10" < $< > $@

compare_split_module.f90: comparisons.list
	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver.sh SM \
	"$(OMEGA_XXX) -target:single_function" \
	"$(OMEGA_XXX) -target:split_module 10" < $< > $@

compare_split_function.f90 compare_split_module.f90: \
	compare_driver.sh $(OMEGA_QCD) $(OMEGA_SM)

compare_split_function.o compare_split_module.o: $(COMPARE_LIB_O)

@OCAML_AVAILABLE_TRUE@compare_majorana.f90: comparisons_majorana.list
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER"; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver_majorana.sh Maj \
@OCAML_AVAILABLE_TRUE@	"$(OMEGA_XXX)" "$(OMEGA_XXX_MAJORANA)" < $< > $@

@OCAML_AVAILABLE_TRUE@compare_majorana_legacy.f90: comparisons_majorana_legacy.list
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER"; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver_majorana.sh MajL \
@OCAML_AVAILABLE_TRUE@	"$(OMEGA_XXX)" "$(OMEGA_XXX_MAJORANA_LEGACY)" < $< > $@

@OCAML_AVAILABLE_TRUE@compare_majorana_UFO.f90: comparisons_majorana_UFO.list
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER"; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver_majorana_UFO.sh MajU \
@OCAML_AVAILABLE_TRUE@	"$(OMEGA_UFO)" "$(OMEGA_UFO_MAJORANA)" "$(OMEGA_UFO_PATH)" < $< > $@

@OCAML_AVAILABLE_TRUE@compare_majorana.f90 compare_majorana_legacy.f90 compare_majorana_UFO.f90: \
@OCAML_AVAILABLE_TRUE@	compare_driver_majorana.sh $(OMEGA_UFO) $(OMEGA_UFO_MAJORANA)

@OCAML_AVAILABLE_TRUE@compare_majorana.o compare_majorana_legacy.o compare_majorana_UFO.o: $(COMPARE_LIB_O)
@OCAML_AVAILABLE_TRUE@compare_majorana_UFO.o: parameters_SM_UFO.o

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@compare_amplitude_UFO.f90: comparisons_UFO.list compare_driver_UFO.sh $(OMEGA_UFO)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER_UFO"; fi
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver_UFO.sh UFO \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	  "$(OMEGA_XXX) -model:constant_width" \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	  "$(OMEGA_UFO) -model:UFO_dir $(top_srcdir)/omega/tests/UFO/%%%/ -model:exec" \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@		< $< > $@

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@parameters_SM_from_UFO.o: parameters_SM_UFO.o
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@compare_amplitude_UFO.o: parameters_SM_UFO.o parameters_SM_from_UFO.o
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@compare_amplitude_UFO.o: $(COMPARE_LIB_O)

@OCAML_AVAILABLE_TRUE@parameters_SM_UFO.f90: $(OMEGA_UFO)
@OCAML_AVAILABLE_TRUE@	$(OMEGA_UFO) \
@OCAML_AVAILABLE_TRUE@	  -model:UFO_dir $(OMEGA_UFO_PATH)/SM/ -model:exec \
@OCAML_AVAILABLE_TRUE@	  -target:parameter_module parameters_sm_ufo -params > $@
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@fermi_UFO_lib.o: $(FERMI_SUPPORT_O)

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@run_fermi_UFO: fermi_UFO
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	./fermi_UFO

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@fermi_UFO.f90: fermi_UFO.list fermi_driver_UFO.sh $(OMEGA_UFO)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  FERMI_UFO_DRIVER"; fi
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(SHELL) $(srcdir)/fermi_driver_UFO.sh \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	  $(OMEGA_UFO) $(OMEGA_UFO_MAJORANA) $(OMEGA_UFO_PATH) \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	  $(OMEGA_SPLIT) < $< > $@

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@fermi_UFO.o: $(FERMI_UFO_LIB_O) parameters_SM_UFO.o
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@ward_UFO_lib.o: $(WARD_SUPPORT_O)

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@run_ward_UFO: ward_UFO
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	./ward_UFO

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@ward_UFO.f90: ward_identities_UFO.list ward_driver_UFO.sh $(OMEGA_UFO)
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  WARD_UFO_DRIVER"; fi
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(SHELL) $(srcdir)/ward_driver_UFO.sh \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	  $(OMEGA_UFO) -model:UFO_dir $(top_srcdir)/omega/tests/UFO/SM/ \
@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@	  $(OMEGA_SPLIT) < $< > $@

@FC_PREC_FALSE@@OCAML_AVAILABLE_TRUE@ward_UFO.o: $(WARD_UFO_LIB_O) parameters_SM_UFO.o

compare_amplitude_VM.f90: comparisons_VM.list comparisons_VM.wrappers.o
	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER_VM"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver_VM.sh \
	"$(OMEGA_XXX) " "$(OMEGA_XXX_VM) " "$(OMEGA_XXX_VM_PARAMS_OPTS)" < $< > $@

comparisons_VM.wrappers.f90: comparisons_VM.list
	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER_VM_WRAPPERS"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver_VM_wrappers.sh \
	"$(OMEGA_XXX) " "$(OMEGA_XXX_VM) " "$(OMEGA_XXX_VM_PARAMS_OPTS)" < $< > $@

# Explicitly state dependence on model files
compare_amplitude_VM.f90: compare_driver_VM.sh \
	$(OMEGA_QED)      $(OMEGA_QED_VM)      \
	$(OMEGA_QCD)      $(OMEGA_QCD_VM)      \
	$(OMEGA_SM)       $(OMEGA_SM_VM)       \
	$(OMEGA_SM_CKM)   $(OMEGA_SM_CKM_VM)   \
	$(OMEGA_SM_Higgs) $(OMEGA_SM_Higgs_VM) \
	$(OMEGA_THDM)     $(OMEGA_THDM_VM)     \
	$(OMEGA_THDM_CKM) $(OMEGA_THDM_CKM_VM) \
	$(OMEGA_HSExt)    $(OMEGA_HSExt_VM)    \
	$(OMEGA_Zprime)   $(OMEGA_Zprime_VM)   

compare_amplitude_VM.o: $(COMPARE_LIB_O)

@FC_USE_OPENMP_TRUE@amplitude_openmp.f90: $(OMEGA_QCD) Makefile
@FC_USE_OPENMP_TRUE@	$(OMEGA_QCD) $(OMEGA_QCD_OPTS) -target:openmp \
@FC_USE_OPENMP_TRUE@	-target:module amplitude_openmp -scatter "gl gl -> gl gl gl" > $@

@FC_USE_OPENMP_TRUE@test_openmp.o: amplitude_openmp.o
@FC_USE_OPENMP_TRUE@test_openmp.o: $(TESTOPENMP_SUPPORT_O)
@FC_USE_OPENMP_TRUE@amplitude_openmp.o: parameters_QCD.o

benchmark_VM_vs_Fortran.f90: benchmark_processes.list benchmark_processes.wrappers.o
	@if $(AM_V_P); then :; else echo "  BENCHMARK_VM_DRIVER"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/benchmark_VM_vs_Fortran_driver.sh \
	"$(OMEGA_XXX) " "$(OMEGA_XXX_VM) " "$(OMEGA_XXX_VM_PARAMS_OPTS)" < $< > $@

benchmark_processes.wrappers.f90: benchmark_processes.list
	@if $(AM_V_P); then :; else echo "  BENCHMARK_DRIVER_WRAPPERS"; fi
	$(AM_V_at)$(SHELL) $(srcdir)/benchmark_driver_wrappers.sh \
	"$(OMEGA_XXX) " "$(OMEGA_XXX_VM) " "$(OMEGA_XXX_VM_PARAMS_OPTS)" < $< > $@

# Explicitly state dependence on model files
benchmark_VM_vs_Fortran.f90: benchmark_VM_vs_Fortran_driver.sh \
	$(OMEGA_QED) $(OMEGA_QED_VM) \
	$(OMEGA_QCD) $(OMEGA_QCD_VM) \
	$(OMEGA_SM)  $(OMEGA_SM_VM)

benchmark_VM_vs_Fortran.o: $(BENCHMARK_LIB_O)

@FC_USE_OPENMP_TRUE@benchmark_amp_parallel.f90: benchmark_processes.list benchmark_processes.wrappers.o
@FC_USE_OPENMP_TRUE@	@if $(AM_V_P); then :; else echo "  BENCHMARK_PARALLEL_DRIVER"; fi
@FC_USE_OPENMP_TRUE@	$(AM_V_at)$(SHELL) $(srcdir)/benchmark_amp_parallel_driver.sh \
@FC_USE_OPENMP_TRUE@	"$(OMEGA_XXX) " "$(OMEGA_XXX_VM) " "$(OMEGA_XXX_VM_PARAMS_OPTS)" < $< > $@

# Explicitly state dependence on model files
@FC_USE_OPENMP_TRUE@benchmark_amp_parallel.f90: benchmark_amp_parallel_driver.sh \
@FC_USE_OPENMP_TRUE@	$(OMEGA_QED) $(OMEGA_QED_VM) \
@FC_USE_OPENMP_TRUE@	$(OMEGA_QCD) $(OMEGA_QCD_VM) \
@FC_USE_OPENMP_TRUE@	$(OMEGA_SM)  $(OMEGA_SM_VM)

@FC_USE_OPENMP_TRUE@benchmark_amp_parallel.o: $(BENCHMARK_LIB_O)

run_benchmark: benchmark
	./benchmark

amplitude_benchmark_v1.f90: $(OMEGA_QCD) Makefile
	$(OMEGA_QCD) $(OMEGA_QCD_OPTS) -target:module amplitude_benchmark_v1 \
	$(BENCHMARK_PROCESS) -target:single_function > $@

amplitude_benchmark_v2.f90: $(OMEGA_QCD) Makefile
	$(OMEGA_QCD) $(OMEGA_QCD_OPTS) -target:module amplitude_benchmark_v2 \
	$(BENCHMARK_PROCESS) -target:split_function $(BENCHMARK_SPLIT_SIZE) > $@

amplitude_benchmark_v3.f90: $(OMEGA_QCD) Makefile
	$(OMEGA_QCD) $(OMEGA_QCD_OPTS) -target:module amplitude_benchmark_v3 \
	$(BENCHMARK_PROCESS) -target:split_module $(BENCHMARK_SPLIT_SIZE) > $@

amplitude_benchmark_v4.f90: $(OMEGA_QCD) Makefile
	$(OMEGA_QCD) $(OMEGA_QCD_OPTS) -target:module amplitude_benchmark_v4 \
	$(BENCHMARK_PROCESS) -target:split_file $(BENCHMARK_SPLIT_SIZE) > $@

benchmark.o: \
	amplitude_benchmark_v1.o amplitude_benchmark_v2.o \
	amplitude_benchmark_v3.o # amplitude_benchmark_v4.o
benchmark.o: parameters_QCD.o
amplitude_benchmark_v1.o amplitude_benchmark_v2.o \
	amplitude_benchmark_v3.o amplitude_benchmark_v4.o: parameters_QCD.o

run_benchmark_UFO_SM: benchmark_UFO_SM
	./benchmark_UFO_SM

amplitude_benchmark_UFO_SM_classic.f90: $(OMEGA_SM) Makefile
	$(OMEGA_SM) -target:module amplitude_benchmark_UFO_SM_classic \
	-target:parameter_module parameters_SM_from_UFO \
	$(BENCHMARK_UFO_SM_PROCESS) > $@

amplitude_benchmark_UFO_SM.f90: $(OMEGA_UFO) Makefile
	$(OMEGA_UFO) -model:UFO_dir $(UFO_SM) -model:exec \
	-target:module amplitude_benchmark_UFO_SM \
	-target:parameter_module parameters_SM_UFO \
	$(BENCHMARK_UFO_SM_PROCESS) > $@

benchmark_UFO_SM.o: \
	amplitude_benchmark_UFO_SM.o amplitude_benchmark_UFO_SM_classic.o

benchmark_UFO_SM.o: parameters_SM_UFO.o parameters_SM_from_UFO.o 
amplitude_benchmark_UFO_SM_classic.o: parameters_SM_from_UFO.o
amplitude_benchmark_UFO_SM.o: parameters_SM_UFO.o

run_benchmark_UFO_SMEFT: benchmark_UFO_SMEFT
	./benchmark_UFO_SMEFT

amplitude_benchmark_UFO_SMEFT.f90: $(OMEGA_UFO) Makefile
	$(OMEGA_UFO) -model:UFO_dir $(UFO_SMEFT) -model:exec \
	-target:module amplitude_benchmark_UFO_SMEFT \
	-target:parameter_module parameters_UFO_SMEFT \
	$(BENCHMARK_UFO_SMEFT_PROCESS) | $(SED) 's/g == 0/.false./' > $@

amplitude_benchmark_UFO_SMEFT_opt.f90: $(OMEGA_UFO) Makefile
	$(OMEGA_UFO) -model:UFO_dir $(UFO_SMEFT) -model:exec \
	-target:module amplitude_benchmark_UFO_SMEFT_opt \
	-target:parameter_module parameters_UFO_SMEFT \
	$(BENCHMARK_UFO_SMEFT_PROCESS) > $@

benchmark_UFO_SMEFT.o: \
	amplitude_benchmark_UFO_SMEFT.o amplitude_benchmark_UFO_SMEFT_opt.o

benchmark_UFO_SMEFT.o: parameters_UFO_SMEFT.o
amplitude_benchmark_UFO_SMEFT.o amplitude_benchmark_UFO_SMEFT_opt.o: \
	parameters_UFO_SMEFT.o

parameters_UFO_SMEFT.f90: $(OMEGA_UFO)
	$(OMEGA_UFO) -model:UFO_dir $(UFO_SMEFT) -model:exec \
	-target:parameter_module parameters_UFO_SMEFT -params > $@

@OCAML_AVAILABLE_TRUE@vertex_unit: $(OMEGA_CORE) vertex_unit.cmx
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) -o vertex_unit \
@OCAML_AVAILABLE_TRUE@		unix.cmxa $(OMEGA_CORE) $(OMEGA_MODELS) vertex_unit.cmx

@OCAML_AVAILABLE_TRUE@vertex_unit.cmx: vertex_unit.ml

@OCAML_AVAILABLE_TRUE@vertex_unit.cmx: $(OMEGA_CORE) $(OMEGA_MODELS)

@OCAML_AVAILABLE_TRUE@ufo_unit: $(OMEGA_CORE) ufo_unit.cmx
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) -o ufo_unit \
@OCAML_AVAILABLE_TRUE@		unix.cmxa $(OMEGA_CORE) $(OMEGA_MODELS) ufo_unit.cmx

@OCAML_AVAILABLE_TRUE@ufo_unit.cmx: ufo_unit.ml

@OCAML_AVAILABLE_TRUE@ufo_unit.cmx: $(OMEGA_CORE) $(OMEGA_MODELS)

@OCAML_AVAILABLE_TRUE@keystones_omegalib.f90: keystones_omegalib_generate
@OCAML_AVAILABLE_TRUE@	./keystones_omegalib_generate -cat > $@

@OCAML_AVAILABLE_TRUE@keystones_UFO.f90: keystones_UFO_generate
@OCAML_AVAILABLE_TRUE@	./keystones_UFO_generate -cat > $@

@OCAML_AVAILABLE_TRUE@keystones_omegalib_bispinors.f90: keystones_omegalib_bispinors_generate
@OCAML_AVAILABLE_TRUE@	./keystones_omegalib_bispinors_generate -cat > $@

@OCAML_AVAILABLE_TRUE@keystones_UFO_bispinors.f90: keystones_UFO_bispinors_generate
@OCAML_AVAILABLE_TRUE@	./keystones_UFO_bispinors_generate -cat > $@

@OCAML_AVAILABLE_TRUE@keystones_omegalib_generate: $(OMEGA_CORE) keystones_omegalib_generate.cmx
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) \
@OCAML_AVAILABLE_TRUE@		-o keystones_omegalib_generate \
@OCAML_AVAILABLE_TRUE@		unix.cmxa $(OMEGA_CORE) $(OMEGA_MODELS) \
@OCAML_AVAILABLE_TRUE@		keystones.cmx keystones_omegalib_generate.cmx

@OCAML_AVAILABLE_TRUE@keystones_UFO_generate: $(OMEGA_CORE) keystones_UFO_generate.cmx
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) \
@OCAML_AVAILABLE_TRUE@		-o keystones_UFO_generate \
@OCAML_AVAILABLE_TRUE@		unix.cmxa $(OMEGA_CORE) $(OMEGA_MODELS) \
@OCAML_AVAILABLE_TRUE@		keystones.cmx keystones_UFO_generate.cmx

@OCAML_AVAILABLE_TRUE@keystones_omegalib_bispinors_generate: $(OMEGA_CORE) keystones_omegalib_bispinors_generate.cmx
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) \
@OCAML_AVAILABLE_TRUE@		-o keystones_omegalib_bispinors_generate \
@OCAML_AVAILABLE_TRUE@		unix.cmxa $(OMEGA_CORE) $(OMEGA_MODELS) \
@OCAML_AVAILABLE_TRUE@		keystones.cmx keystones_omegalib_bispinors_generate.cmx

@OCAML_AVAILABLE_TRUE@keystones_UFO_bispinors_generate: $(OMEGA_CORE) keystones_UFO_bispinors_generate.cmx
@OCAML_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  OCAMLOPT " $@; fi
@OCAML_AVAILABLE_TRUE@	$(AM_V_at)$(OCAMLOPT) $(OCAMLFLAGS) $(OCAMLOPTFLAGS) \
@OCAML_AVAILABLE_TRUE@		-o keystones_UFO_bispinors_generate \
@OCAML_AVAILABLE_TRUE@		unix.cmxa $(OMEGA_CORE) $(OMEGA_MODELS) \
@OCAML_AVAILABLE_TRUE@		keystones.cmx keystones_UFO_bispinors_generate.cmx

@OCAML_AVAILABLE_TRUE@keystones_omegalib_generate.cmx: \
@OCAML_AVAILABLE_TRUE@	keystones.cmi keystones.cmx keystones_omegalib_generate.ml
@OCAML_AVAILABLE_TRUE@keystones_omegalib_generate.cmx: $(OMEGA_CORE) $(OMEGA_MODELS)

@OCAML_AVAILABLE_TRUE@keystones_UFO_generate.cmx: \
@OCAML_AVAILABLE_TRUE@	keystones.cmi keystones.cmx keystones_UFO_generate.ml
@OCAML_AVAILABLE_TRUE@keystones_UFO_generate.cmx: $(OMEGA_CORE) $(OMEGA_MODELS)

@OCAML_AVAILABLE_TRUE@keystones_omegalib_bispinors_generate.cmx: \
@OCAML_AVAILABLE_TRUE@	keystones.cmi keystones.cmx keystones_omegalib_bispinors_generate.ml
@OCAML_AVAILABLE_TRUE@keystones_omegalib_bispinors_generate.cmx: $(OMEGA_CORE) $(OMEGA_MODELS)

@OCAML_AVAILABLE_TRUE@keystones_UFO_bispinors_generate.cmx: \
@OCAML_AVAILABLE_TRUE@	keystones.cmi keystones.cmx keystones_UFO_bispinors_generate.ml
@OCAML_AVAILABLE_TRUE@keystones_UFO_bispinors_generate.cmx: $(OMEGA_CORE) $(OMEGA_MODELS)

@OCAML_AVAILABLE_TRUE@keystones.cmx: keystones.ml keystones.cmi
@OCAML_AVAILABLE_TRUE@keystones.cmx: $(OMEGA_CORE) $(OMEGA_MODELS)
@OCAML_AVAILABLE_TRUE@keystones.cmi: keystones.mli $(OMEGA_CORE)

@RECOLA_AVAILABLE_TRUE@compare_amplitude_recola.f90: comparisons_recola.list compare_driver_recola.sh
@RECOLA_AVAILABLE_TRUE@	@if $(AM_V_P); then :; else echo "  COMPARE_DRIVER_RECOLA"; fi
@RECOLA_AVAILABLE_TRUE@	$(AM_V_at)$(SHELL) $(srcdir)/compare_driver_recola.sh \
@RECOLA_AVAILABLE_TRUE@	  "$(OMEGA_XXX) -model:constant_width" < $< > $@

@RECOLA_AVAILABLE_TRUE@compare_amplitude_recola.o: \
@RECOLA_AVAILABLE_TRUE@	omega_testtools.f90 compare_lib.o compare_lib_recola.o \
@RECOLA_AVAILABLE_TRUE@	tao_random_numbers.o \
@RECOLA_AVAILABLE_TRUE@	parameters_SM_Higgs_recola.o

@RECOLA_AVAILABLE_TRUE@compare_lib_recola.o:  \
@RECOLA_AVAILABLE_TRUE@	omega_testtools.f90 compare_lib.o tao_random_numbers.o \
@RECOLA_AVAILABLE_TRUE@	parameters_SM_Higgs_recola.o

@RECOLA_AVAILABLE_TRUE@run_compare_recola: compare_amplitude_recola
@RECOLA_AVAILABLE_TRUE@	./compare_amplitude_recola

########################################################################

installcheck-local:
	PATH=$(DESTDIR)$(bindir):$$PATH; export PATH; \
	LD_LIBRARY_PATH=$(DESTDIR)$(libdir):$(DESTDIR)$(pkglibdir):$$LD_LIBRARY_PATH; \
		export LD_LIBRARY_PATH; \
	omega_QED.opt $(OMEGA_QED_OPTS) -scatter "e+ e- -> m+ m-" \
		-target:module amplitude_qed_eemm > amplitude_qed_eemm.f90; \
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -I$(pkgincludedir) \
		-L$(DESTDIR)$(libdir) -L$(DESTDIR)$(pkglibdir) \
		$(srcdir)/parameters_QED.f90 amplitude_qed_eemm.f90 \
		$(srcdir)/test_qed_eemm.f90 -lomega_core; \
	./a.out

########################################################################

### Remove DWARF debug information on MAC OS X
clean-macosx:
	-rm -rf a.out.dSYM
	-rm -rf compare_amplitude_UFO.dSYM
	-rm -rf compare_amplitude_VM.dSYM
	-rm -rf compare_split_function.dSYM
	-rm -rf compare_split_module.dSYM
	-rm -rf ects.dSYM
	-rm -rf test_omega95.dSYM
	-rm -rf test_omega95_bispinors.dSYM
	-rm -rf test_qed_eemm.dSYM
	-rm -rf ward.dSYM
.PHONY: clean-macosx

clean-local: clean-macosx
	rm -f a.out gmon.out *.$(FCMOD) \
		*.o *.cmi *.cmo *.cmx amplitude_*.f90 \
		$(EXTRA_PROGRAMS) ects.f90 ward.f90 ward_UFO.f90 \
		fermi.f90 fermi_UFO.f90 compare_*.f90 \
		parameters_SM_UFO.f90 keystones_omegalib.f90 keystones_UFO.f90 \
		keystones_UFO_bispinors.f90 keystones_omegalib_bispinors.f90 \
		omega_testtools.f90 test_omega95*.f90 benchmark*.f90 \
		parameters_UFO_SMEFT.f90 \
		*.hbc *wrappers.f90 cascade phase_space \
		output.rcl recola.log
	rm -fr  output_cll

@FC_SUBMODULES_TRUE@	-rm -f *.smod

########################################################################
########################################################################

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
