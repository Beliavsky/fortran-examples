<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
           "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<meta name="GENERATOR" content="TtH 3.02">
 <style type="text/css"><!--
 td div.comp { margin-top: -0.6ex; margin-bottom: -1ex;}
 td div.comb { margin-top: -0.6ex; margin-bottom: -.6ex;}
 td div.hrcomp { line-height: 0.9; margin-top: -0.8ex; margin-bottom: -1ex;}
 td div.norm {line-height:normal;}
 span.roman {font-family: serif; font-style: normal; font-weight: normal;} 
 span.overacc2 {position: relative;  left: .8em; top: -1.2ex;}
 span.overacc1 {position: relative;  left: .6em; top: -1.2ex;} --></style>
<title>doc/sub</title>
  

<body>
<a name="top"> </a>
Chapter <a href="#ch2">2</a>,&nbsp;&nbsp;
<a href="#ch3">3</a>,&nbsp;&nbsp;
<a href="#ch4">4</a>,&nbsp;&nbsp;
<a href="#ch5">5</a>,&nbsp;&nbsp;
<a href="#ch6">6</a>,&nbsp;&nbsp;
<a href="#ch7">7</a>,&nbsp;&nbsp;
<a href="#ch8">8</a>,&nbsp;&nbsp;
<a href="#ch9">9</a>,&nbsp;&nbsp;
<a href="#ch10">10</a>,&nbsp;&nbsp;
<a href="#ch11">11</a>,&nbsp;&nbsp;
<a href="#ch12">12</a>,&nbsp;&nbsp;
<a href="#ch13">13</a>,&nbsp;&nbsp;
<a href="#ch14">14</a>,&nbsp;&nbsp;
<p>
Alphabetic listing: <a href="#ca">a</a>,&nbsp;&nbsp;
<a href="#cb">b</a>,&nbsp;&nbsp;
<a href="#cc">c</a>,&nbsp;&nbsp;
<a href="#cd">d</a>,&nbsp;&nbsp;
<a href="#ce">e</a>,&nbsp;&nbsp;
<a href="#cf">f</a>,&nbsp;&nbsp;
<a href="#cg">g</a>,&nbsp;&nbsp;
<a href="#ch">h</a>,&nbsp;&nbsp;
<a href="#ci">i</a>,&nbsp;&nbsp;
<a href="#ck">k</a>,&nbsp;&nbsp;
<a href="#cl">l</a>,&nbsp;&nbsp;
<a href="#cm">m</a>,&nbsp;&nbsp;
<a href="#cn">n</a>,&nbsp;&nbsp;
<a href="#cp">p</a>,&nbsp;&nbsp;
<a href="#cr">r</a>,&nbsp;&nbsp;
<a href="#cs">s</a>,&nbsp;&nbsp;
<a href="#ct">t</a>,&nbsp;&nbsp;
<a href="#cv">v</a>,&nbsp;&nbsp;
<a href="#cy">y</a>,&nbsp;&nbsp;
<a href="#cz">z</a>,&nbsp;&nbsp;
<p>

<br>
<br>

<center><font size=+1><b>Subject wise list of Fortran subprograms</b></font>
</center>

<p>
<br>
<br>







<a name="ch2"> </a>
<p>
<b>Chapter 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Roundoff Error</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>
 <a href="appendixb.htm#cassum">cassum</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/cassum.f">subprogram</a>,
<a href="../f77/xmp8/sum.f">example</a>)
<br>
Cascade sum of a finite series using a function to calculate the terms

<p>
 <a href="appendixb.htm#cassum">cassum_a</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/cassum_a.f">subprogram</a>,
<a href="../f77/xmp8/sum_a.f">example</a>)
<br>
Cascade sum of a finite series using an array to supply the terms

<p>
 <a href="appendixb.htm#round">round</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/round.f">subprogram</a>,
<a href="../f77/xmp8/round.f">example</a>)
<br>
Rounding a floating-point number to a specified number of digits

<a name="ch3"> </a>
<p>
<br /><br /><b>Chapter 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Linear Algebraic Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#gauelm">gauelm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauelm.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Solve a system of linear equations using Gaussian elimination 

<p>
 <a href="appendixb.htm#gauelm">gauelm_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauelm_c.f">subprogram</a>,
<a href="../f77/xmp8/genevp.f">example</a>)
<br>
Solve a system of linear equations using Gaussian elimination (complex version)

<p>
 <a href="appendixb.htm#matinv">matinv</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/matinv.f">subprogram</a>,
<a href="../f77/xmp8/matinv.f">example</a>)
<br>
Calculate inverse of a square matrix using Gaussian elimination

<p>
 <a href="appendixb.htm#crout">crout</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/crout.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Solve a system of linear equations using Crout's algorithm

<p>
 <a href="appendixb.htm#crout">crout_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/crout_c.f">subprogram</a>,
<a href="../f77/xmp8/muler2.f">example</a>)
<br>
Solve a system of linear equations using Crout's algorithm (complex version)

<p>
 <a href="appendixb.htm#crouth">crouth</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/crouth.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Iterative refinement of solution of a system of linear equations

<p>
 <a href="appendixb.htm#cholsk">cholsk</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/cholsk.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Solve a system of linear equations with symmetric positive definite matrix using Cholesky's decomposition

<p>
 <a href="appendixb.htm#gaubnd">gaubnd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaubnd.f">subprogram</a>,
<a href="../f77/xmp8/gaubnd.f">example</a>)
<br>
Solve a system of linear equations with a band matrix using Gaussian elimination with partial pivoting

<p>
 <a href="appendixb.htm#gaubnd">gaubnd_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaubnd_c.f">subprogram</a>,
<a href="../f77/xmp8/cmat.f">example</a>)
<br>
Solve a system of linear equations with a band matrix using Gaussian elimination with partial pivoting (complex version)

<p>
 <a href="appendixb.htm#svd">svd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/svd.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Singular value decomposition of a matrix

<p>
 <a href="appendixb.htm#svdevl">svdevl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/svdevl.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Solve a system of linear equations using singular value decomposition

<a name="ch4"> </a>
<p>
<br /><br /><b>Chapter 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Interpolation</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#divdif">divdif</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/divdif.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Calculate interpolation and its derivatives using divided difference formula

<p>
 <a href="appendixb.htm#divdif0">divdif0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/divdif0.f">subprogram</a>,
<a href="../f77/xmp8/poly2.f">example</a>)
<br>
Divided difference interpolation formula (no derivatives version)

<p>
 <a href="appendixb.htm#nearst">nearst</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/nearst.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Find nearest point in an ordered table using bisection

<p>
 <a href="appendixb.htm#spline">spline</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/spline.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Calculate coefficients of interpolating cubic spline

<p>
 <a href="appendixb.htm#splevl">splevl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/splevl.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Evaluate the cubic spline and its derivatives at a specified point

<p>
 <a href="appendixb.htm#smooth">smooth</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/smooth.f">subprogram</a>,
<a href="../f77/xmp8/smooth.f">example</a>)
<br>
Draw a smooth curve through a set of points using cubic spline

<p>
 <a href="appendixb.htm#bsplin">bsplin</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bsplin.f">subprogram</a>,
<a href="../f77/xmp8/bsplin.f">example</a>)
<br>
Calculate B-spline basis functions on a set of knots

<p>
 <a href="appendixb.htm#bspint">bspint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspint.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Calculate coefficients of B-spline interpolation

<p>
 <a href="appendixb.htm#bspevl">bspevl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspevl.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Evaluate function value and its derivatives using B-spline expansion

<p>
 <a href="appendixb.htm#ratnal">ratnal</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ratnal.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Calculate rational function interpolation

<p>
 <a href="appendixb.htm#poly2">poly2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/poly2.f">subprogram</a>,
<a href="../f77/xmp8/poly2.f">example</a>)
<br>
Calculate polynomial interpolation in two dimensions

<p>
 <a href="appendixb.htm#linrn">linrn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linrn.f">subprogram</a>,
<a href="../f77/xmp8/linrn.f">example</a>)
<br>
Calculate linear interpolation in n dimensions

<p>
 <a href="appendixb.htm#locate">locate</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/locate.f">subprogram</a>,
<a href="../f77/xmp8/linrn.f">example</a>)
<br>
Find the bracketing subinterval in an ordered table

<p>
 <a href="appendixb.htm#bspint2">bspint2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspint2.f">subprogram</a>,
<a href="../f77/xmp8/poly2.f">example</a>)
<br>
Calculate coefficients of B-spline interpolation in two dimensions

<p>
 <a href="appendixb.htm#bspev2">bspev2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspev2.f">subprogram</a>,
<a href="../f77/xmp8/poly2.f">example</a>)
<br>
Evaluate function value and derivatives using B-spline expansion in two dimensions

<p>
 <a href="appendixb.htm#bspintn">bspintn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspintn.f">subprogram</a>,
<a href="../f77/xmp8/bspintn.f">example</a>)
<br>
Calculate coefficients of B-spline interpolation in n dimensions

<p>
 <a href="appendixb.htm#bspevn">bspevn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspevn.f">subprogram</a>,
<a href="../f77/xmp8/bspintn.f">example</a>)
<br>
Evaluate function value using B-spline expansion in n dimensions

<p>
 <a href="appendixb.htm#bspevn1">bspevn1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspevn1.f">subprogram</a>,
<a href="../f77/xmp8/bspintn.f">example</a>)
<br>
Evaluate function value and first derivative using B-spline expansion in n dimensions

<p>
 <a href="appendixb.htm#bspevn2">bspevn2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspevn2.f">subprogram</a>,
<a href="../f77/xmp8/bspintn.f">example</a>)
<br>
Evaluate function value and first and second derivatives using B-spline expansion in n dimensions

<a name="ch5"> </a>
<p>
<br /><br /><b>Chapter 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Differentiation</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#drvt">drvt</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/drvt.f">subprogram</a>,
<a href="../f77/xmp8/drvt.f">example</a>)
<br>
Differentiation using h &#8594; 0 extrapolation

<a name="ch6"> </a>
<p>
<br /><br /><b>Chapter 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Integration</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#simson">simson</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/simson.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Integration using Simpson's 1/3 rule

<p>
 <a href="appendixb.htm#splint">splint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/splint.f">subprogram</a>,
<a href="../f77/xmp8/splint.f">example</a>)
<br>
Integrate a tabulated function using cubic spline

<p>
 <a href="appendixb.htm#bspqd">bspqd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspqd.f">subprogram</a>,
<a href="../f77/xmp8/splint.f">example</a>)
<br>
Integrate a B-spline expansion

<p>
 <a href="appendixb.htm#rombrg">rombrg</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rombrg.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Romberg integration

<p>
 <a href="appendixb.htm#epsiln">epsiln</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/epsiln.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Integration using &#949;-algorithm

<p>
 <a href="appendixb.htm#gauss">gauss</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauss.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Integration using Gauss-Legendre formula

<p>
 <a href="appendixb.htm#gaucby">gaucby</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaucby.f">subprogram</a>,
<a href="../f77/xmp8/gaucby.f">example</a>)
<br>
Integration using Gauss-Chebyshev formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=1/[(x<font face="symbol">-</font
>A)(B<font face="symbol">-</font
>x)]<sup>1/2</sup>
</dd></dl> <a href="appendixb.htm#gaucb1">gaucb1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaucb1.f">subprogram</a>,
<a href="../f77/xmp8/gaucb1.f">example</a>)
<br>
Integration using Gauss-Chebyshev formula  with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=[(x<font face="symbol">-</font
>A)/(B<font face="symbol">-</font
>x)]<sup>1/2</sup>
</dd></dl> <a href="appendixb.htm#gaucb2">gaucb2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaucb2.f">subprogram</a>,
<a href="../f77/xmp8/gaucb2.f">example</a>)
<br>
Integration using Gauss-Chebyshev formula  with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=[(x<font face="symbol">-</font
>A)(B<font face="symbol">-</font
>x)]<sup>1/2</sup>
</dd></dl> <a href="appendixb.htm#gausq2">gausq2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gausq2.f">subprogram</a>,
<a href="../f77/xmp8/gausq.f">example</a>)
<br>
Integration over (0,A] with square root singularity using a combination of Gaussian formulae

<p>
 <a href="appendixb.htm#gausq">gausq</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gausq.f">subprogram</a>,
<a href="../f77/xmp8/gausq.f">example</a>)
<br>
Integration over (0,A] using Gaussian formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)= x<sup>-1/2</sup>
</dd></dl> <a href="appendixb.htm#gaulag">gaulag</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaulag.f">subprogram</a>,
<a href="../f77/xmp8/gaulag.f">example</a>)
<br>
Integration over [A,&#8734;) using a combination of Gaussian formulae

<p>
 <a href="appendixb.htm#lagure">lagure</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lagure.f">subprogram</a>,
<a href="../f77/xmp8/gaulag.f">example</a>)
<br>
Integration over [A,&#8734;) using Gauss-Laguerre formula

<p>
 <a href="appendixb.htm#hermit">hermit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/hermit.f">subprogram</a>,
<a href="../f77/xmp8/hermit.f">example</a>)
<br>
Integration over (<font face="symbol">-</font>&#8734, &#8734)
using Gauss-Hermite formula

<p>
 <a href="appendixb.htm#gaulg2">gaulg2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaulg2.f">subprogram</a>,
<a href="../f77/xmp8/gaulog.f">example</a>)
<br>
Integration over (0,A] with logarithmic singularity using a combination of Gaussian formulae

<p>

 <a href="appendixb.htm#gaulog">gaulog</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaulog.f">subprogram</a>,
<a href="../f77/xmp8/gaulog.f">example</a>)
<br>
Integration over (0,A] using Gaussian formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=ln(A/x)
</dd></dl> <a href="appendixb.htm#gausrc">gausrc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gausrc.f">subprogram</a>,
<a href="../f77/xmp8/gausrc.f">example</a>)
<br>
Calculate weights and abscissas of Gaussian formula using recurrence relation of orthogonal polynomials

<p>
 <a href="appendixb.htm#gauleg">gauleg</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauleg.f">subprogram</a>,
<a href="../f77/xmp8/gauleg.f">example</a>)
<br>
Calculate weights and abscissas of Gauss-Legendre quadrature formulae

<p>
 <a href="appendixb.htm#gaujac">gaujac</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaujac.f">subprogram</a>,
<a href="../f77/xmp8/gaujac.f">example</a>)
<br>
Calculate weights and abscissas of Gauss-Jacobi quadrature formulae

<p>
 <a href="appendixb.htm#lagurw">lagurw</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lagurw.f">subprogram</a>,
<a href="../f77/xmp8/lagurw.f">example</a>)
<br>
Calculate weights and abscissas of Gauss-Laguerre quadrature formulae

<p>
 <a href="appendixb.htm#gauher">gauher</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauher.f">subprogram</a>,
<a href="../f77/xmp8/gauher.f">example</a>)
<br>
Calculate weights and abscissas of Gauss-Hermite quadrature formulae

<p>
 <a href="appendixb.htm#gauswt">gauswt</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauswt.f">subprogram</a>,
<a href="../f77/xmp8/gauswt.f">example</a>)
<br>
Calculate weights and abscissas of Gaussian formula using moments of weight function

<p>
 <a href="appendixb.htm#filon">filon</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/filon.f">subprogram</a>,
<a href="../f77/xmp8/filon.f">example</a>)
<br>
Integration of an oscillatory function using Filon's formula

<p>
 <a href="appendixb.htm#adpint">adpint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/adpint.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Adaptive integration over a finite interval

<p>
 <a href="appendixb.htm#kronrd">kronrd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/kronrd.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Integration using Gauss-Kronrod formula for use with ADPINT

<p>
 <a href="appendixb.htm#gaus16">gaus16</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaus16.f">subprogram</a>,
<a href="../f77/xmp8/adpint.f">example</a>)
<br>
Integration using 16 point Gauss-Legendre formula for use with ADPINT

<p>
 <a href="appendixb.htm#cauchy">cauchy</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/cauchy.f">subprogram</a>,
<a href="../f77/xmp8/cauchy.f">example</a>)
<br>
Calculate Cauchy principal value of an integral

<p>
 <a href="appendixb.htm#euler">euler</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/euler.f">subprogram</a>,
<a href="../f77/xmp8/euler.f">example</a>)
<br>
Summation of alternating series using Euler transformation

<p>
 <a href="appendixb.htm#bspqd2">bspqd2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspqd2.f">subprogram</a>,
<a href="../f77/xmp8/bspqd2.f">example</a>)
<br>
Integrate a B-spline expansion in two dimensions

<p>
 <a href="appendixb.htm#bspqdn">bspqdn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspqdn.f">subprogram</a>,
<a href="../f77/xmp8/bspqdn.f">example</a>)
<br>
Integrate a B-spline expansion in n dimensions

<p>
 <a href="appendixb.htm#mulint">mulint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/mulint.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using product Gauss rule with varying number of points 

<p>
 <a href="appendixb.htm#ngauss">ngauss</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ngauss.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using a specified product Gauss rule

<p>
 <a href="appendixb.htm#sphnd">sphnd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/sphnd.f">subprogram</a>,
<a href="../f77/xmp8/multisp.f">example</a>)
<br>
To convert from hyper-spherical coordinates to Cartesian coordinates

<p>
 <a href="appendixb.htm#strint">strint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/strint.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using monomial rules with varying number of points 

<p>
 <a href="appendixb.htm#stroud">stroud</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/stroud.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using a specified monomial rule

<p>
 <a href="appendixb.htm#mcarlo">mcarlo</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/mcarlo.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using Monte Carlo method

<p>
 <a href="appendixb.htm#ran1">ran1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ran1.f">subprogram</a>,
<a href="../f77/xmp8/gaubnd.f">example</a>)
<br>
Generate a sequence of random numbers with uniform distribution

<p>
 <a href="appendixb.htm#ranf">ranf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ranf.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Generate a sequence of random numbers with uniform distribution

<p>
 <a href="appendixb.htm#equids">equids</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/equids.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using equidistributed sequences

<a name="ch7"> </a>
<p>
<br /><br /><b>Chapter 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nonlinear Algebraic Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#bisect">bisect</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bisect.f">subprogram</a>,
<a href="../f77/xmp8/realrt.f">example</a>)
<br>
Solve a nonlinear equation using bisection

<p>
 <a href="appendixb.htm#secant">secant</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secant.f">subprogram</a>,
<a href="../f77/xmp8/realrt.f">example</a>)
<br>
Solve a nonlinear equation using secant iteration

<p>
 <a href="appendixb.htm#secant">secan_2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secan_2.f">subprogram</a>,
<a href="../f77/xmp8/secan_2.f">example</a>)
<br>
Solve a nonlinear equation using secant iteration with function in scaled form (f(x)=F(x) 2<sup>i(x)</sup>)

<p>
 <a href="appendixb.htm#secanc">secanc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secanc.f">subprogram</a>,
<a href="../f77/xmp8/secanc.f">example</a>)
<br>
Complex roots of a nonlinear equation using secant iteration

<p>
 <a href="appendixb.htm#secanc">secanc_2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secanc_2.f">subprogram</a>,
<a href="../f77/xmp8/muler2.f">example</a>)
<br>
Complex roots of a nonlinear equation using secant iteration with function in scaled form (f(x)=F(x) 2<sup>i(x)</sup>)

<p>
 <a href="appendixb.htm#secani">secani</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secani.f">subprogram</a>,
<a href="../f77/xmp8/secan_2.f">example</a>)
<br>
Solve a nonlinear equation using secant iteration (with reverse communication)

<p>
 <a href="appendixb.htm#newrap">newrap</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/newrap.f">subprogram</a>,
<a href="../f77/xmp8/newrap.f">example</a>)
<br>
Solve a nonlinear equation using Newton-Raphson method

<p>
 <a href="appendixb.htm#brent">brent</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/brent.f">subprogram</a>,
<a href="../f77/xmp8/root.f">example</a>)
<br>
Solve a nonlinear equation using Brent's method

<p>
 <a href="appendixb.htm#search">search</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/search.f">subprogram</a>,
<a href="../f77/xmp8/search.f">example</a>)
<br>
Locate complex zeros by looking for sign changes

<p>
 <a href="appendixb.htm#zroot">zroot</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/zroot.f">subprogram</a>,
<a href="../f77/xmp8/muller.f">example</a>)
<br>
Complex roots of a nonlinear equation with deflation

<p>
 <a href="appendixb.htm#zroot2">zroot2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/zroot2.f">subprogram</a>,
<a href="../f77/xmp8/muler2.f">example</a>)
<br>
Complex roots of a nonlinear equation with deflation, function value in scaled form, f(x)&times;2<sup>i(x)</sup>

<p>
 <a href="appendixb.htm#muller">muller</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/muller.f">subprogram</a>,
<a href="../f77/xmp8/muller.f">example</a>)
<br>
Complex root using Muller's method

<p>
 <a href="appendixb.htm#muler2">muler2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/muler2.f">subprogram</a>,
<a href="../f77/xmp8/muler2.f">example</a>)
<br>
Complex root using Muller's method with function value in a scaled form, f(x)&times;2<sup>i(x)</sup>

<p>
 <a href="appendixb.htm#delves">delves</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/delves.f">subprogram</a>,
<a href="../f77/xmp8/delves.f">example</a>)
<br>
Complex zeros of an analytic function using quadrature based method

<p>
 <a href="appendixb.htm#contur">contur</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/contur.f">subprogram</a>,
<a href="../f77/xmp8/delves.f">example</a>)
<br>
Contour integration over a circular contour for DELVES

<p>
 <a href="appendixb.htm#newrac">newrac</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/newrac.f">subprogram</a>,
<a href="../f77/xmp8/delves.f">example</a>)
<br>
Complex root of a nonlinear equation using Newton-Raphson method

<p>
 <a href="appendixb.htm#polyr">polyr</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polyr.f">subprogram</a>,
<a href="../f77/xmp8/polyr.f">example</a>)
<br>
All roots of a polynomial with real coefficients

<p>
 <a href="appendixb.htm#lagitr">lagitr</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lagitr.f">subprogram</a>,
<a href="../f77/xmp8/polyr.f">example</a>)
<br>
One root of a polynomial with real coefficients using Laguerre's method

<p>
 <a href="appendixb.htm#polyc">polyc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polyc.f">subprogram</a>,
<a href="../f77/xmp8/polyc.f">example</a>)
<br>
All roots of a polynomial with complex coefficients

<p>
 <a href="appendixb.htm#lagitc">lagitc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lagitc.f">subprogram</a>,
<a href="../f77/xmp8/polyc.f">example</a>)
<br>
One root of a polynomial with complex coefficients using Laguerre's method

<p>
 <a href="appendixb.htm#davidn">davidn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/davidn.f">subprogram</a>,
<a href="../f77/xmp8/newton.f">example</a>)
<br>
Solve a system of nonlinear equations using Davidenko's method coupled with Newton's method

<p>
 <a href="appendixb.htm#davidn">davidn_b</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/davidn_b.f">subprogram</a>,
<a href="../f77/xmp8/broydn.f">example</a>)
<br>
Solve a system of nonlinear equations using Davidenko's method coupled with Broyden's method

<p>
 <a href="appendixb.htm#newton">newton</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/newton.f">subprogram</a>,
<a href="../f77/xmp8/newton.f">example</a>)
<br>
Solve a system of nonlinear equations using Newton's method

<p>
 <a href="appendixb.htm#broydn">broydn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/broydn.f">subprogram</a>,
<a href="../f77/xmp8/broydn.f">example</a>)
<br>
Solve a system of nonlinear equations using Broyden's method

<a name="ch8"> </a>
<p>
<br /><br /><b>Chapter 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Optimisation</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#brackm">brackm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/brackm.f">subprogram</a>,
<a href="../f77/xmp8/golden.f">example</a>)
<br>
Bracketing a minimum in one dimension

<p>
 <a href="appendixb.htm#golden">golden</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/golden.f">subprogram</a>,
<a href="../f77/xmp8/golden.f">example</a>)
<br>
Minimisation in one dimension using golden section search

<p>
 <a href="appendixb.htm#brentm">brentm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/brentm.f">subprogram</a>,
<a href="../f77/xmp8/brentm.f">example</a>)
<br>
Minimisation in one dimension using Brent's method

<p>
 <a href="appendixb.htm#davidm">davidm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/davidm.f">subprogram</a>,
<a href="../f77/xmp8/davidm.f">example</a>)
<br>
Minimisation in one dimension using cubic Hermite interpolation

<p>
 <a href="appendixb.htm#bfgs">bfgs</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bfgs.f">subprogram</a>,
<a href="../f77/xmp8/bfgs.f">example</a>)
<br>
Minimisation in n dimensions using quasi-Newton method with BFGS formula

<p>
 <a href="appendixb.htm#linmin">linmin</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linmin.f">subprogram</a>,
<a href="../f77/xmp8/bfgs.f">example</a>)
<br>
Line search for quasi-Newton method

<p>
 <a href="appendixb.htm#flnm">flnm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/flnm.f">subprogram</a>,
<a href="../f77/xmp8/bfgs.f">example</a>)
<br>
Calculate the function value for line search for quasi-Newton method

<p>
 <a href="appendixb.htm#nminf">nminf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/nminf.f">subprogram</a>,
<a href="../f77/xmp8/nminf.f">example</a>)
<br>
Minimisation in n dimensions using direction set method

<p>
 <a href="appendixb.htm#linmnf">linmnf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linmnf.f">subprogram</a>,
<a href="../f77/xmp8/nminf.f">example</a>)
<br>
Line search for direction set method

<p>
 <a href="appendixb.htm#fln">fln</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fln.f">subprogram</a>,
<a href="../f77/xmp8/nminf.f">example</a>)
<br>
Calculate the function value for line search for direction set method

<p>
 <a href="appendixb.htm#simplx">simplx</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/simplx.f">subprogram</a>,
<a href="../f77/xmp8/simplx.f">example</a>)
<br>
Solving a linear programming problem using simplex method

<p>
 <a href="appendixb.htm#simpx">simpx</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/simpx.f">subprogram</a>,
<a href="../f77/xmp8/simplx.f">example</a>)
<br>
Simplex method for a linear programming problem in the standard form

<a name="ch9"> </a>
<p>
<br /><br /><b>Chapter 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Statistical Inferences</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>
 <a href="appendixb.htm#shsort">shsort</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/shsort.f">subprogram</a>,
<a href="../f77/xmp8/median.f">example</a>)
<br>
Sorting an array in ascending order using shell sort algorithm

<p>
 <a href="appendixb.htm#gammap">gammap</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gammap.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Gamma function

<p>
 <a href="appendixb.htm#betap">betap</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betap.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function

<p>
 <a href="appendixb.htm#betser">betser</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betser.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function using a power series approximation

<p>
 <a href="appendixb.htm#betcon1">betcon1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betcon1.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function using a continued fraction approximation

<p>
 <a href="appendixb.htm#betcon">betcon</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betcon.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function using an alternative continued fraction approximation

<p>
 <a href="appendixb.htm#betai">betai</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betai.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function by directly evaluating the integral

<p>
 <a href="appendixb.htm#fbeta">fbeta</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fbeta.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate the integrand for BETAI

<p>
 <a href="appendixb.htm#rangau">rangau</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rangau.f">subprogram</a>,
<a href="../f77/xmp8/polfit.f">example</a>)
<br>
Generate a sequence of random numbers with Gaussian distribution

<p>
 <a href="appendixb.htm#iranbin">iranbin</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/iranbin.f">subprogram</a>,
<a href="../f77/xmp8/binom.f">example</a>)
<br>
Generate a sequence of random numbers with binomial distribution

<p>
 <a href="appendixb.htm#iranpoi">iranpoi</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/iranpoi.f">subprogram</a>,
<a href="../f77/xmp8/poisson.f">example</a>)
<br>
Generate a sequence of random numbers with Poisson distribution

<p>
 <a href="appendixb.htm#pcor">pcor</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/pcor.f">subprogram</a>,
<a href="../f77/xmp8/pcor.f">example</a>)
<br>
Calculate the probability that two uncorrelated sequences will give a correlation coefficient exceeding a given value

<a name="ch10"> </a>
<p>
<br /><br /><b>Chapter 10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Functional Approximations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#polfit">polfit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polfit.f">subprogram</a>,
<a href="../f77/xmp8/polfit.f">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials

<p>
 <a href="appendixb.htm#polevl">polevl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polevl.f">subprogram</a>,
<a href="../f77/xmp8/polfit.f">example</a>)
<br>
Evaluate the fitted polynomial and its derivatives at a specified point

<p>
 <a href="appendixb.htm#polfit1">polfit1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polfit1.f">subprogram</a>,
<a href="../f77/xmp8/polfit2.f">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials, simplified version for multiple data sets

<p>
 <a href="appendixb.htm#polort">polort</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polort.f">subprogram</a>,
<a href="../f77/xmp8/polfit2.f">example</a>)
<br>
Evaluate the orthogonal polynomial basis functions at a given point

<p>
 <a href="appendixb.htm#polfit2">polfit2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polfit2.f">subprogram</a>,
<a href="../f77/xmp8/polfit2.f">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials in two dimensions

<p>
 <a href="appendixb.htm#polev2">polev2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polev2.f">subprogram</a>,
<a href="../f77/xmp8/polfit2.f">example</a>)
<br>
Evaluate the fitted polynomial and its derivatives at a specified point in two dimensions

<p>
 <a href="appendixb.htm#polfitn">polfitn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polfitn.f">subprogram</a>,
<a href="../f77/xmp8/polfitn.f">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials in n dimensions

<p>
 <a href="appendixb.htm#polevn">polevn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polevn.f">subprogram</a>,
<a href="../f77/xmp8/polfitn.f">example</a>)
<br>
Evaluate the fitted polynomial at a specified point in n dimensions

<p>
 <a href="appendixb.htm#polevn1">polevn1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polevn1.f">subprogram</a>,
<a href="../f77/xmp8/polfitn.f">example</a>)
<br>
Evaluate the fitted polynomial and first derivative at a specified point in n dimensions

<p>
 <a href="appendixb.htm#polevn2">polevn2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polevn2.f">subprogram</a>,
<a href="../f77/xmp8/polfitn.f">example</a>)
<br>
Evaluate the fitted polynomial and first and second derivatives at a specified point in n dimensions

<p>
 <a href="appendixb.htm#llsq">llsq</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/llsq.f">subprogram</a>,
<a href="../f77/xmp8/llsq.f">example</a>)
<br>
Linear least squares fit in n dimensions to a user defined set of basis functions

<p>
 <a href="appendixb.htm#bspfit">bspfit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfit.f">subprogram</a>,
<a href="../f77/xmp8/bspfit.f">example</a>)
<br>
Least squares fit to B-spline basis functions in one dimension

<p>
 <a href="appendixb.htm#bspfit2">bspfit2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfit2.f">subprogram</a>,
<a href="../f77/xmp8/bspfit2.f">example</a>)
<br>
Least squares fit to B-spline basis in two dimensions with equal weights

<p>
 <a href="appendixb.htm#bspfitw2">bspfitw2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfitw2.f">subprogram</a>,
<a href="../f77/xmp8/bspfit2.f">example</a>)
<br>
Least squares fit to B-spline basis in two dimensions with arbitrary weights

<p>
 <a href="appendixb.htm#bspfitn">bspfitn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfitn.f">subprogram</a>,
<a href="../f77/xmp8/bspfitn.f">example</a>)
<br>
Least squares fit to B-spline basis in n dimensions with equal weights

<p>
 <a href="appendixb.htm#bspfitwn">bspfitwn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfitwn.f">subprogram</a>,
<a href="../f77/xmp8/bspfitn.f">example</a>)
<br>
Least squares fit to B-spline basis in n dimensions with arbitrary weights

<p>
 <a href="appendixb.htm#linfitxy">linfitxy</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linfitxy.f">subprogram</a>,
<a href="../f77/xmp8/linfitxy.f">example</a>)
<br>
Least squares straight line fit when there are errors in both x and y values

<p>
 <a href="appendixb.htm#nllsq">nllsq</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/nllsq.f">subprogram</a>,
<a href="../f77/xmp8/nllsq.f">example</a>)
<br>
Calculate the Chi square function for a nonlinear least squares fit using quasi Newton method (BFGS)

<p>
 <a href="appendixb.htm#nllsq">nllsq_f</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/nllsq_f.f">subprogram</a>,
<a href="../f77/xmp8/nllsq.f">example</a>)
<br>
Calculate the Chi square function for a nonlinear least squares fit using direction set method (NMINF)

<p>
 <a href="appendixb.htm#dft">dft</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/dft.f">subprogram</a>,
<a href="../f77/xmp8/fft.f">example</a>)
<br>
Discrete Fourier transform of complex data with arbitrary number of points

<p>
 <a href="appendixb.htm#fft">fft</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fft.f">subprogram</a>,
<a href="../f77/xmp8/fft.f">example</a>)
<br>
Fast Fourier transform of complex data

<p>
 <a href="appendixb.htm#fftr">fftr</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fftr.f">subprogram</a>,
<a href="../f77/xmp8/fftr.f">example</a>)
<br>
Fast Fourier transform of real data

<p>
 <a href="appendixb.htm#fftn">fftn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fftn.f">subprogram</a>,
<a href="../f77/xmp8/fftn.f">example</a>)
<br>
Fast Fourier transform of complex data in n dimensions

<p>
 <a href="appendixb.htm#lapinv">lapinv</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lapinv.f">subprogram</a>,
<a href="../f77/xmp8/lapinv.f">example</a>)
<br>
Inverse Laplace transform

<p>
 <a href="appendixb.htm#pold">pold</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/pold.f">subprogram</a>,
<a href="../f77/xmp8/pold.f">example</a>)
<br>
Evaluate a polynomial and its derivative at any point

<p>
 <a href="appendixb.htm#rmk">rmk</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rmk.f">subprogram</a>,
<a href="../f77/xmp8/rmk.f">example</a>)
<br>
Evaluate a rational function at any point

<p>
 <a href="appendixb.htm#rmk1">rmk1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rmk1.f">subprogram</a>,
<a href="../f77/xmp8/rmk1.f">example</a>)
<br>
Evaluate a rational function at any point (constant term in denominator 1)

<p>
 <a href="appendixb.htm#rmkd">rmkd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rmkd.f">subprogram</a>,
<a href="../f77/xmp8/rmk.f">example</a>)
<br>
Evaluate a rational function and its derivative at any point

<p>
 <a href="appendixb.htm#rmkd1">rmkd1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rmkd1.f">subprogram</a>,
<a href="../f77/xmp8/rmk1.f">example</a>)
<br>
Evaluate a rational function and its derivative at any point (constant term in denominator 1)

<p>
 <a href="appendixb.htm#pade">pade</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/pade.f">subprogram</a>,
<a href="../f77/xmp8/pade.f">example</a>)
<br>
Calculate coefficients of Pad&#233; approximations

<p>
 <a href="appendixb.htm#chebcf">chebcf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/chebcf.f">subprogram</a>,
<a href="../f77/xmp8/chebcf.f">example</a>)
<br>
Convert from power series to Chebyshev expansion and vice versa

<p>
 <a href="appendixb.htm#chebex">chebex</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/chebex.f">subprogram</a>,
<a href="../f77/xmp8/chebex.f">example</a>)
<br>
Calculate the coefficients of Chebyshev expansion

<p>
 <a href="appendixb.htm#chebap">chebap</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/chebap.f">subprogram</a>,
<a href="../f77/xmp8/chebap.f">example</a>)
<br>
Rational function approximation using Chebyshev polynomials

<p>
 <a href="appendixb.htm#remes">remes</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/remes.f">subprogram</a>,
<a href="../f77/xmp8/remes.f">example</a>)
<br>
Minimax approximation to mathematical functions using Remes algorithm

<p>
 <a href="appendixb.htm#fm">fm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fm.f">subprogram</a>,
<a href="../f77/xmp8/remes.f">example</a>)
<br>
Calculate error in rational function approximation for use with REMES

<p>
 <a href="appendixb.htm#gamma">gamma</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gamma.f">subprogram</a>,
<a href="../f77/xmp8/gamma.f">example</a>)
<br>
Calculate Gamma function at real x, &#915;(x)

<p>
 <a href="appendixb.htm#gammal">gammal</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gammal.f">subprogram</a>,
<a href="../f77/xmp8/gamma.f">example</a>)
<br>
Calculate natural logarithm of Gamma function at real x, ln<font face="symbol">|</font
>&#915;(x)<font face="symbol">|</font
>

<p>
 <a href="appendixb.htm#erf">erf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/erf.f">subprogram</a>,
<a href="../f77/xmp8/erf.f">example</a>)
<br>
Calculate Error function at real x

<p>
 <a href="appendixb.htm#erfc">erfc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/erfc.f">subprogram</a>,
<a href="../f77/xmp8/erf.f">example</a>)
<br>
Calculate complementary Error function at real x

<p>
 <a href="appendixb.htm#bj0">bj0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bj0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first kind of order zero, J<sub>0</sub>(x)

<p>
 <a href="appendixb.htm#bj1">bj1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bj1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first kind of order one, J<sub>1</sub>(x)

<p>
 <a href="appendixb.htm#bjn">bjn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bjn.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first kind of integral order, J<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#by0">by0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/by0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of second kind of order zero, Y<sub>0</sub>(x)

<p>
 <a href="appendixb.htm#bjy0">bjy0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bjy0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first and second kind of order zero

<p>
 <a href="appendixb.htm#by1">by1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/by1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of second kind of order one, Y<sub>1</sub>(x)

<p>
 <a href="appendixb.htm#bjy1">bjy1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bjy1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first and second kind of order one

<p>
 <a href="appendixb.htm#byn">byn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/byn.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of second kind of integral order, Y<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#sphbjn">sphbjn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/sphbjn.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate spherical Bessel function of integral order, j<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#bi0">bi0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bi0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of first kind of order zero, I<sub>0</sub>(x)

<p>
 <a href="appendixb.htm#bi1">bi1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bi1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of first kind of order one, I<sub>1</sub>(x)

<p>
 <a href="appendixb.htm#bin">bin</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bin.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of first kind of integral order, I<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#bk0">bk0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bk0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of second kind of order zero, K<sub>0</sub>(x)

<p>
 <a href="appendixb.htm#bk1">bk1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bk1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of second kind of order one, K<sub>1</sub>(x)

<p>
 <a href="appendixb.htm#bkn">bkn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bkn.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of second kind of integral order, K<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#dawson">dawson</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/dawson.f">subprogram</a>,
<a href="../f77/xmp8/dawson.f">example</a>)
<br>
Calculate the value of Dawson's integral

<p>
 <a href="appendixb.htm#fermm05">fermm05</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fermm05.f">subprogram</a>,
<a href="../f77/xmp8/fermi.f">example</a>)
<br>
Calculate the Fermi integrals for k=<font face="symbol">-</font
>1/2

<p>
 <a href="appendixb.htm#ferm05">ferm05</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ferm05.f">subprogram</a>,
<a href="../f77/xmp8/fermi.f">example</a>)
<br>
Calculate the Fermi integrals for k=1/2

<p>
 <a href="appendixb.htm#ferm15">ferm15</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ferm15.f">subprogram</a>,
<a href="../f77/xmp8/fermi.f">example</a>)
<br>
Calculate the Fermi integrals for k=3/2

<p>
 <a href="appendixb.htm#ferm25">ferm25</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ferm25.f">subprogram</a>,
<a href="../f77/xmp8/fermi.f">example</a>)
<br>
Calculate the Fermi integrals for k=5/2

<p>
 <a href="appendixb.htm#pleg">pleg</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/pleg.f">subprogram</a>,
<a href="../f77/xmp8/plm.f">example</a>)
<br>
Calculate the Legendre polynomial, P<sub><i>l</i></sub>(x)

<p>
 <a href="appendixb.htm#plm">plm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/plm.f">subprogram</a>,
<a href="../f77/xmp8/plm.f">example</a>)
<br>
Calculate the associated Legendre function, P<sub><i>l</i></sub><sup>m</sup>(x)

<p>
 <a href="appendixb.htm#ylm">ylm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ylm.f">subprogram</a>,
<a href="../f77/xmp8/ylm.f">example</a>)
<br>
Calculate the spherical harmonic, Y<sub><i>l</i></sub><sup>m</sup>(&#952;
, &#966;)

<p>
 <a href="appendixb.htm#ylm">ylm_x</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ylm_x.f">subprogram</a>,
<a href="../f77/xmp8/ylm.f">example</a>)
<br>
Calculate the spherical harmonic, Y<sub><i>l</i></sub><sup>m</sup>(cos&#952;
, &#966;)

<p>
 <a href="appendixb.htm#minmax">minmax</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/minmax.f">subprogram</a>,
<a href="../f77/xmp8/minmax.f">example</a>)
<br>
Rational function minimax approximation to discrete data

<p>
 <a href="appendixb.htm#polyl1">polyl1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polyl1.f">subprogram</a>,
<a href="../f77/xmp8/polyl1.f">example</a>)
<br>
Polynomial L<sub>1</sub>-approximation to discrete data

<p>
 <a href="appendixb.htm#linl1">linl1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linl1.f">subprogram</a>,
<a href="../f77/xmp8/polyl1.f">example</a>)
<br>
Linear L<sub>1</sub>-approximation to discrete data for arbitrary basis functions

<p>
 <a href="appendixb.htm#simpl1">simpl1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/simpl1.f">subprogram</a>,
<a href="../f77/xmp8/polyl1.f">example</a>)
<br>
Modified simplex method for LP problems in L<sub>1</sub>-approximation

<a name="ch11"> </a>
<p>
<br /><br /><b>Chapter 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Algebraic Eigenvalue Problem</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#invit">invit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit.f">subprogram</a>,
<a href="../f77/xmp8/invit.f">example</a>)
<br>
Real eigenvalue and eigenvector of a real matrix using inverse iteration

<p>
 <a href="appendixb.htm#invit">invit_l</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit_l.f">subprogram</a>,
<a href="../f77/xmp8/invit.f">example</a>)
<br>
Real eigenvalue and left-eigenvector of a real matrix using inverse iteration

<p>
 <a href="appendixb.htm#invit">invit_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit_c.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Complex eigenvalue and eigenvector of a real matrix using inverse iteration

<p>
 <a href="appendixb.htm#invit">invit_cl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit_cl.f">subprogram</a>,
<a href="../f77/xmp8/unsyml.f">example</a>)
<br>
Complex eigenvalue and left-eigenvector of a real matrix using inverse iteration

<p>
 <a href="appendixb.htm#invit">invit_cc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit_cc.f">subprogram</a>,
<a href="../f77/xmp8/genevp.f">example</a>)
<br>
Complex eigenvalue and eigenvector of a complex matrix using inverse iteration

<p>
 <a href="appendixb.htm#tred2">tred2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/tred2.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Reduction of a real symmetric matrix to symmetric tridiagonal form using Householder transformations

<p>
 <a href="appendixb.htm#trbak">trbak</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/trbak.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Back-transform eigenvectors of tridiagonal matrix to original matrix

<p>
 <a href="appendixb.htm#tql2">tql2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/tql2.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Eigenvalue problem for a symmetric tridiagonal matrix using QL-algorithm

<p>
 <a href="appendixb.htm#tridia">tridia</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/tridia.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Specified eigenvalues and eigenvectors of a symmetric tridiagonal matrix using Sturm sequence and inverse iteration

<p>
 <a href="appendixb.htm#sturm">sturm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/sturm.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Locate eigenvalues of a symmetric tridiagonal matrix using Sturm sequence 

<p>
 <a href="appendixb.htm#tinvit">tinvit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/tinvit.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Eigenvalue and eigenvector of a symmetric tridiagonal matrix using inverse iteration 

<p>
 <a href="appendixb.htm#herevp">herevp</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/herevp.f">subprogram</a>,
<a href="../f77/xmp8/herevp.f">example</a>)
<br>
Eigenvalue problem for a complex Hermitian matrix

<p>
 <a href="appendixb.htm#balanc">balanc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/balanc.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Balancing a general real matrix

<p>
 <a href="appendixb.htm#balbak">balbak</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/balbak.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Back-transform eigenvectors of balanced matrix to original matrix

<p>
 <a href="appendixb.htm#balbak">balbak_l</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/balbak_l.f">subprogram</a>,
<a href="../f77/xmp8/unsyml.f">example</a>)
<br>
Back-transform left-eigenvectors of balanced matrix to original matrix

<p>
 <a href="appendixb.htm#elmhes">elmhes</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/elmhes.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Reduce a real matrix to Hessenberg form using Gaussian elimination

<p>
 <a href="appendixb.htm#hqr">hqr</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/hqr.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Eigenvalues of a Hessenberg matrix using QR-algorithm

<a name="ch12"> </a>
<p>
<br /><br /><b>Chapter 12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ordinary Differential Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#rkm">rkm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rkm.f">subprogram</a>,
<a href="../f77/xmp8/rkm.f">example</a>)
<br>
Initial value problem using fourth-order Runge-Kutta method with adaptive step size

<p>
 <a href="appendixb.htm#rkm">rkm_2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rkm_2.f">subprogram</a>,
<a href="../f77/xmp8/rkm_2.f">example</a>)
<br>
Initial value problem using second-order Runge-Kutta method with adaptive step size

<p>
 <a href="appendixb.htm#rk4">rk4</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rk4.f">subprogram</a>,
<a href="../f77/xmp8/rkm.f">example</a>)
<br>
One step of integration using fourth-order Runge-Kutta method

<p>
 <a href="appendixb.htm#rk2">rk2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rk2.f">subprogram</a>,
<a href="../f77/xmp8/rkm_2.f">example</a>)
<br>
One step of integration using second-order Runge-Kutta method

<p>
 <a href="appendixb.htm#mstep">mstep</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/mstep.f">subprogram</a>,
<a href="../f77/xmp8/mstep.f">example</a>)
<br>
Initial value problem using predictor-corrector method with adaptive step size

<p>
 <a href="appendixb.htm#adams">adams</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/adams.f">subprogram</a>,
<a href="../f77/xmp8/mstep.f">example</a>)
<br>
One step of integration using fourth-order Adams method

<p>
 <a href="appendixb.htm#strt4">strt4</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/strt4.f">subprogram</a>,
<a href="../f77/xmp8/mstep.f">example</a>)
<br>
Starting values for multistep method using Runge-Kutta method

<p>
 <a href="appendixb.htm#gear">gear</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gear.f">subprogram</a>,
<a href="../f77/xmp8/mstep.f">example</a>)
<br>
One step of integration using fourth-order stiffly stable method

<p>
 <a href="appendixb.htm#extp">extp</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/extp.f">subprogram</a>,
<a href="../f77/xmp8/extp.f">example</a>)
<br>
Initial value problem using extrapolation method 

<p>
 <a href="appendixb.htm#fdm">fdm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fdm.f">subprogram</a>,
<a href="../f77/xmp8/fdm.f">example</a>)
<br>
Two-point boundary value problem using finite difference method

<p>
 <a href="appendixb.htm#gevp">gevp</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gevp.f">subprogram</a>,
<a href="../f77/xmp8/gevp.f">example</a>)
<br>
Eigenvalue problem in differential equations using finite differences

<p>
 <a href="appendixb.htm#gevp">gevp_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gevp_c.f">subprogram</a>,
<a href="../f77/xmp8/gevp_c.f">example</a>)
<br>
Eigenvalue problem in differential equations using finite differences (complex version)

<p>
 <a href="appendixb.htm#gaublk">gaublk</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaublk.f">subprogram</a>,
<a href="../f77/xmp8/fdm.f">example</a>)
<br>
Solve a system of linear equations involving finite difference matrix

<p>
 <a href="appendixb.htm#gaublk">gaublk_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaublk_c.f">subprogram</a>,
<a href="../f77/xmp8/gevp_c.f">example</a>)
<br>
Solve a system of linear equations involving finite difference matrix (complex version)

<p>
 <a href="appendixb.htm#setmat">setmat</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/setmat.f">subprogram</a>,
<a href="../f77/xmp8/fdm.f">example</a>)
<br>
Generate finite difference matrix for a system of differential equations

<p>
 <a href="appendixb.htm#setmat">setmat_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/setmat_c.f">subprogram</a>,
<a href="../f77/xmp8/gevp_c.f">example</a>)
<br>
Generate finite difference matrix for a system of differential equations (complex version)

<p>
 <a href="appendixb.htm#bspode">bspode</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspode.f">subprogram</a>,
<a href="../f77/xmp8/bspode.f">example</a>)
<br>
Two-point boundary value problem using expansion method with B-spline basis functions

<a name="ch13"> </a>
<p>
<br /><br /><b>Chapter 13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Integral Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#fred">fred</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fred.f">subprogram</a>,
<a href="../f77/xmp8/fred.f">example</a>)
<br>
Solve a Fredholm equation using quadrature method

<p>
 <a href="appendixb.htm#fredco">fredco</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fredco.f">subprogram</a>,
<a href="../f77/xmp8/fredco.f">example</a>)
<br>
Solve a Fredholm equation using collocation method

<p>
 <a href="appendixb.htm#funk">funk</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/funk.f">subprogram</a>,
<a href="../f77/xmp8/fredco.f">example</a>)
<br>
Integrand =K(x,t)<font face="symbol">f</font
><sub>j</sub>(t), for evaluating integrals in collocation method

<p>
 <a href="appendixb.htm#rls">rls</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rls.f">subprogram</a>,
<a href="../f77/xmp8/rls.f">example</a>)
<br>
Solve a linear inversion problem using regularised least squares technique

<p>
 <a href="appendixb.htm#forw">forw</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/forw.f">subprogram</a>,
<a href="../f77/xmp8/rls.f">example</a>)
<br>
Solve the forward problem

<p>
 <a href="appendixb.htm#volt">volt</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/volt.f">subprogram</a>,
<a href="../f77/xmp8/volt.f">example</a>)
<br>
Solve a linear Volterra equation using trapezoidal rule

<p>
 <a href="appendixb.htm#volt2">volt2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/volt2.f">subprogram</a>,
<a href="../f77/xmp8/volt2.f">example</a>)
<br>
Solve a nonlinear Volterra equation of the second kind using Simpson's rule

<a name="ch14"> </a>
<p>
<br /><br /><b>Chapter 14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Partial Differential Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="appendixb.htm#crank">crank</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/crank.f">subprogram</a>,
<a href="../f77/xmp8/crank.f">example</a>)
<br>
Linear  second-order parabolic equation using Crank-Nicolson method

<p>
 <a href="appendixb.htm#lines">lines</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lines.f">subprogram</a>,
<a href="../f77/xmp8/lines.f">example</a>)
<br>
Nonlinear parabolic equations using the method of lines

<p>
 <a href="appendixb.htm#adm">adm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/adm.f">subprogram</a>,
<a href="../f77/xmp8/adm.f">example</a>)
<br>
Parabolic equation in two space variables using alternating direction method

<p>
 <a href="appendixb.htm#lax">lax</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lax.f">subprogram</a>,
<a href="../f77/xmp8/lax.f">example</a>)
<br>
Nonlinear hyperbolic equations using the Lax-Wendroff method

<p>
 <a href="appendixb.htm#sor">sor</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/sor.f">subprogram</a>,
<a href="../f77/xmp8/sor.f">example</a>)
<br>
Linear second-order elliptic equations using the successive over-relaxation (SOR) method

<p>
 <a href="appendixb.htm#adi">adi</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/adi.f">subprogram</a>,
<a href="../f77/xmp8/adi.f">example</a>)
<br>
Linear second-order elliptic equations using the alternating direction implicit iterative (ADI) method

<p>


<p>
<br>
<br>
<br>

<center><font size=+1><b>Alphabetic list of Fortran subprograms</b></font>
</center>

<p>
<br>
<br>



<a name="ca"> </a>
<p>
 <a href="appendixb.htm#adams">adams</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/adams.f">subprogram</a>,
<a href="../f77/xmp8/mstep.f">example</a>)
<br>
One step of integration using fourth-order Adams method

<p>
 <a href="appendixb.htm#adi">adi</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/adi.f">subprogram</a>,
<a href="../f77/xmp8/adi.f">example</a>)
<br>
Linear second-order elliptic equations using the alternating direction implicit iterative (ADI) method

<p>
 <a href="appendixb.htm#adm">adm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/adm.f">subprogram</a>,
<a href="../f77/xmp8/adm.f">example</a>)
<br>
Parabolic equation in two space variables using alternating direction method

<p>
 <a href="appendixb.htm#adpint">adpint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/adpint.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Adaptive integration over a finite interval

<a name="cb"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#balanc">balanc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/balanc.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Balancing a general real matrix

<p>
 <a href="appendixb.htm#balbak">balbak</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/balbak.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Back-transform eigenvectors of balanced matrix to original matrix

<p>
 <a href="appendixb.htm#balbak">balbak_l</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/balbak_l.f">subprogram</a>,
<a href="../f77/xmp8/unsyml.f">example</a>)
<br>
Back-transform left-eigenvectors of balanced matrix to original matrix

<p>
 <a href="appendixb.htm#betai">betai</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betai.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function by directly evaluating the integral


<p>
 <a href="appendixb.htm#betap">betap</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betap.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function

<p>
 <a href="appendixb.htm#betcon1">betcon1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betcon1.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function using a continued fraction approximation

<p>
 <a href="appendixb.htm#betcon">betcon</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betcon.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function using an alternative continued fraction approximation


<p>
 <a href="appendixb.htm#betser">betser</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/betser.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Beta function using a power series approximation


<p>
 <a href="appendixb.htm#bfgs">bfgs</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bfgs.f">subprogram</a>,
<a href="../f77/xmp8/bfgs.f">example</a>)
<br>
Minimisation in n dimensions using quasi-Newton method with BFGS formula

<p>
 <a href="appendixb.htm#bi0">bi0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bi0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of first kind of order zero, I<sub>0</sub>(x)

<p>
 <a href="appendixb.htm#bi1">bi1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bi1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of first kind of order one, I<sub>1</sub>(x)

<p>
 <a href="appendixb.htm#bin">bin</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bin.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of first kind of integral order, I<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#bisect">bisect</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bisect.f">subprogram</a>,
<a href="../f77/xmp8/realrt.f">example</a>)
<br>
Solve a nonlinear equation using bisection

<p>
 <a href="appendixb.htm#bj0">bj0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bj0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first kind of order zero, J<sub>0</sub>(x)

<p>
 <a href="appendixb.htm#bj1">bj1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bj1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first kind of order one, J<sub>1</sub>(x)

<p>
 <a href="appendixb.htm#bjn">bjn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bjn.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first kind of integral order, J<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#bjy0">bjy0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bjy0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first and second kind of order zero

<p>
 <a href="appendixb.htm#bjy1">bjy1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bjy1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of first and second kind of order one

<p>
 <a href="appendixb.htm#bk0">bk0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bk0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of second kind of order zero, K<sub>0</sub>(x)

<p>
 <a href="appendixb.htm#bk1">bk1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bk1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of second kind of order one, K<sub>1</sub>(x)

<p>
 <a href="appendixb.htm#bkn">bkn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bkn.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate modified Bessel function of second kind of integral order, K<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#brackm">brackm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/brackm.f">subprogram</a>,
<a href="../f77/xmp8/golden.f">example</a>)
<br>
Bracketing a minimum in one dimension

<p>
 <a href="appendixb.htm#brent">brent</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/brent.f">subprogram</a>,
<a href="../f77/xmp8/realrt.f">example</a>)
<br>
Solve a nonlinear equation using Brent's method

<p>
 <a href="appendixb.htm#brentm">brentm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/brentm.f">subprogram</a>,
<a href="../f77/xmp8/brentm.f">example</a>)
<br>
Minimisation in one dimension using Brent's method

<p>
 <a href="appendixb.htm#broydn">broydn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/broydn.f">subprogram</a>,
<a href="../f77/xmp8/broydn.f">example</a>)
<br>
Solve a system of nonlinear equations using Broyden's method

<p>
 <a href="appendixb.htm#bspev2">bspev2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspev2.f">subprogram</a>,
<a href="../f77/xmp8/poly2.f">example</a>)
<br>
Evaluate function value and derivatives using B-spline expansion in two dimensions

<p>
 <a href="appendixb.htm#bspevl">bspevl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspevl.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Evaluate function value and its derivatives using B-spline expansion

<p>
 <a href="appendixb.htm#bspevn">bspevn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspevn.f">subprogram</a>,
<a href="../f77/xmp8/bspintn.f">example</a>)
<br>
Evaluate function value using B-spline expansion in n dimensions

<p>
 <a href="appendixb.htm#bspevn1">bspevn1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspevn1.f">subprogram</a>,
<a href="../f77/xmp8/bspintn.f">example</a>)
<br>
Evaluate function value and first derivative using B-spline expansion in n dimensions

<p>
 <a href="appendixb.htm#bspevn2">bspevn2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspevn2.f">subprogram</a>,
<a href="../f77/xmp8/bspintn.f">example</a>)
<br>
Evaluate function value and first and second derivatives using B-spline expansion in n dimensions

<p>
 <a href="appendixb.htm#bspfit">bspfit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfit.f">subprogram</a>,
<a href="../f77/xmp8/bspfit.f">example</a>)
<br>
Least squares fit to B-spline basis functions in one dimension

<p>
 <a href="appendixb.htm#bspfit2">bspfit2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfit2.f">subprogram</a>,
<a href="../f77/xmp8/bspfit2.f">example</a>)
<br>
Least squares fit to B-spline basis in two dimensions with equal weights

<p>
 <a href="appendixb.htm#bspfitn">bspfitn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfitn.f">subprogram</a>,
<a href="../f77/xmp8/bspfitn.f">example</a>)
<br>
Least squares fit to B-spline basis in n dimensions with equal weights

<p>
 <a href="appendixb.htm#bspfitw2">bspfitw2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfitw2.f">subprogram</a>,
<a href="../f77/xmp8/bspfit2.f">example</a>)
<br>
Least squares fit to B-spline basis in two dimensions with arbitrary weights

<p>
 <a href="appendixb.htm#bspfitwn">bspfitwn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspfitwn.f">subprogram</a>,
<a href="../f77/xmp8/bspfitn.f">example</a>)
<br>
Least squares fit to B-spline basis in n dimensions with arbitrary weights

<p>
 <a href="appendixb.htm#bspint">bspint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspint.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Calculate coefficients of B-spline interpolation

<p>
 <a href="appendixb.htm#bspint2">bspint2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspint2.f">subprogram</a>,
<a href="../f77/xmp8/poly2.f">example</a>)
<br>
Calculate coefficients of B-spline interpolation in two dimensions

<p>
 <a href="appendixb.htm#bspintn">bspintn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspintn.f">subprogram</a>,
<a href="../f77/xmp8/bspintn.f">example</a>)
<br>
Calculate coefficients of B-spline interpolation in n dimensions

<p>
 <a href="appendixb.htm#bsplin">bsplin</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bsplin.f">subprogram</a>,
<a href="../f77/xmp8/bsplin.f">example</a>)
<br>
Calculate B-spline basis functions on a set of knots

<p>
 <a href="appendixb.htm#bspode">bspode</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspode.f">subprogram</a>,
<a href="../f77/xmp8/bspode.f">example</a>)
<br>
Two-point boundary value problem using expansion method with B-spline basis functions

<p>
 <a href="appendixb.htm#bspqd">bspqd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspqd.f">subprogram</a>,
<a href="../f77/xmp8/splint.f">example</a>)
<br>
Integrate a B-spline expansion

<p>
 <a href="appendixb.htm#bspqd2">bspqd2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspqd2.f">subprogram</a>,
<a href="../f77/xmp8/bspqd2.f">example</a>)
<br>
Integrate a B-spline expansion in two dimensions

<p>
 <a href="appendixb.htm#bspqdn">bspqdn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/bspqdn.f">subprogram</a>,
<a href="../f77/xmp8/bspqdn.f">example</a>)
<br>
Integrate a B-spline expansion in n dimensions

<p>
 <a href="appendixb.htm#by0">by0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/by0.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of second kind of order zero, Y<sub>0</sub>(x)

<p>
 <a href="appendixb.htm#by1">by1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/by1.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of second kind of order one, Y<sub>1</sub>(x)

<p>
 <a href="appendixb.htm#byn">byn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/byn.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate Bessel function of second kind of integral order, Y<sub>n</sub>(x)




<a name="cc"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#cassum">cassum</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/cassum.f">subprogram</a>,
<a href="../f77/xmp8/sum.f">example</a>)
<br>
Cascade sum of a finite series using a function to calculate the terms

<p>
 <a href="appendixb.htm#cassum">cassum_a</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/cassum_a.f">subprogram</a>,
<a href="../f77/xmp8/sum_a.f">example</a>)
<br>
Cascade sum of a finite series using an array to supply the terms

<p>
 <a href="appendixb.htm#cauchy">cauchy</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/cauchy.f">subprogram</a>,
<a href="../f77/xmp8/cauchy.f">example</a>)
<br>
Calculate Cauchy principal value of an integral

<p>
 <a href="appendixb.htm#chebap">chebap</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/chebap.f">subprogram</a>,
<a href="../f77/xmp8/chebap.f">example</a>)
<br>
Rational function approximation using Chebyshev polynomials

<p>
 <a href="appendixb.htm#chebcf">chebcf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/chebcf.f">subprogram</a>,
<a href="../f77/xmp8/chebcf.f">example</a>)
<br>
Convert from power series to Chebyshev expansion and vice versa

<p>
 <a href="appendixb.htm#chebex">chebex</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/chebex.f">subprogram</a>,
<a href="../f77/xmp8/chebex.f">example</a>)
<br>
Calculate the coefficients of Chebyshev expansion

<p>
 <a href="appendixb.htm#cholsk">cholsk</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/cholsk.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Solve a system of linear equations with symmetric positive definite matrix using Cholesky's decomposition

<p>
 <a href="appendixb.htm#contur">contur</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/contur.f">subprogram</a>,
<a href="../f77/xmp8/delves.f">example</a>)
<br>
Contour integration over a circular contour for DELVES

<p>
 <a href="appendixb.htm#crank">crank</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/crank.f">subprogram</a>,
<a href="../f77/xmp8/crank.f">example</a>)
<br>
Linear  second-order parabolic equation using Crank-Nicolson method

<p>
 <a href="appendixb.htm#crout">crout</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/crout.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Solve a system of linear equations using Crout's algorithm

<p>
 <a href="appendixb.htm#crout">crout_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/crout_c.f">subprogram</a>,
<a href="../f77/xmp8/genevp.f">example</a>)
<br>
Solve a system of linear equations using Crout's algorithm (complex version)

<p>
 <a href="appendixb.htm#crouth">crouth</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/crouth.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Iterative refinement of solution of a system of linear equations

<a name="cd"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#davidm">davidm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/davidm.f">subprogram</a>,
<a href="../f77/xmp8/davidm.f">example</a>)
<br>
Minimisation in one dimension using cubic Hermite interpolation

<p>
 <a href="appendixb.htm#davidn">davidn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/davidn.f">subprogram</a>,
<a href="../f77/xmp8/newton.f">example</a>)
<br>
Solve a system of nonlinear equations using Davidenko's method coupled with Newton's method

<p>
 <a href="appendixb.htm#davidn">davidn_b</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/davidn_b.f">subprogram</a>,
<a href="../f77/xmp8/broydn.f">example</a>)
<br>
Solve a system of nonlinear equations using Davidenko's method coupled with Broyden's method

<p>
 <a href="appendixb.htm#dawson">dawson</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/dawson.f">subprogram</a>,
<a href="../f77/xmp8/dawson.f">example</a>)
<br>
Calculate the value of Dawson's integral

<p>
 <a href="appendixb.htm#delves">delves</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/delves.f">subprogram</a>,
<a href="../f77/xmp8/delves.f">example</a>)
<br>
Complex zeros of an analytic function using quadrature based method

<p>
 <a href="appendixb.htm#dft">dft</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/dft.f">subprogram</a>,
<a href="../f77/xmp8/fft.f">example</a>)
<br>
Discrete Fourier transform of complex data with arbitrary number of points

<p>
 <a href="appendixb.htm#divdif">divdif</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/divdif.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Calculate interpolation and its derivatives using divided difference formula

<p>
 <a href="appendixb.htm#divdif0">divdif0</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/divdif0.f">subprogram</a>,
<a href="../f77/xmp8/poly2.f">example</a>)
<br>
Divided difference interpolation formula (no derivatives version)

<p>
 <a href="appendixb.htm#drvt">drvt</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/drvt.f">subprogram</a>,
<a href="../f77/xmp8/drvt.f">example</a>)
<br>
Differentiation using h &#8594; 0 extrapolation

<a name="ce"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#elmhes">elmhes</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/elmhes.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Reduce a real matrix to Hessenberg form using Gaussian elimination

<p>
 <a href="appendixb.htm#epsiln">epsiln</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/epsiln.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Integration using &#949;-algorithm

<p>
 <a href="appendixb.htm#equids">equids</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/equids.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using equidistributed sequences

<p>
 <a href="appendixb.htm#erf">erf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/erf.f">subprogram</a>,
<a href="../f77/xmp8/erf.f">example</a>)
<br>
Calculate Error function at real x

<p>
 <a href="appendixb.htm#erfc">erfc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/erfc.f">subprogram</a>,
<a href="../f77/xmp8/erf.f">example</a>)
<br>
Calculate complementary Error function at real x

<p>
 <a href="appendixb.htm#euler">euler</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/euler.f">subprogram</a>,
<a href="../f77/xmp8/euler.f">example</a>)
<br>
Summation of alternating series using Euler transformation

<p>
 <a href="appendixb.htm#extp">extp</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/extp.f">subprogram</a>,
<a href="../f77/xmp8/extp.f">example</a>)
<br>
Initial value problem using extrapolation method 

<a name="cf"> </a>
<p>
<br /><br />
<p>
 <a href="appendixb.htm#fbeta">fbeta</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fbeta.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate the integrand for BETAI


<p>
 <a href="appendixb.htm#fdm">fdm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fdm.f">subprogram</a>,
<a href="../f77/xmp8/fdm.f">example</a>)
<br>
Two-point boundary value problem using finite difference method

<p>
 <a href="appendixb.htm#ferm05">ferm05</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ferm05.f">subprogram</a>,
<a href="../f77/xmp8/fermi.f">example</a>)
<br>
Calculate the Fermi integrals for k=1/2

<p>
 <a href="appendixb.htm#ferm15">ferm15</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ferm15.f">subprogram</a>,
<a href="../f77/xmp8/fermi.f">example</a>)
<br>
Calculate the Fermi integrals for k=3/2

<p>
 <a href="appendixb.htm#ferm25">ferm25</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ferm25.f">subprogram</a>,
<a href="../f77/xmp8/fermi.f">example</a>)
<br>
Calculate the Fermi integrals for k=5/2

<p>
 <a href="appendixb.htm#fermm05">fermm05</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fermm05.f">subprogram</a>,
<a href="../f77/xmp8/fermi.f">example</a>)
<br>
Calculate the Fermi integrals for k=<font face="symbol">-</font
>1/2

<p>
 <a href="appendixb.htm#fft">fft</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fft.f">subprogram</a>,
<a href="../f77/xmp8/fft.f">example</a>)
<br>
Fast Fourier transform of complex data

<p>
 <a href="appendixb.htm#fftn">fftn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fftn.f">subprogram</a>,
<a href="../f77/xmp8/fftn.f">example</a>)
<br>
Fast Fourier transform of complex data in n dimensions

<p>
 <a href="appendixb.htm#fftr">fftr</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fftr.f">subprogram</a>,
<a href="../f77/xmp8/fftr.f">example</a>)
<br>
Fast Fourier transform of real data

<p>
 <a href="appendixb.htm#filon">filon</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/filon.f">subprogram</a>,
<a href="../f77/xmp8/filon.f">example</a>)
<br>
Integration of an oscillatory function using Filon's formula

<p>
 <a href="appendixb.htm#fln">fln</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fln.f">subprogram</a>,
<a href="../f77/xmp8/nminf.f">example</a>)
<br>
Calculate the function value for line search for direction set method

<p>
 <a href="appendixb.htm#flnm">flnm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/flnm.f">subprogram</a>,
<a href="../f77/xmp8/bfgs.f">example</a>)
<br>
Calculate the function value for line search for quasi-Newton method

<p>
 <a href="appendixb.htm#fm">fm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fm.f">subprogram</a>,
<a href="../f77/xmp8/remes.f">example</a>)
<br>
Calculate error in rational function approximation for use with REMES

<p>
 <a href="appendixb.htm#forw">forw</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/forw.f">subprogram</a>,
<a href="../f77/xmp8/rls.f">example</a>)
<br>
Solve the forward problem

<p>
 <a href="appendixb.htm#fred">fred</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fred.f">subprogram</a>,
<a href="../f77/xmp8/fred.f">example</a>)
<br>
Solve a Fredholm equation using quadrature method

<p>
 <a href="appendixb.htm#fredco">fredco</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/fredco.f">subprogram</a>,
<a href="../f77/xmp8/fredco.f">example</a>)
<br>
Solve a Fredholm equation using collocation method

<p>
 <a href="appendixb.htm#funk">funk</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/funk.f">subprogram</a>,
<a href="../f77/xmp8/fredco.f">example</a>)
<br>
Integrand =K(x,t)<font face="symbol">f</font
><sub>j</sub>(t), for evaluating integrals in collocation method

<a name="cg"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#gamma">gamma</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gamma.f">subprogram</a>,
<a href="../f77/xmp8/gamma.f">example</a>)
<br>
Calculate Gamma function at real x, &#915;(x)
<p>
 <a href="appendixb.htm#gammal">gammal</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gammal.f">subprogram</a>,
<a href="../f77/xmp8/gamma.f">example</a>)
<br>
Calculate natural logarithm of Gamma function at real x, ln<font face="symbol">|</font
>&#915;(x)<font face="symbol">|</font
>

<p>
 <a href="appendixb.htm#gammap">gammap</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gammap.f">subprogram</a>,
<a href="../f77/xmp8/betap.f">example</a>)
<br>
Calculate incomplete Gamma function



<p>
 <a href="appendixb.htm#gaublk">gaublk</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaublk.f">subprogram</a>,
<a href="../f77/xmp8/fdm.f">example</a>)
<br>
Solve a system of linear equations involving finite difference matrix

<p>
 <a href="appendixb.htm#gaublk">gaublk_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaublk_c.f">subprogram</a>,
<a href="../f77/xmp8/gevp_c.f">example</a>)
<br>
Solve a system of linear equations involving finite difference matrix (complex version)

<p>
 <a href="appendixb.htm#gaubnd">gaubnd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaubnd.f">subprogram</a>,
<a href="../f77/xmp8/gaubnd.f">example</a>)
<br>
Solve a system of linear equations with a band matrix using Gaussian elimination with partial pivoting

<p>
 <a href="appendixb.htm#gaubnd">gaubnd_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaubnd_c.f">subprogram</a>,
<a href="../f77/xmp8/cmat.f">example</a>)
<br>
Solve a system of linear equations with a band matrix using Gaussian elimination with partial pivoting (complex version)

<p>
 <a href="appendixb.htm#gaucb1">gaucb1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaucb1.f">subprogram</a>,
<a href="../f77/xmp8/gaucb1.f">example</a>)
<br>
Integration using Gauss-Chebyshev formula  with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=[(x<font face="symbol">-</font
>A)/(B<font face="symbol">-</font
	>x)]<sup>1/2</sup>
</dd></dl> <a href="appendixb.htm#gaucb2">gaucb2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaucb2.f">subprogram</a>,
<a href="../f77/xmp8/gaucb2.f">example</a>)
<br>
Integration using Gauss-Chebyshev formula  with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=[(x<font face="symbol">-</font
>A)(B<font face="symbol">-</font
>x)]<sup>1/2</sup>

<p>
</dd></dl> <a href="appendixb.htm#gaucby">gaucby</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaucby.f">subprogram</a>,
<a href="../f77/xmp8/gaucby.f">example</a>)
<br>
Integration using Gauss-Chebyshev formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=1/[(x<font face="symbol">-</font
>A)(B<font face="symbol">-</font
>x)]<sup>1/2</sup>
</dd></dl> <a href="appendixb.htm#gauelm">gauelm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauelm.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Solve a system of linear equations using Gaussian elimination 

<p>
 <a href="appendixb.htm#gauelm">gauelm_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauelm_c.f">subprogram</a>,
<a href="../f77/xmp8/genevp.f">example</a>)
<br>
Solve a system of linear equations using Gaussian elimination (complex version)

<p>
 <a href="appendixb.htm#gauher">gauher</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauher.f">subprogram</a>,
<a href="../f77/xmp8/gauher.f">example</a>)
<br>
Calculate weights and abscissas of Gauss-Hermite quadrature formulae

<p>
 <a href="appendixb.htm#gaujac">gaujac</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaujac.f">subprogram</a>,
<a href="../f77/xmp8/gaujac.f">example</a>)
<br>
Calculate weights and abscissas of Gauss-Jacobi quadrature formulae

<p>
 <a href="appendixb.htm#gaulag">gaulag</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaulag.f">subprogram</a>,
<a href="../f77/xmp8/gaulag.f">example</a>)
<br>
Integration over [A,&#8734;) using a combination of Gaussian formulae

<p>
 <a href="appendixb.htm#gauleg">gauleg</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauleg.f">subprogram</a>,
<a href="../f77/xmp8/gauleg.f">example</a>)
<br>
Calculate weights and abscissas of Gauss-Legendre quadrature formulae

<p>
 <a href="appendixb.htm#gaulg2">gaulg2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaulg2.f">subprogram</a>,
<a href="../f77/xmp8/gaulog.f">example</a>)
<br>
Integration over (0,A] with logarithmic singularity using a combination of Gaussian formulae

<p>
 <a href="appendixb.htm#gaulog">gaulog</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaulog.f">subprogram</a>,
<a href="../f77/xmp8/gaulog.f">example</a>)
<br>
Integration over (0,A] using Gaussian formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=ln(A/x)
</dd></dl> <a href="appendixb.htm#gaus16">gaus16</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gaus16.f">subprogram</a>,
<a href="../f77/xmp8/adpint.f">example</a>)
<br>
Integration using 16 point Gauss-Legendre formula for use with ADPINT

<p>
 <a href="appendixb.htm#gausq">gausq</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gausq.f">subprogram</a>,
<a href="../f77/xmp8/gausq.f">example</a>)
<br>
Integration over (0,A] using Gaussian formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=x<sup>-1/2</sup>
</dd></dl>

<p>
 <a href="appendixb.htm#gausq2">gausq2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gausq2.f">subprogram</a>,
<a href="../f77/xmp8/gausq.f">example</a>)
<br>
Integration over (0,A] with square root singularity using a combination of Gaussian formulae

<p>
<a href="appendixb.htm#gausrc">gausrc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gausrc.f">subprogram</a>,
<a href="../f77/xmp8/gausrc.f">example</a>)
<br>
Calculate weights and abscissas of Gaussian formula using recurrence relation of orthogonal polynomials

<p>
 <a href="appendixb.htm#gauss">gauss</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauss.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Integration using Gauss-Legendre formula

<p>
 <a href="appendixb.htm#gauswt">gauswt</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gauswt.f">subprogram</a>,
<a href="../f77/xmp8/gauswt.f">example</a>)
<br>
Calculate weights and abscissas of Gaussian formula using moments of weight function

<p>
 <a href="appendixb.htm#gear">gear</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gear.f">subprogram</a>,
<a href="../f77/xmp8/mstep.f">example</a>)
<br>
One step of integration using fourth-order stiffly stable method

<p>
 <a href="appendixb.htm#gevp">gevp</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gevp.f">subprogram</a>,
<a href="../f77/xmp8/gevp.f">example</a>)
<br>
Eigenvalue problem in differential equations using finite differences

<p>
 <a href="appendixb.htm#gevp">gevp_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/gevp_c.f">subprogram</a>,
<a href="../f77/xmp8/gevp_c.f">example</a>)
<br>
Eigenvalue problem in differential equations using finite differences (complex version)

<p>
 <a href="appendixb.htm#golden">golden</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/golden.f">subprogram</a>,
<a href="../f77/xmp8/golden.f">example</a>)
<br>
Minimisation in one dimension using golden section search

<a name="ch"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#herevp">herevp</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/herevp.f">subprogram</a>,
<a href="../f77/xmp8/herevp.f">example</a>)
<br>
Eigenvalue problem for a complex Hermitian matrix

<p>
 <a href="appendixb.htm#hermit">hermit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/hermit.f">subprogram</a>,
<a href="../f77/xmp8/hermit.f">example</a>)
<br>
Integration over (-&#8734;,&#8734;)
using Gauss-Hermite formula

<p>
 <a href="appendixb.htm#hqr">hqr</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/hqr.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Eigenvalues of a Hessenberg matrix using QR-algorithm

<a name="ci"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#invit">invit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit.f">subprogram</a>,
<a href="../f77/xmp8/invit.f">example</a>)
<br>
Real eigenvalue and eigenvector of a real matrix using inverse iteration

<p>
 <a href="appendixb.htm#invit">invit_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit_c.f">subprogram</a>,
<a href="../f77/xmp8/unsym.f">example</a>)
<br>
Complex eigenvalue and eigenvector of a real matrix using inverse iteration

<p>
 <a href="appendixb.htm#invit">invit_cc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit_cc.f">subprogram</a>,
<a href="../f77/xmp8/genevp.f">example</a>)
<br>
Complex eigenvalue and eigenvector of a complex matrix using inverse iteration

<p>
 <a href="appendixb.htm#invit">invit_cl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit_cl.f">subprogram</a>,
<a href="../f77/xmp8/unsyml.f">example</a>)
<br>
Complex eigenvalue and left-eigenvector of a real matrix using inverse iteration

<p>
 <a href="appendixb.htm#invit">invit_l</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/invit_l.f">subprogram</a>,
<a href="../f77/xmp8/invit.f">example</a>)
<br>
Real eigenvalue and left-eigenvector of a real matrix using inverse iteration

<p>
 <a href="appendixb.htm#iranbin">iranbin</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/iranbin.f">subprogram</a>,
<a href="../f77/xmp8/binom.f">example</a>)
<br>
Generate a sequence of random numbers with binomial distribution

<p>
 <a href="appendixb.htm#iranpoi">iranpoi</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/iranpoi.f">subprogram</a>,
<a href="../f77/xmp8/poisson.f">example</a>)
<br>
Generate a sequence of random numbers with Poisson distribution



<a name="ck"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#kronrd">kronrd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/kronrd.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Integration using Gauss-Kronrod formula for use with ADPINT

<a name="cl"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#lagitc">lagitc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lagitc.f">subprogram</a>,
<a href="../f77/xmp8/polyc.f">example</a>)
<br>
One root of a polynomial with complex coefficients using Laguerre's method

<p>
 <a href="appendixb.htm#lagitr">lagitr</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lagitr.f">subprogram</a>,
<a href="../f77/xmp8/polyr.f">example</a>)
<br>
One root of a polynomial with real coefficients using Laguerre's method

<p>
 <a href="appendixb.htm#lagure">lagure</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lagure.f">subprogram</a>,
<a href="../f77/xmp8/gaulag.f">example</a>)
<br>
Integration over [A,&#8734;) using Gauss-Laguerre formula

<p>
 <a href="appendixb.htm#lagurw">lagurw</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lagurw.f">subprogram</a>,
<a href="../f77/xmp8/lagurw.f">example</a>)
<br>
Calculate weights and abscissas of Gauss-Laguerre quadrature formulae

<p>
 <a href="appendixb.htm#lapinv">lapinv</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lapinv.f">subprogram</a>,
<a href="../f77/xmp8/lapinv.f">example</a>)
<br>
Inverse Laplace transform

<p>
 <a href="appendixb.htm#lax">lax</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lax.f">subprogram</a>,
<a href="../f77/xmp8/lax.f">example</a>)
<br>
Nonlinear hyperbolic equations using the Lax-Wendroff method

<p>
 <a href="appendixb.htm#lines">lines</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/lines.f">subprogram</a>,
<a href="../f77/xmp8/lines.f">example</a>)
<br>
Nonlinear parabolic equations using the method of lines

<p>
 <a href="appendixb.htm#linfitxy">linfitxy</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linfitxy.f">subprogram</a>,
<a href="../f77/xmp8/linfitxy.f">example</a>)
<br>
Least squares straight line fit when there are errors in both x and y values


<p>
 <a href="appendixb.htm#linl1">linl1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linl1.f">subprogram</a>,
<a href="../f77/xmp8/polyl1.f">example</a>)
<br>
Linear L<sub>1</sub>-approximation to discrete data for arbitrary basis functions

<p>
 <a href="appendixb.htm#linmin">linmin</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linmin.f">subprogram</a>,
<a href="../f77/xmp8/bfgs.f">example</a>)
<br>
Line search for quasi-Newton method

<p>
 <a href="appendixb.htm#linmnf">linmnf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linmnf.f">subprogram</a>,
<a href="../f77/xmp8/nminf.f">example</a>)
<br>
Line search for direction set method

<p>
 <a href="appendixb.htm#linrn">linrn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/linrn.f">subprogram</a>,
<a href="../f77/xmp8/linrn.f">example</a>)
<br>
Calculate linear interpolation in n dimensions

<p>
 <a href="appendixb.htm#llsq">llsq</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/llsq.f">subprogram</a>,
<a href="../f77/xmp8/llsq.f">example</a>)
<br>
Linear least squares fit in n dimensions to a user defined set of basis functions

<p>
 <a href="appendixb.htm#locate">locate</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/locate.f">subprogram</a>,
<a href="../f77/xmp8/linrn.f">example</a>)
<br>
Find the bracketing subinterval in an ordered table

<a name="cm"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#matinv">matinv</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/matinv.f">subprogram</a>,
<a href="../f77/xmp8/matinv.f">example</a>)
<br>
Calculate inverse of a square matrix using Gaussian elimination

<p>
 <a href="appendixb.htm#mcarlo">mcarlo</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/mcarlo.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using Monte Carlo method

<p>
 <a href="appendixb.htm#minmax">minmax</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/minmax.f">subprogram</a>,
<a href="../f77/xmp8/minmax.f">example</a>)
<br>
Rational function minimax approximation to discrete data

<p>
 <a href="appendixb.htm#mstep">mstep</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/mstep.f">subprogram</a>,
<a href="../f77/xmp8/mstep.f">example</a>)
<br>
Initial value problem using predictor-corrector method with adaptive step size

<p>
 <a href="appendixb.htm#muler2">muler2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/muler2.f">subprogram</a>,
<a href="../f77/xmp8/muler2.f">example</a>)
<br>
Complex root using Muller's method with function value in a scaled form, f(x)&times;2<sup>i(x)</sup>

<p>
 <a href="appendixb.htm#mulint">mulint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/mulint.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using product Gauss rule with varying number of points 

<p>
 <a href="appendixb.htm#muller">muller</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/muller.f">subprogram</a>,
<a href="../f77/xmp8/muller.f">example</a>)
<br>
Complex root using Muller's method

<a name="cn"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#nearst">nearst</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/nearst.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Find nearest point in an ordered table using bisection

<p>
 <a href="appendixb.htm#newrac">newrac</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/newrac.f">subprogram</a>,
<a href="../f77/xmp8/delves.f">example</a>)
<br>
Complex root of a nonlinear equation using Newton-Raphson method

<p>
 <a href="appendixb.htm#newrap">newrap</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/newrap.f">subprogram</a>,
<a href="../f77/xmp8/newrap.f">example</a>)
<br>
Solve a nonlinear equation using Newton-Raphson method

<p>
 <a href="appendixb.htm#newton">newton</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/newton.f">subprogram</a>,
<a href="../f77/xmp8/newton.f">example</a>)
<br>
Solve a system of nonlinear equations using Newton's method

<p>
 <a href="appendixb.htm#ngauss">ngauss</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ngauss.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using a specified product Gauss rule

<p>
 <a href="appendixb.htm#nllsq">nllsq</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/nllsq.f">subprogram</a>,
<a href="../f77/xmp8/nllsq.f">example</a>)
<br>
Calculate the Chi square function for a nonlinear least squares fit using quasi Newton method (BFGS)

<p>
 <a href="appendixb.htm#nllsq">nllsq_f</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/nllsq_f.f">subprogram</a>,
<a href="../f77/xmp8/nllsq.f">example</a>)
<br>
Calculate the Chi square function for a nonlinear least squares fit using direction set method (NMINF)

<p>
 <a href="appendixb.htm#nminf">nminf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/nminf.f">subprogram</a>,
<a href="../f77/xmp8/nminf.f">example</a>)
<br>
Minimisation in n dimensions using direction set method

<a name="cp"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#pade">pade</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/pade.f">subprogram</a>,
<a href="../f77/xmp8/pade.f">example</a>)
<br>
Calculate coefficients of Pad&#233; approximations

<p>
 <a href="appendixb.htm#pcor">pcor</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/pcor.f">subprogram</a>,
<a href="../f77/xmp8/pcor.f">example</a>)
<br>
Calculate the probability that two uncorrelated sequences will give a correlation coefficient exceeding a given value


<p>
 <a href="appendixb.htm#pleg">pleg</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/pleg.f">subprogram</a>,
<a href="../f77/xmp8/plm.f">example</a>)
<br>
Calculate the Legendre polynomial, P<sub><i>l</i></sub>(x)

<p>
 <a href="appendixb.htm#plm">plm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/plm.f">subprogram</a>,
<a href="../f77/xmp8/plm.f">example</a>)
<br>
Calculate the associated Legendre function, P<sub><i>l</i></sub><sup>m</sup>(x)

<p>
 <a href="appendixb.htm#pold">pold</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/pold.f">subprogram</a>,
<a href="../f77/xmp8/pold.f">example</a>)
<br>
Evaluate a polynomial and its derivative at any point

<p>
 <a href="appendixb.htm#polev2">polev2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polev2.f">subprogram</a>,
<a href="../f77/xmp8/polfit2.f">example</a>)
<br>
Evaluate the fitted polynomial and its derivatives at a specified point in two dimensions

<p>
 <a href="appendixb.htm#polevl">polevl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polevl.f">subprogram</a>,
<a href="../f77/xmp8/polfit.f">example</a>)
<br>
Evaluate the fitted polynomial and its derivatives at a specified point

<p>
 <a href="appendixb.htm#polevn">polevn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polevn.f">subprogram</a>,
<a href="../f77/xmp8/polfitn.f">example</a>)
<br>
Evaluate the fitted polynomial at a specified point in n dimensions

<p>
 <a href="appendixb.htm#polevn1">polevn1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polevn1.f">subprogram</a>,
<a href="../f77/xmp8/polfitn.f">example</a>)
<br>
Evaluate the fitted polynomial and first derivative at a specified point in n dimensions

<p>
 <a href="appendixb.htm#polevn2">polevn2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polevn2.f">subprogram</a>,
<a href="../f77/xmp8/polfitn.f">example</a>)
<br>
Evaluate the fitted polynomial and first and second derivatives at a specified point in n dimensions

<p>
 <a href="appendixb.htm#polfit">polfit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polfit.f">subprogram</a>,
<a href="../f77/xmp8/polfit.f">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials

<p>
 <a href="appendixb.htm#polfit1">polfit1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polfit1.f">subprogram</a>,
<a href="../f77/xmp8/polfit2.f">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials, simplified version for multiple data sets

<p>
 <a href="appendixb.htm#polfit2">polfit2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polfit2.f">subprogram</a>,
<a href="../f77/xmp8/polfit2.f">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials in two dimensions

<p>
 <a href="appendixb.htm#polfitn">polfitn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polfitn.f">subprogram</a>,
<a href="../f77/xmp8/polfitn.f">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials in n dimensions

<p>
 <a href="appendixb.htm#polort">polort</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polort.f">subprogram</a>,
<a href="../f77/xmp8/polfit2.f">example</a>)
<br>
Evaluate the orthogonal polynomial basis functions at a given point

<p>
 <a href="appendixb.htm#poly2">poly2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/poly2.f">subprogram</a>,
<a href="../f77/xmp8/poly2.f">example</a>)
<br>
Calculate polynomial interpolation in two dimensions

<p>
 <a href="appendixb.htm#polyc">polyc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polyc.f">subprogram</a>,
<a href="../f77/xmp8/polyc.f">example</a>)
<br>
All roots of a polynomial with complex coefficients

<p>
 <a href="appendixb.htm#polyl1">polyl1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polyl1.f">subprogram</a>,
<a href="../f77/xmp8/polyl1.f">example</a>)
<br>
Polynomial L<sub>1</sub>-approximation to discrete data

<p>
 <a href="appendixb.htm#polyr">polyr</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/polyr.f">subprogram</a>,
<a href="../f77/xmp8/polyr.f">example</a>)
<br>
All roots of a polynomial with real coefficients

<a name="cr"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#ran">ran</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ran.f">subprogram</a>,
<a href="../f77/xmp8/gaubnd.f">example</a>)
<br>
Generate a sequence of random numbers with uniform distribution

<p>
 <a href="appendixb.htm#ranf">ranf</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ranf.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Generate a sequence of random numbers with uniform distribution

<p>
 <a href="appendixb.htm#rangau">rangau</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rangau.f">subprogram</a>,
<a href="../f77/xmp8/polfit.f">example</a>)
<br>
Generate a sequence of random numbers with Gaussian distribution

<p>
 <a href="appendixb.htm#ratnal">ratnal</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ratnal.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Calculate rational function interpolation

<p>
 <a href="appendixb.htm#remes">remes</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/remes.f">subprogram</a>,
<a href="../f77/xmp8/remes.f">example</a>)
<br>
Minimax approximation to mathematical functions using Remes algorithm

<p>
 <a href="appendixb.htm#rk2">rk2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rk2.f">subprogram</a>,
<a href="../f77/xmp8/rkm_2.f">example</a>)
<br>
One step of integration using second-order Runge-Kutta method

<p>
 <a href="appendixb.htm#rk4">rk4</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rk4.f">subprogram</a>,
<a href="../f77/xmp8/rkm.f">example</a>)
<br>
One step of integration using fourth-order Runge-Kutta method

<p>
 <a href="appendixb.htm#rkm">rkm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rkm.f">subprogram</a>,
<a href="../f77/xmp8/rkm.f">example</a>)
<br>
Initial value problem using fourth-order Runge-Kutta method with adaptive step size

<p>
 <a href="appendixb.htm#rkm">rkm_2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rkm_2.f">subprogram</a>,
<a href="../f77/xmp8/rkm_2.f">example</a>)
<br>
Initial value problem using second-order Runge-Kutta method with adaptive step size

<p>
 <a href="appendixb.htm#rls">rls</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rls.f">subprogram</a>,
<a href="../f77/xmp8/rls.f">example</a>)
<br>
Solve a linear inversion problem using regularised least squares technique

<p>
 <a href="appendixb.htm#rmk">rmk</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rmk.f">subprogram</a>,
<a href="../f77/xmp8/rmk.f">example</a>)
<br>
Evaluate a rational function at any point

<p>
 <a href="appendixb.htm#rmk1">rmk1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rmk1.f">subprogram</a>,
<a href="../f77/xmp8/rmk1.f">example</a>)
<br>
Evaluate a rational function at any point (constant term in denominator 1)

<p>
 <a href="appendixb.htm#rmkd">rmkd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rmkd.f">subprogram</a>,
<a href="../f77/xmp8/rmk.f">example</a>)
<br>
Evaluate a rational function and its derivative at any point

<p>
 <a href="appendixb.htm#rmkd1">rmkd1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rmkd1.f">subprogram</a>,
<a href="../f77/xmp8/rmk1.f">example</a>)
<br>
Evaluate a rational function and its derivative at any point (constant term in denominator 1)

<p>
 <a href="appendixb.htm#rombrg">rombrg</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/rombrg.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Romberg integration

<p>
 <a href="appendixb.htm#round">round</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/round.f">subprogram</a>,
<a href="../f77/xmp8/round.f">example</a>)
<br>
Rounding a floating-point number to a specified number of digits

<a name="cs"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#search">search</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/search.f">subprogram</a>,
<a href="../f77/xmp8/search.f">example</a>)
<br>
Locate complex zeros by looking for sign changes

<p>
 <a href="appendixb.htm#secanc">secanc</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secanc.f">subprogram</a>,
<a href="../f77/xmp8/secanc.f">example</a>)
<br>
Complex roots of a nonlinear equation using secant iteration

<p>
 <a href="appendixb.htm#secanc">secanc_2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secanc_2.f">subprogram</a>,
<a href="../f77/xmp8/muler2.f">example</a>)
<br>
Complex roots of a nonlinear equation using secant iteration with function in scaled form (f(x)=F(x) 2<sup>i(x)</sup>)

<p>
 <a href="appendixb.htm#secani">secani</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secani.f">subprogram</a>,
<a href="../f77/xmp8/secan_2.f">example</a>)
<br>
Solve a nonlinear equation using secant iteration (with reverse communication)

<p>
 <a href="appendixb.htm#secant">secant</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secant.f">subprogram</a>,
<a href="../f77/xmp8/realrt.f">example</a>)
<br>
Solve a nonlinear equation using secant iteration

<p>
 <a href="appendixb.htm#secan">secan_2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/secan_2.f">subprogram</a>,
<a href="../f77/xmp8/secan_2.f">example</a>)
<br>
Solve a nonlinear equation using secant iteration with function in scaled form (f(x)=F(x) 2<sup>i(x)</sup>)

<p>
 <a href="appendixb.htm#setmat">setmat</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/setmat.f">subprogram</a>,
<a href="../f77/xmp8/fdm.f">example</a>)
<br>
Generate finite difference matrix for a system of differential equations

<p>
 <a href="appendixb.htm#setmat">setmat_c</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/setmat_c.f">subprogram</a>,
<a href="../f77/xmp8/gevp_c.f">example</a>)
<br>
Generate finite difference matrix for a system of differential equations (complex version)

<p>
 <a href="appendixb.htm#shsort">shsort</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/shsort.f">subprogram</a>,
<a href="../f77/xmp8/median.f">example</a>)
<br>
Sorting an array in ascending order using shell sort algorithm


<p>
 <a href="appendixb.htm#simpl1">simpl1</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/simpl1.f">subprogram</a>,
<a href="../f77/xmp8/polyl1.f">example</a>)
<br>
Modified simplex method for LP problems in L<sub>1</sub>-approximation

<p>
 <a href="appendixb.htm#simplx">simplx</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/simplx.f">subprogram</a>,
<a href="../f77/xmp8/simplx.f">example</a>)
<br>
Solving a linear programming problem using simplex method

<p>
 <a href="appendixb.htm#simpx">simpx</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/simpx.f">subprogram</a>,
<a href="../f77/xmp8/simplx.f">example</a>)
<br>
Simplex method for a linear programming problem in the standard form

<p>
 <a href="appendixb.htm#simson">simson</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/simson.f">subprogram</a>,
<a href="../f77/xmp8/quad.f">example</a>)
<br>
Integration using Simpson's 1/3 rule

<p>
 <a href="appendixb.htm#smooth">smooth</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/smooth.f">subprogram</a>,
<a href="../f77/xmp8/smooth.f">example</a>)
<br>
Draw a smooth curve through a set of points using cubic spline

<p>
 <a href="appendixb.htm#sor">sor</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/sor.f">subprogram</a>,
<a href="../f77/xmp8/sor.f">example</a>)
<br>
Linear second-order elliptic equations using the successive over-relaxation (SOR) method

<p>
 <a href="appendixb.htm#sphbjn">sphbjn</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/sphbjn.f">subprogram</a>,
<a href="../f77/xmp8/bessel.f">example</a>)
<br>
Calculate spherical Bessel function of integral order, j<sub>n</sub>(x)

<p>
 <a href="appendixb.htm#sphnd">sphnd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/sphnd.f">subprogram</a>,
<a href="../f77/xmp8/multisp.f">example</a>)
<br>
To convert from hyper-spherical coordinates to Cartesian coordinates

<p>
 <a href="appendixb.htm#splevl">splevl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/splevl.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Evaluate the cubic spline and its derivatives at a specified point

<p>
 <a href="appendixb.htm#spline">spline</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/spline.f">subprogram</a>,
<a href="../f77/xmp8/interp.f">example</a>)
<br>
Calculate coefficients of interpolating cubic spline

<p>
 <a href="appendixb.htm#splint">splint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/splint.f">subprogram</a>,
<a href="../f77/xmp8/splint.f">example</a>)
<br>
Integrate a tabulated function using cubic spline

<p>
 <a href="appendixb.htm#strint">strint</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/strint.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using monomial rules with varying number of points 

<p>
 <a href="appendixb.htm#stroud">stroud</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/stroud.f">subprogram</a>,
<a href="../f77/xmp8/multi.f">example</a>)
<br>
Multiple integration using a specified monomial rule

<p>
 <a href="appendixb.htm#strt4">strt4</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/strt4.f">subprogram</a>,
<a href="../f77/xmp8/mstep.f">example</a>)
<br>
Starting values for multistep method using Runge-Kutta method

<p>
 <a href="appendixb.htm#sturm">sturm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/sturm.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Locate eigenvalues of a symmetric tridiagonal matrix using Sturm sequence 

<p>
 <a href="appendixb.htm#svd">svd</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/svd.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Singular value decomposition of a matrix

<p>
 <a href="appendixb.htm#svdevl">svdevl</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/svdevl.f">subprogram</a>,
<a href="../f77/xmp8/linear.f">example</a>)
<br>
Solve a system of linear equations using singular value decomposition

<a name="ct"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#tinvit">tinvit</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/tinvit.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Eigenvalue and eigenvector of a symmetric tridiagonal matrix using inverse iteration 

<p>
 <a href="appendixb.htm#tql2">tql2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/tql2.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Eigenvalue problem for a symmetric tridiagonal matrix using QL-algorithm

<p>
 <a href="appendixb.htm#trbak">trbak</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/trbak.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Back-transform eigenvectors of tridiagonal matrix to original matrix

<p>
 <a href="appendixb.htm#tred2">tred2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/tred2.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Reduction of a real symmetric matrix to symmetric tridiagonal form using Householder transformations

<p>
 <a href="appendixb.htm#tridia">tridia</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/tridia.f">subprogram</a>,
<a href="../f77/xmp8/realsy.f">example</a>)
<br>
Specified eigenvalues and eigenvectors of a symmetric tridiagonal matrix using Sturm sequence and inverse iteration

<a name="cv"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#volt">volt</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/volt.f">subprogram</a>,
<a href="../f77/xmp8/volt.f">example</a>)
<br>
Solve a linear Volterra equation using trapezoidal rule

<p>
 <a href="appendixb.htm#volt2">volt2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/volt2.f">subprogram</a>,
<a href="../f77/xmp8/volt2.f">example</a>)
<br>
Solve a nonlinear Volterra equation of the second kind using Simpson's rule

<a name="cy"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#ylm">ylm</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ylm.f">subprogram</a>,
<a href="../f77/xmp8/ylm.f">example</a>)
<br>
Calculate the spherical harmonic, Y<sub><i>l</i></sub><sup>m</sup>(&#952;
, &#966;)

<p>
 <a href="appendixb.htm#ylm">ylm_x</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/ylm_x.f">subprogram</a>,
<a href="../f77/xmp8/ylm.f">example</a>)
<br>
Calculate the spherical harmonic, Y<sub><i>l</i></sub><sup>m</sup>(cos&#952;
, &#966;)

<a name="cz"> </a>
<p>
<br /><br />
 <a href="appendixb.htm#zroot">zroot</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/zroot.f">subprogram</a>,
<a href="../f77/xmp8/muller.f">example</a>)
<br>
Complex roots of a nonlinear equation with deflation

<p>
 <a href="appendixb.htm#zroot2">zroot2</a>&nbsp;&nbsp;&nbsp; (<a href="../f77/sub8/zroot2.f">subprogram</a>,
<a href="../f77/xmp8/muler2.f">example</a>)
<br>
Complex roots of a nonlinear equation with deflation, function value in scaled form, f(x)&times;2<sup>i(x)</sup>

<p>
<br>
<br>
<br>
&nbsp;<a href="readme.htm">doc</a>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="../c/readme.htm">C programs</a>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="../f77/readme.htm">Fortran programs</a>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="../readme.htm">[Home]</a>
<p>
    

<p>

<br /><br /><hr /><small>File translated from
T<sub><font size="-1">E</font></sub>X
by <a href="http://hutchinson.belmont.ma.us/tth/">
T<sub><font size="-1">T</font></sub>H</a>,
version 3.02.<br />On 14 Nov 2001, 18:31.</small>
</html>
