<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
           "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<meta name="GENERATOR" content="TtH 3.02">
 <style type="text/css"><!--
 td div.comp { margin-top: -0.6ex; margin-bottom: -1ex;}
 td div.comb { margin-top: -0.6ex; margin-bottom: -.6ex;}
 td div.hrcomp { line-height: 0.9; margin-top: -0.8ex; margin-bottom: -1ex;}
 td div.norm {line-height:normal;}
 span.roman {font-family: serif; font-style: normal; font-weight: normal;} 
 span.overacc2 {position: relative;  left: .8em; top: -1.2ex;}
 span.overacc1 {position: relative;  left: .6em; top: -1.2ex;} --></style>
<title>c/fun/funlst</title>
  

<body>

<a name="top"> </a>
Chapter <a href="#ch2">2</a>,&nbsp;&nbsp;
<a href="#ch3">3</a>,&nbsp;&nbsp;
<a href="#ch4">4</a>,&nbsp;&nbsp;
<a href="#ch5">5</a>,&nbsp;&nbsp;
<a href="#ch6">6</a>,&nbsp;&nbsp;
<a href="#ch7">7</a>,&nbsp;&nbsp;
<a href="#ch8">8</a>,&nbsp;&nbsp;
<a href="#ch9">9</a>,&nbsp;&nbsp;
<a href="#ch10">10</a>,&nbsp;&nbsp;
<a href="#ch11">11</a>,&nbsp;&nbsp;
<a href="#ch12">12</a>,&nbsp;&nbsp;
<a href="#ch13">13</a>,&nbsp;&nbsp;
<a href="#ch14">14</a>,&nbsp;&nbsp;
<p>

<center><font size=+1><b>Subject wise list of C Functions</b></font>
</center>

<p>
<br>
<br>





<a name="ch2"> </a>
<p>
<b>Chapter 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Roundoff Error</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>
 <a href="../../doc/appc.htm#cassum">cassum</a>&nbsp;&nbsp;&nbsp; (<a href="cassum.c">function</a>,
<a href="../xmp/sum.c">example</a>)
<br>
Cascade sum of a finite series using a function to calculate the terms

<p>
 <a href="../../doc/appc.htm#cassum">cassum_a</a>&nbsp;&nbsp;&nbsp; (<a href="cassum_a.c">function</a>,
<a href="../xmp/sum_a.c">example</a>)
<br>
Cascade sum of a finite series using an array to supply the terms

<p>
 <a href="../../doc/appc.htm#round">round</a>&nbsp;&nbsp;&nbsp; (<a href="round.c">function</a>,
<a href="../xmp/round.c">example</a>)
<br>
Rounding a floating-point number to a specified number of digits

<p>
 <a href="../../doc/appc.htm#cabs">cabs</a>&nbsp;&nbsp;&nbsp; (<a href="cabs.c">function</a>,
<a href="../xmp/gauswt.c">example</a>)
<br>
Absolute value of a complex number

<p>
 <a href="../../doc/appc.htm#cdiv">cdiv</a>&nbsp;&nbsp;&nbsp; (<a href="cdiv.c">function</a>,
<a href="../xmp/gauswt.c">example</a>)
<br>
Complex divison

<p>
 <a href="../../doc/appc.htm#csqrt">csqrt</a>&nbsp;&nbsp;&nbsp; (<a href="csqrt.c">function</a>,
<a href="../xmp/gauswt.c">example</a>)
<br>
Square root of a complex number

<a name="ch3"> </a>
<p>
<br /><br /><b>Chapter 3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Linear Algebraic Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#gauelm">gauelm</a>&nbsp;&nbsp;&nbsp; (<a href="gauelm.c">function</a>,
<a href="../xmp/linear.c">example</a>)
<br>
Solve a system of linear equations using Gaussian elimination 

<p>
 <a href="../../doc/appc.htm#matinv">matinv</a>&nbsp;&nbsp;&nbsp; (<a href="matinv.c">function</a>,
<a href="../xmp/matinv.c">example</a>)
<br>
Calculate inverse of a square matrix using Gaussian elimination

<p>
 <a href="../../doc/appc.htm#crout">crout</a>&nbsp;&nbsp;&nbsp; (<a href="crout.c">function</a>,
<a href="../xmp/linear.c">example</a>)
<br>
Solve a system of linear equations using Crout's algorithm

<p>
 <a href="../../doc/appc.htm#crouth">crouth</a>&nbsp;&nbsp;&nbsp; (<a href="crouth.c">function</a>,
<a href="../xmp/linear.c">example</a>)
<br>
Iterative refinement of solution of a system of linear equations

<p>
 <a href="../../doc/appc.htm#cholsk">cholsk</a>&nbsp;&nbsp;&nbsp; (<a href="cholsk.c">function</a>,
<a href="../xmp/linear.c">example</a>)
<br>
Solve a system of linear equations with symmetric positive definite matrix using Cholesky's decomposition

<p>
 <a href="../../doc/appc.htm#gaubnd">gaubnd</a>&nbsp;&nbsp;&nbsp; (<a href="gaubnd.c">function</a>,
<a href="../xmp/gaubnd.c">example</a>)
<br>
Solve a system of linear equations with a band matrix using Gaussian elimination with partial pivoting

<p>
 <a href="../../doc/appc.htm#svd">svd</a>&nbsp;&nbsp;&nbsp; (<a href="svd.c">function</a>,
<a href="../xmp/linear.c">example</a>)
<br>
Singular value decomposition of a matrix

<p>
 <a href="../../doc/appc.htm#svdevl">svdevl</a>&nbsp;&nbsp;&nbsp; (<a href="svdevl.c">function</a>,
<a href="../xmp/linear.c">example</a>)
<br>
Solve a system of linear equations using singular value decomposition

<a name="ch4"> </a>
<p>
<br /><br /><b>Chapter 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Interpolation</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#divdif">divdif</a>&nbsp;&nbsp;&nbsp; (<a href="divdif.c">function</a>,
<a href="../xmp/interp.c">example</a>)
<br>
Calculate interpolation and its derivatives using divided difference formula

<p>
 <a href="../../doc/appc.htm#divdif0">divdif0</a>&nbsp;&nbsp;&nbsp; (<a href="divdif0.c">function</a>,
<a href="../xmp/poly2.c">example</a>)
<br>
Divided difference interpolation formula (no derivatives version)

<p>
 <a href="../../doc/appc.htm#nearst">nearst</a>&nbsp;&nbsp;&nbsp; (<a href="nearst.c">function</a>,
<a href="../xmp/interp.c">example</a>)
<br>
Find nearest point in an ordered table using bisection

<p>
 <a href="../../doc/appc.htm#spline">spline</a>&nbsp;&nbsp;&nbsp; (<a href="spline.c">function</a>,
<a href="../xmp/interp.c">example</a>)
<br>
Calculate coefficients of interpolating cubic spline

<p>
 <a href="../../doc/appc.htm#splevl">splevl</a>&nbsp;&nbsp;&nbsp; (<a href="splevl.c">function</a>,
<a href="../xmp/interp.c">example</a>)
<br>
Evaluate the cubic spline and its derivatives at a specified point

<p>
 <a href="../../doc/appc.htm#smooth">smooth</a>&nbsp;&nbsp;&nbsp; (<a href="smooth.c">function</a>,
<a href="../xmp/smooth.c">example</a>)
<br>
Draw a smooth curve through a set of points using cubic spline

<p>
 <a href="../../doc/appc.htm#bsplin">bsplin</a>&nbsp;&nbsp;&nbsp; (<a href="bsplin.c">function</a>,
<a href="../xmp/interp.c">example</a>)
<br>
Calculate B-spline basis functions on a set of knots

<p>
 <a href="../../doc/appc.htm#bspint">bspint</a>&nbsp;&nbsp;&nbsp; (<a href="bspint.c">function</a>,
<a href="../xmp/interp.c">example</a>)
<br>
Calculate coefficients of B-spline interpolation

<p>
 <a href="../../doc/appc.htm#bspevl">bspevl</a>&nbsp;&nbsp;&nbsp; (<a href="bspevl.c">function</a>,
<a href="../xmp/interp.c">example</a>)
<br>
Evaluate function value and its derivatives using B-spline expansion

<p>
 <a href="../../doc/appc.htm#ratnal">ratnal</a>&nbsp;&nbsp;&nbsp; (<a href="ratnal.c">function</a>,
<a href="../xmp/interp.c">example</a>)
<br>
Calculate rational function interpolation

<p>
 <a href="../../doc/appc.htm#poly2">poly2</a>&nbsp;&nbsp;&nbsp; (<a href="poly2.c">function</a>,
<a href="../xmp/poly2.c">example</a>)
<br>
Calculate polynomial interpolation in two dimensions

<p>
 <a href="../../doc/appc.htm#linrn">linrn</a>&nbsp;&nbsp;&nbsp; (<a href="linrn.c">function</a>,
<a href="../xmp/linrn.c">example</a>)
<br>
Calculate linear interpolation in n dimensions

<p>
 <a href="../../doc/appc.htm#locate">locate</a>&nbsp;&nbsp;&nbsp; (<a href="locate.c">function</a>,
<a href="../xmp/linrn.c">example</a>)
<br>
Find the bracketing subinterval in an ordered table

<p>
 <a href="../../doc/appc.htm#bspint2">bspint2</a>&nbsp;&nbsp;&nbsp; (<a href="bspint2.c">function</a>,
<a href="../xmp/poly2.c">example</a>)
<br>
Calculate coefficients of B-spline interpolation in two dimensions

<p>
 <a href="../../doc/appc.htm#bspev2">bspev2</a>&nbsp;&nbsp;&nbsp; (<a href="bspev2.c">function</a>,
<a href="../xmp/poly2.c">example</a>)
<br>
Evaluate function value and derivatives using B-spline expansion in two dimensions

<p>
 <a href="../../doc/appc.htm#bspintn">bspintn</a>&nbsp;&nbsp;&nbsp; (<a href="bspintn.c">function</a>,
<a href="../xmp/bspintn.c">example</a>)
<br>
Calculate coefficients of B-spline interpolation in n dimensions

<p>
 <a href="../../doc/appc.htm#bspevn">bspevn</a>&nbsp;&nbsp;&nbsp; (<a href="bspevn.c">function</a>,
<a href="../xmp/bspintn.c">example</a>)
<br>
Evaluate function value using B-spline expansion in n dimensions

<p>
 <a href="../../doc/appc.htm#bspevn1">bspevn1</a>&nbsp;&nbsp;&nbsp; (<a href="bspevn1.c">function</a>,
<a href="../xmp/bspintn.c">example</a>)
<br>
Evaluate function value and first derivative using B-spline expansion in n dimensions

<p>
 <a href="../../doc/appc.htm#bspevn2">bspevn2</a>&nbsp;&nbsp;&nbsp; (<a href="bspevn2.c">function</a>,
<a href="../xmp/bspintn.c">example</a>)
<br>
Evaluate function value and first and second derivatives using B-spline expansion in n dimensions

<a name="ch5"> </a>
<p>
<br /><br /><b>Chapter 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Differentiation</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#drvt">drvt</a>&nbsp;&nbsp;&nbsp; (<a href="drvt.c">function</a>,
<a href="../xmp/drvt.c">example</a>)
<br>
Differentiation using h &#8594; 0 extrapolation

<a name="ch6"> </a>
<p>
<br /><br /><b>Chapter 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Integration</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#simson">simson</a>&nbsp;&nbsp;&nbsp; (<a href="simson.c">function</a>,
<a href="../xmp/quad.c">example</a>)
<br>
Integration using Simpson's 1/3 rule

<p>
 <a href="../../doc/appc.htm#splint">splint</a>&nbsp;&nbsp;&nbsp; (<a href="splint.c">function</a>,
<a href="../xmp/splint.c">example</a>)
<br>
Integrate a tabulated function using cubic spline

<p>
 <a href="../../doc/appc.htm#bspqd">bspqd</a>&nbsp;&nbsp;&nbsp; (<a href="bspqd.c">function</a>,
<a href="../xmp/splint.c">example</a>)
<br>
Integrate a B-spline expansion

<p>
 <a href="../../doc/appc.htm#rombrg">rombrg</a>&nbsp;&nbsp;&nbsp; (<a href="rombrg.c">function</a>,
<a href="../xmp/quad.c">example</a>)
<br>
Romberg integration

<p>
 <a href="../../doc/appc.htm#epsiln">epsiln</a>&nbsp;&nbsp;&nbsp; (<a href="epsiln.c">function</a>,
<a href="../xmp/quad.c">example</a>)
<br>
Integration using &#949;-algorithm

<p>
 <a href="../../doc/appc.htm#gauss">gauss</a>&nbsp;&nbsp;&nbsp; (<a href="gauss.c">function</a>,
<a href="../xmp/quad.c">example</a>)
<br>
Integration using Gauss-Legendre formula

<p>
 <a href="../../doc/appc.htm#gaucby">gaucby</a>&nbsp;&nbsp;&nbsp; (<a href="gaucby.c">function</a>,
<a href="../xmp/gaucby.c">example</a>)
<br>
Integration using Gauss-Chebyshev formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=1/[(x<font face="symbol">-</font
>A)(B<font face="symbol">-</font
	>x)]<sup>1/2</sup>
</dd></dl> <a href="../../doc/appc.htm#gaucb1">gaucb1</a>&nbsp;&nbsp;&nbsp; (<a href="gaucb1.c">function</a>,
<a href="../xmp/gaucb1.c">example</a>)
<br>
Integration using Gauss-Chebyshev formula  with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=[(x<font face="symbol">-</font >A)/(B<font face="symbol">-</font
	>x)]<sup>1/2</sup>
</dd></dl> <a href="../../doc/appc.htm#gaucb2">gaucb2</a>&nbsp;&nbsp;&nbsp; (<a href="gaucb2.c">function</a>,
<a href="../xmp/gaucb2.c">example</a>)
<br>
Integration using Gauss-Chebyshev formula  with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=[(x<font face="symbol">-</font >A)(B<font face="symbol">-</font
	>x)]<sup>1/2</sup>
</dd></dl> <a href="../../doc/appc.htm#gausq2">gausq2</a>&nbsp;&nbsp;&nbsp; (<a href="gausq2.c">function</a>,
<a href="../xmp/gausq.c">example</a>)
<br>
Integration over (0,A] with square root singularity using a combination of Gaussian formulas

<p>
 <a href="../../doc/appc.htm#gausq">gausq</a>&nbsp;&nbsp;&nbsp; (<a href="gausq.c">function</a>,
<a href="../xmp/gausq.c">example</a>)
<br>
Integration over (0,A] using Gaussian formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=x<sup>-1/2</sup>
</dd></dl> <a href="../../doc/appc.htm#gaulag">gaulag</a>&nbsp;&nbsp;&nbsp; (<a href="gaulag.c">function</a>,
<a href="../xmp/gaulag.c">example</a>)
<br>
Integration over [A,&#8734;) using a combination of Gaussian formulas

<p>
 <a href="../../doc/appc.htm#lagure">lagure</a>&nbsp;&nbsp;&nbsp; (<a href="lagure.c">function</a>,
<a href="../xmp/gaulag.c">example</a>)
<br>
Integration over [A,&#8734;) using Gauss-Laguerre formula

<p>
 <a href="../../doc/appc.htm#hermit">hermit</a>&nbsp;&nbsp;&nbsp; (<a href="hermit.c">function</a>,
<a href="../xmp/hermit.c">example</a>)
<br>
Integration over (<font face="symbol">-</font>&#8734;,&#8734;) using Gauss-Hermite formula

<p>
 <a href="../../doc/appc.htm#gaulg2">gaulg2</a>&nbsp;&nbsp;&nbsp; (<a href="gaulg2.c">function</a>,
<a href="../xmp/gaulog.c">example</a>)
<br>
Integration over (0,A] with logarithmic singularity using a combination of Gaussian formulas

<p>
 <a href="../../doc/appc.htm#gaulog">gaulog</a>&nbsp;&nbsp;&nbsp; (<a href="gaulog.c">function</a>,
<a href="../xmp/gaulog.c">example</a>)
<br>
Integration over (0,A] using Gaussian formula with weight function,

<dl compact="compact">
 <dt>
</dt>
<dd>
w(x)=ln(A/x)
</dd></dl> <a href="../../doc/appc.htm#gausrc">gausrc</a>&nbsp;&nbsp;&nbsp; (<a href="gausrc.c">function</a>,
<a href="../xmp/gausrc.c">example</a>)
<br>
Calculate weights and abscissas of Gaussian formula using recurrence relation of orthogonal polynomials

<p>
 <a href="../../doc/appc.htm#gauleg">gauleg</a>&nbsp;&nbsp;&nbsp; (<a href="gauleg.c">function</a>,
<a href="../xmp/gauleg.c">example</a>)
<br>
Calculate weights and abscissas of Gauss-Legendre quadrature formulas

<p>
 <a href="../../doc/appc.htm#gaujac">gaujac</a>&nbsp;&nbsp;&nbsp; (<a href="gaujac.c">function</a>,
<a href="../xmp/gaujac.c">example</a>)
<br>
Calculate weights and abscissas of Gauss-Jacobi quadrature formulas

<p>
 <a href="../../doc/appc.htm#lagurw">lagurw</a>&nbsp;&nbsp;&nbsp; (<a href="lagurw.c">function</a>,
<a href="../xmp/lagurw.c">example</a>)
<br>
Calculate weights and abscissas of Gauss-Laguerre quadrature formulas

<p>
 <a href="../../doc/appc.htm#gauher">gauher</a>&nbsp;&nbsp;&nbsp; (<a href="gauher.c">function</a>,
<a href="../xmp/gauher.c">example</a>)
<br>
Calculate weights and abscissas of Gauss-Hermite quadrature formulas

<p>
 <a href="../../doc/appc.htm#gauswt">gauswt</a>&nbsp;&nbsp;&nbsp; (<a href="gauswt.c">function</a>,
<a href="../xmp/gauswt.c">example</a>)
<br>
Calculate weights and abscissas of Gaussian formula using moments of weight function

<p>
 <a href="../../doc/appc.htm#filon">filon</a>&nbsp;&nbsp;&nbsp; (<a href="filon.c">function</a>,
<a href="../xmp/filon.c">example</a>)
<br>
Integration of an oscillatory function using Filon's formula

<p>
 <a href="../../doc/appc.htm#adpint">adpint</a>&nbsp;&nbsp;&nbsp; (<a href="adpint.c">function</a>,
<a href="../xmp/quad.c">example</a>)
<br>
Adaptive integration over a finite interval

<p>
 <a href="../../doc/appc.htm#kronrd">kronrd</a>&nbsp;&nbsp;&nbsp; (<a href="kronrd.c">function</a>,
<a href="../xmp/quad.c">example</a>)
<br>
Integration using Gauss-Kronrod formula for use with ADPINT

<p>
 <a href="../../doc/appc.htm#gaus16">gaus16</a>&nbsp;&nbsp;&nbsp; (<a href="gaus16.c">function</a>,
<a href="../xmp/adpint.c">example</a>)
<br>
Integration using 16 point Gauss-Legendre formula for use with ADPINT

<p>
 <a href="../../doc/appc.htm#cauchy">cauchy</a>&nbsp;&nbsp;&nbsp; (<a href="cauchy.c">function</a>,
<a href="../xmp/cauchy.c">example</a>)
<br>
Calculate Cauchy principal value of an integral

<p>
 <a href="../../doc/appc.htm#euler">euler</a>&nbsp;&nbsp;&nbsp; (<a href="euler.c">function</a>,
<a href="../xmp/euler.c">example</a>)
<br>
Summation of alternating series using Euler transformation

<p>
 <a href="../../doc/appc.htm#bspqd2">bspqd2</a>&nbsp;&nbsp;&nbsp; (<a href="bspqd2.c">function</a>,
<a href="../xmp/bspqd2.c">example</a>)
<br>
Integrate a B-spline expansion in two dimensions

<p>
 <a href="../../doc/appc.htm#bspqdn">bspqdn</a>&nbsp;&nbsp;&nbsp; (<a href="bspqdn.c">function</a>,
<a href="../xmp/bspqdn.c">example</a>)
<br>
Integrate a B-spline expansion in n dimensions

<p>
 <a href="../../doc/appc.htm#mulint">mulint</a>&nbsp;&nbsp;&nbsp; (<a href="mulint.c">function</a>,
<a href="../xmp/multi.c">example</a>)
<br>
Multiple integration using product Gauss rule with varying number of points 

<p>
 <a href="../../doc/appc.htm#ngauss">ngauss</a>&nbsp;&nbsp;&nbsp; (<a href="ngauss.c">function</a>,
<a href="../xmp/multi.c">example</a>)
<br>
Multiple integration using a specified product Gauss rule

<p>
 <a href="../../doc/appc.htm#sphnd">sphnd</a>&nbsp;&nbsp;&nbsp; (<a href="sphnd.c">function</a>,
<a href="../xmp/multisp.c">example</a>)
<br>
To convert from hyper-spherical coordinates to Cartesian coordinates

<p>
 <a href="../../doc/appc.htm#strint">strint</a>&nbsp;&nbsp;&nbsp; (<a href="strint.c">function</a>,
<a href="../xmp/multi.c">example</a>)
<br>
Multiple integration using monomial rules with varying number of points 

<p>
 <a href="../../doc/appc.htm#stroud">stroud</a>&nbsp;&nbsp;&nbsp; (<a href="stroud.c">function</a>,
<a href="../xmp/multi.c">example</a>)
<br>
Multiple integration using a specified monomial rule

<p>
 <a href="../../doc/appc.htm#mcarlo">mcarlo</a>&nbsp;&nbsp;&nbsp; (<a href="mcarlo.c">function</a>,
<a href="../xmp/multi.c">example</a>)
<br>
Multiple integration using Monte Carlo method

<p>
 <a href="../../doc/appc.htm#ran1">ran1</a>&nbsp;&nbsp;&nbsp; (<a href="ran1.c">function</a>,
<a href="../xmp/gaubnd.c">example</a>)
<br>
Generate a sequence of random numbers with uniform distribution

<p>
 <a href="../../doc/appc.htm#ranf">ranf</a>&nbsp;&nbsp;&nbsp; (<a href="ranf.c">function</a>,
<a href="../xmp/multi.c">example</a>)
<br>
Generate a sequence of random numbers with uniform distribution

<p>
 <a href="../../doc/appc.htm#equids">equids</a>&nbsp;&nbsp;&nbsp; (<a href="equids.c">function</a>,
<a href="../xmp/multi.c">example</a>)
<br>
Multiple integration using equidistributed sequences

<a name="ch7"> </a>
<p>
<br /><br /><b>Chapter 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Nonlinear Algebraic Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#bisect">bisect</a>&nbsp;&nbsp;&nbsp; (<a href="bisect.c">function</a>,
<a href="../xmp/realrt.c">example</a>)
<br>
Solve a nonlinear equation using bisection

<p>
 <a href="../../doc/appc.htm#secant">secant</a>&nbsp;&nbsp;&nbsp; (<a href="secant.c">function</a>,
<a href="../xmp/realrt.c">example</a>)
<br>
Solve a nonlinear equation using secant iteration

<p>
 <a href="../../doc/appc.htm#secant">secan_2</a>&nbsp;&nbsp;&nbsp; (<a href="secan_2.c">function</a>,
<a href="../xmp/secan_2.c">example</a>)
<br>
Solve a nonlinear equation using secant iteration with function in scaled form (f(x)=F(x) 2<sup>i(x)</sup>)

<p>
 <a href="../../doc/appc.htm#secani">secani</a>&nbsp;&nbsp;&nbsp; (<a href="secani.c">function</a>,
<a href="../xmp/secan_2.c">example</a>)
<br>
Solve a nonlinear equation using secant iteration (with reverse communication)

<p>
 <a href="../../doc/appc.htm#newrap">newrap</a>&nbsp;&nbsp;&nbsp; (<a href="newrap.c">function</a>,
<a href="../xmp/newrap.c">example</a>)
<br>
Solve a nonlinear equation using Newton-Raphson method

<p>
 <a href="../../doc/appc.htm#brent">brent</a>&nbsp;&nbsp;&nbsp; (<a href="brent.c">function</a>,
<a href="../xmp/realrt.c">example</a>)
<br>
Solve a nonlinear equation using Brent's method

<p>
 <a href="../../doc/appc.htm#search">search</a>&nbsp;&nbsp;&nbsp; (<a href="search.c">function</a>,
<a href="../xmp/search.c">example</a>)
<br>
Locate complex zeros by looking for sign changes

<p>
 <a href="../../doc/appc.htm#zroot">zroot</a>&nbsp;&nbsp;&nbsp; (<a href="zroot.c">function</a>,
<a href="../xmp/muller.c">example</a>)
<br>
Complex roots of a nonlinear equation with deflation

<p>
 <a href="../../doc/appc.htm#zroot2">zroot2</a>&nbsp;&nbsp;&nbsp; (<a href="zroot2.c">function</a>,
<a href="../xmp/muler2.c">example</a>)
<br>
Complex roots of a nonlinear equation with deflation, function value in scaled form, f(x)&times;2<sup>i(x)</sup>

<p>
 <a href="../../doc/appc.htm#muller">muller</a>&nbsp;&nbsp;&nbsp; (<a href="muller.c">function</a>,
<a href="../xmp/muller.c">example</a>)
<br>
Complex root using Muller's method

<p>
 <a href="../../doc/appc.htm#muler2">muler2</a>&nbsp;&nbsp;&nbsp; (<a href="muler2.c">function</a>,
<a href="../xmp/muler2.c">example</a>)
<br>
Complex root using Muller's method with function value in a scaled form, f(x)&times;2<sup>i(x)</sup>

<p>
 <a href="../../doc/appc.htm#polyr">polyr</a>&nbsp;&nbsp;&nbsp; (<a href="polyr.c">function</a>,
<a href="../xmp/polyr.c">example</a>)
<br>
All roots of a polynomial with real coefficients

<p>
 <a href="../../doc/appc.htm#lagitr">lagitr</a>&nbsp;&nbsp;&nbsp; (<a href="lagitr.c">function</a>,
<a href="../xmp/polyr.c">example</a>)
<br>
One root of a polynomial with real coefficients using Laguerre's method

<p>
 <a href="../../doc/appc.htm#davidn">davidn</a>&nbsp;&nbsp;&nbsp; (<a href="davidn.c">function</a>,
<a href="../xmp/newton.c">example</a>)
<br>
Solve a system of nonlinear equations using Davidenko's method coupled with Newton's method

<p>
 <a href="../../doc/appc.htm#davidn">davidn_b</a>&nbsp;&nbsp;&nbsp; (<a href="davidn_b.c">function</a>,
<a href="../xmp/broydn.c">example</a>)
<br>
Solve a system of nonlinear equations using Davidenko's method coupled with Broyden's method

<p>
 <a href="../../doc/appc.htm#newton">newton</a>&nbsp;&nbsp;&nbsp; (<a href="newton.c">function</a>,
<a href="../xmp/newton.c">example</a>)
<br>
Solve a system of nonlinear equations using Newton's method

<p>
 <a href="../../doc/appc.htm#broydn">broydn</a>&nbsp;&nbsp;&nbsp; (<a href="broydn.c">function</a>,
<a href="../xmp/broydn.c">example</a>)
<br>
Solve a system of nonlinear equations using Broyden's method

<a name="ch8"> </a>
<p>
<br /><br /><b>Chapter 8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Optimisation</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#brackm">brackm</a>&nbsp;&nbsp;&nbsp; (<a href="brackm.c">function</a>,
<a href="../xmp/golden.c">example</a>)
<br>
Bracketing a minimum in one dimension

<p>
 <a href="../../doc/appc.htm#golden">golden</a>&nbsp;&nbsp;&nbsp; (<a href="golden.c">function</a>,
<a href="../xmp/golden.c">example</a>)
<br>
Minimisation in one dimension using golden section search

<p>
 <a href="../../doc/appc.htm#brentm">brentm</a>&nbsp;&nbsp;&nbsp; (<a href="brentm.c">function</a>,
<a href="../xmp/brentm.c">example</a>)
<br>
Minimisation in one dimension using Brent's method

<p>
 <a href="../../doc/appc.htm#davidm">davidm</a>&nbsp;&nbsp;&nbsp; (<a href="davidm.c">function</a>,
<a href="../xmp/davidm.c">example</a>)
<br>
Minimisation in one dimension using cubic Hermite interpolation

<p>
 <a href="../../doc/appc.htm#bfgs">bfgs</a>&nbsp;&nbsp;&nbsp; (<a href="bfgs.c">function</a>,
<a href="../xmp/bfgs.c">example</a>)
<br>
Minimisation in n dimensions using quasi-Newton method with BFGS formula

<p>
 <a href="../../doc/appc.htm#linmin">linmin</a>&nbsp;&nbsp;&nbsp; (<a href="linmin.c">function</a>,
<a href="../xmp/bfgs.c">example</a>)
<br>
Line search for quasi-Newton method

<p>
 <a href="../../doc/appc.htm#flnm">flnm</a>&nbsp;&nbsp;&nbsp; (<a href="flnm.c">function</a>,
<a href="../xmp/bfgs.c">example</a>)
<br>
Calculate the function value for line search for quasi-Newton method

<p>
 <a href="../../doc/appc.htm#nminf">nminf</a>&nbsp;&nbsp;&nbsp; (<a href="nminf.c">function</a>,
<a href="../xmp/nminf.c">example</a>)
<br>
Minimisation in n dimensions using direction set method

<p>
 <a href="../../doc/appc.htm#linmnf">linmnf</a>&nbsp;&nbsp;&nbsp; (<a href="linmnf.c">function</a>,
<a href="../xmp/nminf.c">example</a>)
<br>
Line search for direction set method

<p>
 <a href="../../doc/appc.htm#fln">fln</a>&nbsp;&nbsp;&nbsp; (<a href="fln.c">function</a>,
<a href="../xmp/nminf.c">example</a>)
<br>
Calculate the function value for line search for direction set method

<p>
 <a href="../../doc/appc.htm#simplx">simplx</a>&nbsp;&nbsp;&nbsp; (<a href="simplx.c">function</a>,
<a href="../xmp/simplx.c">example</a>)
<br>
Solving a linear programming problem using simplex method

<p>
 <a href="../../doc/appc.htm#simpx">simpx</a>&nbsp;&nbsp;&nbsp; (<a href="simpx.c">function</a>,
<a href="../xmp/simplx.c">example</a>)
<br>
Simplex method for a linear programming problem in the standard form

<a name="ch9"> </a>
<p>

<br /><br /><b>Chapter 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Statistical Inferences</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>
 <a href="../../doc/appc.htm#shsort">shsort</a>&nbsp;&nbsp;&nbsp; (<a href="shsort.c">function</a>,
<a href="../xmp/median.c">example</a>)
<br>
Sorting an array in ascending order using shell sort algorithm

<p>
 <a href="../../doc/appc.htm#gammap">gammap</a>&nbsp;&nbsp;&nbsp; (<a href="gammap.c">function</a>,
<a href="../xmp/betap.c">example</a>)
<br>
Calculate incomplete Gamma function

<p>
 <a href="../../doc/appc.htm#betap">betap</a>&nbsp;&nbsp;&nbsp; (<a href="betap.c">function</a>,
<a href="../xmp/betap.c">example</a>)
<br>
Calculate incomplete Beta function

<p>
 <a href="../../doc/appc.htm#betser">betser</a>&nbsp;&nbsp;&nbsp; (<a href="betser.c">function</a>,
<a href="../xmp/betap.c">example</a>)
<br>
Calculate incomplete Beta function using a power series approximation

<p>
 <a href="../../doc/appc.htm#betcon1">betcon1</a>&nbsp;&nbsp;&nbsp; (<a href="betcon1.c">function</a>,
<a href="../xmp/betap.c">example</a>)
<br>
Calculate incomplete Beta function using a continued fraction approximation

<p>
 <a href="../../doc/appc.htm#betcon">betcon</a>&nbsp;&nbsp;&nbsp; (<a href="betcon.c">function</a>,
<a href="../xmp/betap.c">example</a>)
<br>
Calculate incomplete Beta function using an alternative continued fraction approximation

<p>
 <a href="../../doc/appc.htm#betai">betai</a>&nbsp;&nbsp;&nbsp; (<a href="betai.c">function</a>,
<a href="../xmp/betap.c">example</a>)
<br>
Calculate incomplete Beta function by directly evaluating the integral

<p>
 <a href="../../doc/appc.htm#fbeta">fbeta</a>&nbsp;&nbsp;&nbsp; (<a href="fbeta.c">function</a>,
<a href="../xmp/betap.c">example</a>)
<br>
Calculate the integrand for BETAI

<p>
 <a href="../../doc/appc.htm#rangau">rangau</a>&nbsp;&nbsp;&nbsp; (<a href="rangau.c">function</a>,
<a href="../xmp/polfit.c">example</a>)
<br>
Generate a sequence of random numbers with Gaussian distribution

<p>
 <a href="../../doc/appc.htm#iranbin">iranbin</a>&nbsp;&nbsp;&nbsp; (<a href="iranbin.c">function</a>,
<a href="../xmp/binom.c">example</a>)
<br>
Generate a sequence of random numbers with binomial distribution

<p>
 <a href="../../doc/appc.htm#iranpoi">iranpoi</a>&nbsp;&nbsp;&nbsp; (<a href="iranpoi.c">function</a>,
<a href="../xmp/poisson.c">example</a>)
<br>
Generate a sequence of random numbers with Poisson distribution

<p>
 <a href="../../doc/appc.htm#pcor">pcor</a>&nbsp;&nbsp;&nbsp; (<a href="pcor.c">function</a>,
<a href="../xmp/pcor.c">example</a>)
<br>
Calculate the probability that two uncorrelated sequences will give a correlation coefficient exceeding a given value

<a name="ch10"> </a>
<p>

<br /><br /><b>Chapter 10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Functional Approximations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#polfit">polfit</a>&nbsp;&nbsp;&nbsp; (<a href="polfit.c">function</a>,
<a href="../xmp/polfit.c">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials

<p>
 <a href="../../doc/appc.htm#polevl">polevl</a>&nbsp;&nbsp;&nbsp; (<a href="polevl.c">function</a>,
<a href="../xmp/polfit.c">example</a>)
<br>
Evaluate the fitted polynomial and its derivatives at a specified point

<p>
 <a href="../../doc/appc.htm#polfit1">polfit1</a>&nbsp;&nbsp;&nbsp; (<a href="polfit1.c">function</a>,
<a href="../xmp/polfit2.c">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials, simplified version for multiple data sets

<p>
 <a href="../../doc/appc.htm#polort">polort</a>&nbsp;&nbsp;&nbsp; (<a href="polort.c">function</a>,
<a href="../xmp/polfit2.c">example</a>)
<br>
Evaluate the orthogonal polynomial basis functions at a given point

<p>
 <a href="../../doc/appc.htm#polfit2">polfit2</a>&nbsp;&nbsp;&nbsp; (<a href="polfit2.c">function</a>,
<a href="../xmp/polfit2.c">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials in two dimensions

<p>
 <a href="../../doc/appc.htm#polev2">polev2</a>&nbsp;&nbsp;&nbsp; (<a href="polev2.c">function</a>,
<a href="../xmp/polfit2.c">example</a>)
<br>
Evaluate the fitted polynomial and its derivatives at a specified point in two dimensions

<p>
 <a href="../../doc/appc.htm#polfitn">polfitn</a>&nbsp;&nbsp;&nbsp; (<a href="polfitn.c">function</a>,
<a href="../xmp/polfitn.c">example</a>)
<br>
Least squares polynomial fit using orthogonal polynomials in n dimensions

<p>
 <a href="../../doc/appc.htm#polevn">polevn</a>&nbsp;&nbsp;&nbsp; (<a href="polevn.c">function</a>,
<a href="../xmp/polfitn.c">example</a>)
<br>
Evaluate the fitted polynomial at a specified point in n dimensions

<p>
 <a href="../../doc/appc.htm#polevn1">polevn1</a>&nbsp;&nbsp;&nbsp; (<a href="polevn1.c">function</a>,
<a href="../xmp/polfitn.c">example</a>)
<br>
Evaluate the fitted polynomial and first derivative at a specified point in n dimensions

<p>
 <a href="../../doc/appc.htm#polevn2">polevn2</a>&nbsp;&nbsp;&nbsp; (<a href="polevn2.c">function</a>,
<a href="../xmp/polfitn.c">example</a>)
<br>
Evaluate the fitted polynomial and first and second derivatives at a specified point in n dimensions

<p>
 <a href="../../doc/appc.htm#llsq">llsq</a>&nbsp;&nbsp;&nbsp; (<a href="llsq.c">function</a>,
<a href="../xmp/llsq.c">example</a>)
<br>
Linear least squares fit in n dimensions to a user defined set of basis functions

<p>
 <a href="../../doc/appc.htm#bspfit">bspfit</a>&nbsp;&nbsp;&nbsp; (<a href="bspfit.c">function</a>,
<a href="../xmp/bspfit.c">example</a>)
<br>
Least squares fit to B-spline basis functions in one dimension

<p>
 <a href="../../doc/appc.htm#bspfit2">bspfit2</a>&nbsp;&nbsp;&nbsp; (<a href="bspfit2.c">function</a>,
<a href="../xmp/bspfit2.c">example</a>)
<br>
Least squares fit to B-spline basis in two dimensions with equal weights

<p>
 <a href="../../doc/appc.htm#bspfitw2">bspfitw2</a>&nbsp;&nbsp;&nbsp; (<a href="bspfitw2.c">function</a>,
<a href="../xmp/bspfit2.c">example</a>)
<br>
Least squares fit to B-spline basis in two dimensions with arbitrary weights

<p>
 <a href="../../doc/appc.htm#bspfitn">bspfitn</a>&nbsp;&nbsp;&nbsp; (<a href="bspfitn.c">function</a>,
<a href="../xmp/bspfitn.c">example</a>)
<br>
Least squares fit to B-spline basis in n dimensions with equal weights

<p>
 <a href="../../doc/appc.htm#bspfitwn">bspfitwn</a>&nbsp;&nbsp;&nbsp; (<a href="bspfitwn.c">function</a>,
<a href="../xmp/bspfitn.c">example</a>)
<br>
Least squares fit to B-spline basis in n dimensions with arbitrary weights

<p>
 <a href="../../doc/appc.htm#linfitxy">linfitxy</a>&nbsp;&nbsp;&nbsp; (<a href="linfitxy.c">function</a>,
<a href="../xmp/linfitxy.c">example</a>)
<br>
Least squares straight line fit when there are errors in both x and y values

<p>
 <a href="../../doc/appc.htm#nllsq">nllsq</a>&nbsp;&nbsp;&nbsp; (<a href="nllsq.c">function</a>,
<a href="../xmp/nllsq.c">example</a>)
<br>
Calculate the Chi square function for a nonlinear least squares fit using quasi Newton method (BFGS)

<p>
 <a href="../../doc/appc.htm#nllsq">nllsq_f</a>&nbsp;&nbsp;&nbsp; (<a href="nllsq_f.c">function</a>,
<a href="../xmp/nllsq_f.c">example</a>)
<br>
Calculate the Chi square function for a nonlinear least squares fit using direction set method (NMINF)

<p>
 <a href="../../doc/appc.htm#dft">dft</a>&nbsp;&nbsp;&nbsp; (<a href="dft.c">function</a>,
<a href="../xmp/fft.c">example</a>)
<br>
Discrete Fourier transform of complex data with arbitrary number of points

<p>
 <a href="../../doc/appc.htm#fft">fft</a>&nbsp;&nbsp;&nbsp; (<a href="fft.c">function</a>,
<a href="../xmp/fft.c">example</a>)
<br>
Fast Fourier transform of complex data

<p>
 <a href="../../doc/appc.htm#fftr">fftr</a>&nbsp;&nbsp;&nbsp; (<a href="fftr.c">function</a>,
<a href="../xmp/fftr.c">example</a>)
<br>
Fast Fourier transform of real data

<p>
 <a href="../../doc/appc.htm#fftn">fftn</a>&nbsp;&nbsp;&nbsp; (<a href="fftn.c">function</a>,
<a href="../xmp/fftn.c">example</a>)
<br>
Fast Fourier transform of complex data in n dimensions

<p>
 <a href="../../doc/appc.htm#lapinv">lapinv</a>&nbsp;&nbsp;&nbsp; (<a href="lapinv.c">function</a>,
<a href="../xmp/lapinv.c">example</a>)
<br>
Inverse Laplace transform

<p>
 <a href="../../doc/appc.htm#pold">pold</a>&nbsp;&nbsp;&nbsp; (<a href="pold.c">function</a>,
<a href="../xmp/pold.c">example</a>)
<br>
Evaluate a polynomial and its derivative at any point

<p>
 <a href="../../doc/appc.htm#rmk">rmk</a>&nbsp;&nbsp;&nbsp; (<a href="rmk.c">function</a>,
<a href="../xmp/rmk.c">example</a>)
<br>
Evaluate a rational function at any point

<p>
 <a href="../../doc/appc.htm#rmk1">rmk1</a>&nbsp;&nbsp;&nbsp; (<a href="rmk1.c">function</a>,
<a href="../xmp/rmk1.c">example</a>)
<br>
Evaluate a rational function at any point (constant term in denominator 1)

<p>
 <a href="../../doc/appc.htm#rmkd">rmkd</a>&nbsp;&nbsp;&nbsp; (<a href="rmkd.c">function</a>,
<a href="../xmp/rmk.c">example</a>)
<br>
Evaluate a rational function and its derivative at any point

<p>
 <a href="../../doc/appc.htm#rmkd1">rmkd1</a>&nbsp;&nbsp;&nbsp; (<a href="rmkd1.c">function</a>,
<a href="../xmp/rmk1.c">example</a>)
<br>
Evaluate a rational function and its derivative at any point (constant term in denominator 1)

<p>
 <a href="../../doc/appc.htm#pade">pade</a>&nbsp;&nbsp;&nbsp; (<a href="pade.c">function</a>,
<a href="../xmp/pade.c">example</a>)
<br>
Calculate coefficients of Pad&#233; approximations

<p>
 <a href="../../doc/appc.htm#chebcf">chebcf</a>&nbsp;&nbsp;&nbsp; (<a href="chebcf.c">function</a>,
<a href="../xmp/chebcf.c">example</a>)
<br>
Convert from power series to Chebyshev expansion and vice versa

<p>
 <a href="../../doc/appc.htm#chebex">chebex</a>&nbsp;&nbsp;&nbsp; (<a href="chebex.c">function</a>,
<a href="../xmp/chebex.c">example</a>)
<br>
Calculate the coefficients of Chebyshev expansion

<p>
 <a href="../../doc/appc.htm#chebap">chebap</a>&nbsp;&nbsp;&nbsp; (<a href="chebap.c">function</a>,
<a href="../xmp/chebap.c">example</a>)
<br>
Rational function approximation using Chebyshev polynomials

<p>
 <a href="../../doc/appc.htm#remes">remes</a>&nbsp;&nbsp;&nbsp; (<a href="remes.c">function</a>,
<a href="../xmp/remes.c">example</a>)
<br>
Minimax approximation to mathematical functions using Remes algorithm

<p>
 <a href="../../doc/appc.htm#fm">fm</a>&nbsp;&nbsp;&nbsp; (<a href="fm.c">function</a>,
<a href="../xmp/remes.c">example</a>)
<br>
Calculate error in rational function approximation for use with REMES

<p>
 <a href="../../doc/appc.htm#gamma">gamma</a>&nbsp;&nbsp;&nbsp; (<a href="gamma.c">function</a>,
<a href="../xmp/gamma.c">example</a>)
<br>
Calculate Gamma function at real x, &#915;(x)

<p>
 <a href="../../doc/appc.htm#gammaln">gammaln</a>&nbsp;&nbsp;&nbsp; (<a href="gammaln.c">function</a>,
<a href="../xmp/gamma.c">example</a>)
<br>
Calculate natural logarithm of Gamma function at real x, ln<font face="symbol">|</font
>&#915;(x)<font face="symbol">|</font
>

<p>
 <a href="../../doc/appc.htm#erf">erf</a>&nbsp;&nbsp;&nbsp; (<a href="erf.c">function</a>,
<a href="../xmp/erf.c">example</a>)
<br>
Calculate Error function at real x

<p>
 <a href="../../doc/appc.htm#erfc">erfc</a>&nbsp;&nbsp;&nbsp; (<a href="erfc.c">function</a>,
<a href="../xmp/erf.c">example</a>)
<br>
Calculate complementary Error function at real x

<p>
 <a href="../../doc/appc.htm#bj0">bj0</a>&nbsp;&nbsp;&nbsp; (<a href="bj0.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate Bessel function of first kind of order zero, J<sub>0</sub>(x)

<p>
 <a href="../../doc/appc.htm#bj1">bj1</a>&nbsp;&nbsp;&nbsp; (<a href="bj1.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate Bessel function of first kind of order one, J<sub>1</sub>(x)

<p>
 <a href="../../doc/appc.htm#bjn">bjn</a>&nbsp;&nbsp;&nbsp; (<a href="bjn.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate Bessel function of first kind of integral order, J<sub>n</sub>(x)

<p>
 <a href="../../doc/appc.htm#by0">by0</a>&nbsp;&nbsp;&nbsp; (<a href="by0.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate Bessel function of second kind of order zero, Y<sub>0</sub>(x)

<p>
 <a href="../../doc/appc.htm#bjy0">bjy0</a>&nbsp;&nbsp;&nbsp; (<a href="bjy0.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate Bessel function of first and second kind of order zero

<p>
 <a href="../../doc/appc.htm#by1">by1</a>&nbsp;&nbsp;&nbsp; (<a href="by1.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate Bessel function of second kind of order one, Y<sub>1</sub>(x)

<p>
 <a href="../../doc/appc.htm#bjy1">bjy1</a>&nbsp;&nbsp;&nbsp; (<a href="bjy1.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate Bessel function of first and second kind of order one

<p>
 <a href="../../doc/appc.htm#byn">byn</a>&nbsp;&nbsp;&nbsp; (<a href="byn.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate Bessel function of second kind of integral order, Y<sub>n</sub>(x)

<p>
 <a href="../../doc/appc.htm#sphbjn">sphbjn</a>&nbsp;&nbsp;&nbsp; (<a href="sphbjn.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate spherical Bessel function of integral order, j<sub>n</sub>(x)

<p>
 <a href="../../doc/appc.htm#bi0">bi0</a>&nbsp;&nbsp;&nbsp; (<a href="bi0.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate modified Bessel function of first kind of order zero, I<sub>0</sub>(x)

<p>
 <a href="../../doc/appc.htm#bi1">bi1</a>&nbsp;&nbsp;&nbsp; (<a href="bi1.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate modified Bessel function of first kind of order one, I<sub>1</sub>(x)

<p>
 <a href="../../doc/appc.htm#bin">bin</a>&nbsp;&nbsp;&nbsp; (<a href="bin.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate modified Bessel function of first kind of integral order, I<sub>n</sub>(x)

<p>
 <a href="../../doc/appc.htm#bk0">bk0</a>&nbsp;&nbsp;&nbsp; (<a href="bk0.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate modified Bessel function of second kind of order zero, K<sub>0</sub>(x)

<p>
 <a href="../../doc/appc.htm#bk1">bk1</a>&nbsp;&nbsp;&nbsp; (<a href="bk1.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate modified Bessel function of second kind of order one, K<sub>1</sub>(x)

<p>
 <a href="../../doc/appc.htm#bkn">bkn</a>&nbsp;&nbsp;&nbsp; (<a href="bkn.c">function</a>,
<a href="../xmp/bessel.c">example</a>)
<br>
Calculate modified Bessel function of second kind of integral order, K<sub>n</sub>(x)

<p>
 <a href="../../doc/appc.htm#dawson">dawson</a>&nbsp;&nbsp;&nbsp; (<a href="dawson.c">function</a>,
<a href="../xmp/dawson.c">example</a>)
<br>
Calculate the value of Dawson's integral

<p>
 <a href="../../doc/appc.htm#fermm05">fermm05</a>&nbsp;&nbsp;&nbsp; (<a href="fermm05.c">function</a>,
<a href="../xmp/fermi.c">example</a>)
<br>
Calculate the Fermi integrals for k=<font face="symbol">-</font
>1/2

<p>
 <a href="../../doc/appc.htm#ferm05">ferm05</a>&nbsp;&nbsp;&nbsp; (<a href="ferm05.c">function</a>,
<a href="../xmp/fermi.c">example</a>)
<br>
Calculate the Fermi integrals for k=1/2

<p>
 <a href="../../doc/appc.htm#ferm15">ferm15</a>&nbsp;&nbsp;&nbsp; (<a href="ferm15.c">function</a>,
<a href="../xmp/fermi.c">example</a>)
<br>
Calculate the Fermi integrals for k=3/2

<p>
 <a href="../../doc/appc.htm#ferm25">ferm25</a>&nbsp;&nbsp;&nbsp; (<a href="ferm25.c">function</a>,
<a href="../xmp/fermi.c">example</a>)
<br>
Calculate the Fermi integrals for k=5/2

<p>
 <a href="../../doc/appc.htm#pleg">pleg</a>&nbsp;&nbsp;&nbsp; (<a href="pleg.c">function</a>,
<a href="../xmp/plm.c">example</a>)
<br>
Calculate the Legendre polynomial, P<sub><i>l</i></sub>(x)

<p>
 <a href="../../doc/appc.htm#plm">plm</a>&nbsp;&nbsp;&nbsp; (<a href="plm.c">function</a>,
<a href="../xmp/plm.c">example</a>)
<br>
Calculate the associated Legendre function, P<sub><i>l</i></sub><sup>m</sup>(x)

<p>
 <a href="../../doc/appc.htm#ylm">ylm</a>&nbsp;&nbsp;&nbsp; (<a href="ylm.c">function</a>,
<a href="../xmp/ylm.c">example</a>)
<br>
Calculate the spherical harmonic, Y<sub><i>l</i></sub><sup>m</sup>(&#952;,&#966;)

<p>
 <a href="../../doc/appc.htm#ylm">ylm_x</a>&nbsp;&nbsp;&nbsp; (<a href="ylm_x.c">function</a>,
<a href="../xmp/ylm.c">example</a>)
<br>
Calculate the spherical harmonic, Y<sub><i>l</i></sub><sup>m</sup>(cos&#952;,&#966;)

<p>
 <a href="../../doc/appc.htm#minmax">minmax</a>&nbsp;&nbsp;&nbsp; (<a href="minmax.c">function</a>,
<a href="../xmp/minmax.c">example</a>)
<br>
Rational function minimax approximation to discrete data

<p>
 <a href="../../doc/appc.htm#polyl1">polyl1</a>&nbsp;&nbsp;&nbsp; (<a href="polyl1.c">function</a>,
<a href="../xmp/polyl1.c">example</a>)
<br>
Polynomial L<sub>1</sub>-approximation to discrete data

<p>
 <a href="../../doc/appc.htm#linl1">linl1</a>&nbsp;&nbsp;&nbsp; (<a href="linl1.c">function</a>,
<a href="../xmp/polyl1.c">example</a>)
<br>
Linear L<sub>1</sub>-approximation to discrete data for arbitrary basis functions

<p>
 <a href="../../doc/appc.htm#simpl1">simpl1</a>&nbsp;&nbsp;&nbsp; (<a href="simpl1.c">function</a>,
<a href="../xmp/polyl1.c">example</a>)
<br>
Modified simplex method for LP problems in L<sub>1</sub>-approximation

<a name="ch11"> </a>
<p>
<br /><br /><b>Chapter 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Algebraic Eigenvalue Problem</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#invit">invit</a>&nbsp;&nbsp;&nbsp; (<a href="invit.c">function</a>,
<a href="../xmp/invit.c">example</a>)
<br>
Real eigenvalue and eigenvector of a real matrix using inverse iteration

<p>
 <a href="../../doc/appc.htm#invit">invit_l</a>&nbsp;&nbsp;&nbsp; (<a href="invit_l.c">function</a>,
<a href="../xmp/invit.c">example</a>)
<br>
Real eigenvalue and left-eigenvector of a real matrix using inverse iteration

<p>
 <a href="../../doc/appc.htm#tred2">tred2</a>&nbsp;&nbsp;&nbsp; (<a href="tred2.c">function</a>,
<a href="../xmp/realsy.c">example</a>)
<br>
Reduction of a real symmetric matrix to symmetric tridiagonal form using Householder transformations

<p>
 <a href="../../doc/appc.htm#trbak">trbak</a>&nbsp;&nbsp;&nbsp; (<a href="trbak.c">function</a>,
<a href="../xmp/realsy.c">example</a>)
<br>
Back-transform eigenvectors of tridiagonal matrix to original matrix

<p>
 <a href="../../doc/appc.htm#tql2">tql2</a>&nbsp;&nbsp;&nbsp; (<a href="tql2.c">function</a>,
<a href="../xmp/realsy.c">example</a>)
<br>
Eigenvalue problem for a symmetric tridiagonal matrix using QL-algorithm

<p>
 <a href="../../doc/appc.htm#tridia">tridia</a>&nbsp;&nbsp;&nbsp; (<a href="tridia.c">function</a>,
<a href="../xmp/realsy.c">example</a>)
<br>
Specified eigenvalues and eigenvectors of a symmetric tridiagonal matrix using Sturm sequence and inverse iteration

<p>
 <a href="../../doc/appc.htm#sturm">sturm</a>&nbsp;&nbsp;&nbsp; (<a href="sturm.c">function</a>,
<a href="../xmp/realsy.c">example</a>)
<br>
Locate eigenvalues of a symmetric tridiagonal matrix using Sturm sequence 

<p>
 <a href="../../doc/appc.htm#tinvit">tinvit</a>&nbsp;&nbsp;&nbsp; (<a href="tinvit.c">function</a>,
<a href="../xmp/realsy.c">example</a>)
<br>
Eigenvalue and eigenvector of a symmetric tridiagonal matrix using inverse iteration 

<p>
 <a href="../../doc/appc.htm#herevp">herevp</a>&nbsp;&nbsp;&nbsp; (<a href="herevp.c">function</a>,
<a href="../xmp/herevp.c">example</a>)
<br>
Eigenvalue problem for a complex Hermitian matrix

<p>
 <a href="../../doc/appc.htm#balanc">balanc</a>&nbsp;&nbsp;&nbsp; (<a href="balanc.c">function</a>,
<a href="../xmp/unsym.c">example</a>)
<br>
Balancing a general real matrix

<p>
 <a href="../../doc/appc.htm#balbak">balbak</a>&nbsp;&nbsp;&nbsp; (<a href="balbak.c">function</a>,
<a href="../xmp/unsym.c">example</a>)
<br>
Back-transform eigenvectors of balanced matrix to original matrix

<p>
 <a href="../../doc/appc.htm#balbak">balbak_l</a>&nbsp;&nbsp;&nbsp; (<a href="balbak_l.c">function</a>,
<a href="../xmp/unsyml.c">example</a>)
<br>
Back-transform left-eigenvectors of balanced matrix to original matrix

<p>
 <a href="../../doc/appc.htm#elmhes">elmhes</a>&nbsp;&nbsp;&nbsp; (<a href="elmhes.c">function</a>,
<a href="../xmp/unsym.c">example</a>)
<br>
Reduce a real matrix to Hessenberg form using Gaussian elimination

<p>
 <a href="../../doc/appc.htm#hqr">hqr</a>&nbsp;&nbsp;&nbsp; (<a href="hqr.c">function</a>,
<a href="../xmp/unsym.c">example</a>)
<br>
Eigenvalues of a Hessenberg matrix using QR-algorithm

<a name="ch12"> </a>
<p>
<br /><br /><b>Chapter 12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ordinary Differential Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#rkm">rkm</a>&nbsp;&nbsp;&nbsp; (<a href="rkm.c">function</a>,
<a href="../xmp/rkm.c">example</a>)
<br>
Initial value problem using fourth-order Runge-Kutta method with adaptive step size

<p>
 <a href="../../doc/appc.htm#rkm">rkm_2</a>&nbsp;&nbsp;&nbsp; (<a href="rkm_2.c">function</a>,
<a href="../xmp/rkm_2.c">example</a>)
<br>
Initial value problem using second-order Runge-Kutta method with adaptive step size

<p>
 <a href="../../doc/appc.htm#rk4">rk4</a>&nbsp;&nbsp;&nbsp; (<a href="rk4.c">function</a>,
<a href="../xmp/rkm.c">example</a>)
<br>
One step of integration using fourth-order Runge-Kutta method

<p>
 <a href="../../doc/appc.htm#rk2">rk2</a>&nbsp;&nbsp;&nbsp; (<a href="rk2.c">function</a>,
<a href="../xmp/rkm_2.c">example</a>)
<br>
One step of integration using second-order Runge-Kutta method

<p>
 <a href="../../doc/appc.htm#mstep">mstep</a>&nbsp;&nbsp;&nbsp; (<a href="mstep.c">function</a>,
<a href="../xmp/mstep.c">example</a>)
<br>
Initial value problem using predictor-corrector method with adaptive step size

<p>
 <a href="../../doc/appc.htm#adams">adams</a>&nbsp;&nbsp;&nbsp; (<a href="adams.c">function</a>,
<a href="../xmp/mstep.c">example</a>)
<br>
One step of integration using fourth-order Adams method

<p>
 <a href="../../doc/appc.htm#strt4">strt4</a>&nbsp;&nbsp;&nbsp; (<a href="strt4.c">function</a>,
<a href="../xmp/mstep.c">example</a>)
<br>
Starting values for multistep method using Runge-Kutta method

<p>
 <a href="../../doc/appc.htm#gear">gear</a>&nbsp;&nbsp;&nbsp; (<a href="gear.c">function</a>,
<a href="../xmp/mstep.c">example</a>)
<br>
One step of integration using fourth-order stiffly stable method

<p>
 <a href="../../doc/appc.htm#extp">extp</a>&nbsp;&nbsp;&nbsp; (<a href="extp.c">function</a>,
<a href="../xmp/extp.c">example</a>)
<br>
Initial value problem using extrapolation method 

<p>
 <a href="../../doc/appc.htm#fdm">fdm</a>&nbsp;&nbsp;&nbsp; (<a href="fdm.c">function</a>,
<a href="../xmp/fdm.c">example</a>)
<br>
Two-point boundary value problem using finite difference method

<p>
 <a href="../../doc/appc.htm#gevp">gevp</a>&nbsp;&nbsp;&nbsp; (<a href="gevp.c">function</a>,
<a href="../xmp/gevp.c">example</a>)
<br>
Eigenvalue problem in differential equations using finite differences

<p>
 <a href="../../doc/appc.htm#gaublk">gaublk</a>&nbsp;&nbsp;&nbsp; (<a href="gaublk.c">function</a>,
<a href="../xmp/fdm.c">example</a>)
<br>
Solve a system of linear equations involving finite difference matrix

<p>
 <a href="../../doc/appc.htm#setmat">setmat</a>&nbsp;&nbsp;&nbsp; (<a href="setmat.c">function</a>,
<a href="../xmp/fdm.c">example</a>)
<br>
Generate finite difference matrix for a system of differential equations

<p>
 <a href="../../doc/appc.htm#bspode">bspode</a>&nbsp;&nbsp;&nbsp; (<a href="bspode.c">function</a>,
<a href="../xmp/bspode.c">example</a>)
<br>
Two-point boundary value problem using expansion method with B-spline basis functions

<a name="ch13"> </a>
<p>
<br /><br /><b>Chapter 13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Integral Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#fred">fred</a>&nbsp;&nbsp;&nbsp; (<a href="fred.c">function</a>,
<a href="../xmp/fred.c">example</a>)
<br>
Solve a Fredholm equation using quadrature method

<p>
 <a href="../../doc/appc.htm#fredco">fredco</a>&nbsp;&nbsp;&nbsp; (<a href="fredco.c">function</a>,
<a href="../xmp/fredco.c">example</a>)
<br>
Solve a Fredholm equation using collocation method

<p>
 <a href="../../doc/appc.htm#funk">funk</a>&nbsp;&nbsp;&nbsp; (<a href="funk.c">function</a>,
<a href="../xmp/fredco.c">example</a>)
<br>
Integrand =K(x,t)<font face="symbol">f</font
><sub>j</sub>(t), for evaluating integrals in collocation method

<p>
 <a href="../../doc/appc.htm#rls">rls</a>&nbsp;&nbsp;&nbsp; (<a href="rls.c">function</a>,
<a href="../xmp/rls.c">example</a>)
<br>
Solve a linear inverse problem using regularised least squares technique

<p>
 <a href="../../doc/appc.htm#forw">forw</a>&nbsp;&nbsp;&nbsp; (<a href="forw.c">function</a>,
<a href="../xmp/rls.c">example</a>)
<br>
Solve the forward problem

<p>
 <a href="../../doc/appc.htm#volt">volt</a>&nbsp;&nbsp;&nbsp; (<a href="volt.c">function</a>,
<a href="../xmp/volt.c">example</a>)
<br>
Solve a linear Volterra equation using trapezoidal rule

<p>
 <a href="../../doc/appc.htm#volt2">volt2</a>&nbsp;&nbsp;&nbsp; (<a href="volt2.c">function</a>,
<a href="../xmp/volt2.c">example</a>)
<br>
Solve a nonlinear Volterra equation of the second kind using Simpson's rule

<a name="ch14"> </a>
<p>
<br /><br /><b>Chapter 14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Partial Differential Equations</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#top">[top]</a>

<p>

 <a href="../../doc/appc.htm#crank">crank</a>&nbsp;&nbsp;&nbsp; (<a href="crank.c">function</a>,
<a href="../xmp/crank.c">example</a>)
<br>
Linear  second-order parabolic equation using Crank-Nicolson method

<p>
 <a href="../../doc/appc.htm#lines">lines</a>&nbsp;&nbsp;&nbsp; (<a href="lines.c">function</a>,
<a href="../xmp/lines.c">example</a>)
<br>
Nonlinear parabolic equations using the method of lines

<p>
 <a href="../../doc/appc.htm#adm">adm</a>&nbsp;&nbsp;&nbsp; (<a href="adm.c">function</a>,
<a href="../xmp/adm.c">example</a>)
<br>
Parabolic equation in two space variables using alternating direction method

<p>
 <a href="../../doc/appc.htm#lax">lax</a>&nbsp;&nbsp;&nbsp; (<a href="lax.c">function</a>,
<a href="../xmp/lax.c">example</a>)
<br>
Nonlinear hyperbolic equations using the Lax-Wendroff method

<p>
 <a href="../../doc/appc.htm#sor">sor</a>&nbsp;&nbsp;&nbsp; (<a href="sor.c">function</a>,
<a href="../xmp/sor.c">example</a>)
<br>
Linear second-order elliptic equations using the successive over-relaxation (SOR) method

<p>
 <a href="../../doc/appc.htm#adi">adi</a>&nbsp;&nbsp;&nbsp; (<a href="adi.c">function</a>,
<a href="../xmp/adi.c">example</a>)
<br>
Linear second-order elliptic equations using the alternating direction implicit iterative (ADI) method

<p>
&nbsp;<a href="readme.htm">C functions</a>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="../../doc/readme.htm">Documents</a>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="../../f77/readme.htm">Fortran programs</a>
&nbsp;&nbsp;&nbsp;&nbsp;<a href="../../readme.htm">[Home]</a>


<p>

<br /><br /><hr /><small>File translated from
T<sub><font size="-1">E</font></sub>X
by <a href="http://hutchinson.belmont.ma.us/tth/">
T<sub><font size="-1">T</font></sub>H</a>,
version 3.02.<br />On 14 Nov 2001, 16:58.</small>
</html>
