#!/usr/bin/env bash

trap "exit 1" HUP INT QUIT TERM

set -e -u -o pipefail

CMD="$(basename $0)"
CMD_DIR="$(dirname $0)"
function usage {
    (echo "Usage: $CMD [-hnv] file..."
     echo "-h        Print this help message."
     echo "-n        Dry run. Don't execute commands."
     echo "-v        Verbose. Print extra information if appropriate."
     echo "Determine the interesting attributes of a Fortran file.") 1>&2
}

DRY_RUN=
VFLAG=
while getopts hnv OPTCHAR; do
    case $OPTCHAR in
        b)  BFLAG=1
            BVAL="$OPTARG";;
        h)  usage; exit 0;;
        n)  DRY_RUN=1;;
        v)  VFLAG=1;;
    esac
done

shift $(($OPTIND - 1))

case $# in
    0)  usage; exit 1;;
    *)  ;;
esac

for F in "$@"; do
    if "$CMD_DIR"/is-fixed-form "$F"; then
        FORM=fixed
    else
        FORM=free
    fi

    : echo DEBUG=1 FORM=$FORM

    # Use LC_ALL=C to avoid having to figure out what files
    # use ISO-8859 or Unicode in strings.
    LC_ALL=C gawk -v DEBUG=0 -v FORM=$FORM $'
    function dprint (n, s) {
        if (DEBUG >= n)
            print s >>"/dev/stderr"
    }
    BEGIN {
        NATTR = 0
        attr_name[NATTR++] = "lines"
        attr_name[NATTR++] = "maxlinelength"
        attr_name[NATTR++] = "cpreprocessor"
        attr_name[NATTR++] = "ccomment"
        attr_name[NATTR++] = "dcomment"
        attr_name[NATTR++] = "starcomment"
        attr_name[NATTR++] = "fixedbang"
        attr_name[NATTR++] = "continuations"
        attr_name[NATTR++] = "maxcontinuations"
        attr_name[NATTR++] = "text73"
        attr_name[NATTR++] = "text133"
        attr_name[NATTR++] = "ampcont"
        attr_name[NATTR++] = "ampampcont"
        attr_name[NATTR++] = "include"
        attr_name[NATTR++] = "openmpdir"
        attr_name[NATTR++] = "openaccdir"
        attr_name[NATTR++] = "otherdir"

        attr_cnt["linelength"] = 0

        if (DEBUG == "") DEBUG = 1
        dprint(1, "DEBUG=" DEBUG " FORM=" FORM)
    }

    { attr_cnt["lines"] = NR }

    length > attr_cnt["maxlinelength"] {
        attr_cnt["maxlinelength"] = length
        dprint(1, NR ": new maxlinelength " attr_cnt["maxlinelength"])
    }
    FORM == "fixed" && /^[Cc]/ {
        attr_cnt["ccomment"]++; dprint(2, NR ": ccomment")
    }
    FORM == "fixed" && /^[Dd]/ {
        attr_cnt["dcomment"]++; dprint(2, NR ": dcomment")
    }
    FORM == "fixed" && /^[*]/  {
        attr_cnt["starcomment"]++; dprint(2, NR ": starcomment")
    }

    FORM == "fixed" && /!/  {
        attr_cnt["fixedbang"]++; dprint(2, NR ": fixedbang")
    }

    FORM == "fixed" && length($0) > 72 && substr($0,73,8) != "        " {
        attr_cnt["text73"]++
        dprint(1, NR ": text73 " substr($0,73,8))
    }
    FORM == "fixed" && length($0) > 132 && substr($0,133,8) != "        " {
        attr_cnt["text133"]++
        dprint(1, NR ": text133 " substr($0,133,8))
    }

    FORM == "fixed" && /^     [^ 0]/ && prev_fixed_cont {
        attr_cnt["fixedcont"]++
        prev_fixed_cont++
        dprint(1, NR ": fixedcont " prev_fixed_cont)
    }
    FORM == "fixed" && /^     [^ 0]/ && !prev_fixed_cont {
        attr_cnt["fixedcont"]++
        prev_fixed_cont = 2
        dprint(1, NR ": fixedcont " prev_fixed_cont)
    }
    FORM == "fixed" && (/^     [ 0]/ || /^[CD*]/) {
        if (prev_fixed_cont > attr_cnt["maxcontinuations"]) {
            attr_cnt["maxcontinuations"] = prev_fixed_cont
            dprint(1, NR ": maxcontinuations " prev_fixed_cont)
        }
        prev_fixed_cont = 0
    }

    /^ *[Ii][Nn][Cc][Ll][Uu][Dd][Ee]  *[\'"]/ {
        attr_cnt["include"]++
        dprint(1, NR ": include")
    }

    /^ *# *define/ || /^ *# *undef/ || /^ *# *ifdef/ \
      || /^ *# *ifndef/ || /^ *# *if/ || /^ *# *elif/ || /^ *# *endif/ \
      || /^ *# *include/ {
        attr_cnt["cpreprocessor"]++
    }

    FREE && /^ *&/ && prev_free_cont {
        attr_cnt["ampampcont"]++
        prev_free_cont++
    }
    FREE && /&$/ {
        attr_cnt["ampcont"]++
        prev_free_cont = 1
    }
    FREE && /[^&]$/ {
        if (prev_free_cont > attr_cnt["maxcontinuations"]) {
            attr_cnt["maxcontinuations"] = prev_free_cont
        }
        prev_free_cont = 0
    }

    FORM == "fixed" && /^[cDd*!]\\$[Oo][Mm][Pp]/ {
        attr_cnt["openmpdir"]++
        dprint(1, NR ": openmpdir")
    }
    FORM == "fixed" && /^[CcDd*!]\\$[Aa][Cc][Cc]/ {
        attr_cnt["openaccdir"]++
        dprint(1, NR ": openaccdir")
    }
    FORM == "fixed" && /^[CcDd*!]\\$/ && ! /^[CcDd*!]\\$[Oo][Mm][Pp]/ && ! /^[CcDd*!]\$[Aa][Cc][Cc]/ {
        attr_cnt["otherdir"]++
        dprint(1, NR ": otherdir: " $0)
    }

    FORM == "free" && /![$][Oo][Mm][Pp]/ {
        attr_cnt["openmpdir"]++
        dprint(1, NR ": openmpdir")
    }
    FORM == "free" && /![$][Aa][Cc][Cc]/ {
        attr_cnt["openaccdir"]++
        dprint(1, NR ": openaccdir")
    }
    FORM == "free" && /![$]/ && ! /![$][Oo][Mm][Pp]/ && ! /![$][Aa][Cc][Cc]/ {
        attr_cnt["otherdir"]++
        dprint(1, NR ": otherdir: " $0)
    }

    END {
        printf "%s\tform:%s", FILENAME, FORM;
        for (i = 0; i < NATTR; i++) {
            if (attr_cnt[attr_name[i]]) {
                printf "\t%s:%d", attr_name[i], attr_cnt[attr_name[i]];
            }
        }
        print ""
    }
    ' "$F"
done
